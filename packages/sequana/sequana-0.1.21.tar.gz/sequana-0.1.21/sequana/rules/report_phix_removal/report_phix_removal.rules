


rule report_phix_removal:
    input:
        dag = "report/rulegraph.svg",
        conda = "report/requirements.txt",
        fastqc_phix = "fastqc__phix/fastqc.done",
        fastqc_samples = "fastqc__samples/fastqc.done",
        fastq_stats = "fastq_stats__samples/fastq_stats.done",
        fastq_phix = "fastq_stats__phix/fastq_stats.done",
    output:
        touch("logs/pipeline_phix_removal.done"),
        touch("report/report_phix_removal.html"),
    params:
        outdir = "report"
    run:

        description = """

        This is the output of the Phix removal pipeline. This pipeline
        search for a specific contaminant and provide as an output
        a pair of files with the contaminant (mapped) and without it (unmapped).
        The unmapped files are the files to be further analysed ( see links here
        below)

        """
        import os
        '''html = "<h3>Download Fastq without Phix: </h3>\n"
        for this in cfg.DATASET:
            basename = os.path.split(this)[1]
            name = basename.replace("_001.fastq.gz", "_.unmapped.fastq.gz")
            link = "bwa_bam_to_fastq" + os.sep + name
            html += '<br>-- <a href="%s">%s</a>' % (link, name)

        html += "<h3>Dowload Fastq with Phix </h3>\n"
        for this in cfg.DATASET:
            basename = os.path.split(this)[1]
            name = basename.replace("_001.fastq.gz", "_.mapped.fastq.gz")
            link = "bwa_bam_to_fastq"+ os.sep + name
            html += '<br>-- <a href="%s">%s</a>' % (link, name)
        s.jinja['output'] = html
        s.create_report()
        '''


