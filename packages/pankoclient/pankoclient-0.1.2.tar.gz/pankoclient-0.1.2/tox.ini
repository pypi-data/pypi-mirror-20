[tox]
minversion = 1.6
envlist = py35,py34,py27,pypy,pep8
skipsdist = True

[testenv]
usedevelop = True
setenv =
   VIRTUAL_ENV={envdir}
   PANKO_CLIENT_EXEC_DIR={envdir}/bin
   PANKO_ENDPOINT=http://localhost:8042
   GNOCCHI_ENDPOINT=http://localhost:8051
passenv = GNOCCHI_* PANKO_* OS_TEST_TIMEOUT OS_STDOUT_CAPTURE OS_STDERR_CAPTURE OS_LOG_CAPTURE
# NOTE(tonyb): This project has chosen to *NOT* consume upper-constraints.txt
deps =
    .[test]
    http://tarballs.openstack.org/panko/panko-master.tar.gz#egg=panko[mysql]
    http://tarballs.openstack.org/gnocchi/gnocchi-master.tar.gz#egg=gnocchi[postgresql,file]
commands = pifpaf run panko --gnocchi-create-legacy-resource-types -- python setup.py test --slowest --testr-args='{posargs}'

[testenv:pep8]
deps = hacking<0.13,>=0.12
commands = flake8

[testenv:venv]
# Used by openstack-infra to build the doc
deps = .[doc]
commands = {posargs}

[testenv:cover]
commands =
   python setup.py test --coverage --testr-args='{posargs}'
   coverage report

[testenv:releasenotes]
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:docs]
deps = .[doc]
commands =
   rm -rf doc/source/ref
   python setup.py build_sphinx

[testenv:debug]
commands = pifpaf --debug run panko --gnocchi-create-legacy-resource-types -- oslo_debug_helper {posargs}

[flake8]
show-source = True
exclude=.venv,.git,.tox,dist,doc,*egg,build
