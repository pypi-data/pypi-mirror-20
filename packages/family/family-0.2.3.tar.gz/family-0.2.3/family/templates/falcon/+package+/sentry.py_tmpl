# coding=utf8



import os
import falcon
import settings
import logging
import traceback

from raven import Client as SentryClient

if settings.SENTRY_PATH:
    client = SentryClient(settings.SENTRY_PATH)
else:
    client = None

current_dir = os.path.dirname(os.path.realpath(__file__)).split('/')[-1]
logger = logging.getLogger('%s.%s' % (current_dir, __name__))
logger.setLevel(logging.DEBUG)

handler = logging.FileHandler(settings.DEBUG_LOG_DIR)
handler.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(levelname)s\t%(asctime)s\t%(module)s %(process)d %(thread)d %(message)s')
handler.setFormatter(formatter)
logger.addHandler(handler)

def sentry_exception_handler(ex, req, resp, params):
    resp.status = falcon.HTTP_400
    resp.body = falcon.HTTPError(
            falcon.HTTP_400,
            code=1004,
            title='Server Internal Error',
            description=(str(ex.message))).to_dict()

    traceback.print_exc()
    if client:
        client.captureException()
