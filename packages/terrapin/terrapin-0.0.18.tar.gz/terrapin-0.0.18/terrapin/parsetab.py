
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'F106BA2E750A4FB1375EED1775C525D9'
    
_lr_action_items = {'QUOTEDSTRING':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,19,22,23,24,28,29,31,36,42,46,48,54,55,73,74,75,76,77,78,],[5,-10,-1,-12,5,-7,5,-9,-4,-6,-5,-8,-3,-11,5,5,-2,5,5,-16,-13,-15,5,-14,-24,-25,-17,60,61,-18,-19,-22,-23,-20,-21,]),'LT':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,19,22,23,24,28,29,31,36,42,45,46,48,73,74,75,76,77,78,],[1,-10,-1,-12,1,-7,1,-9,-4,-6,-5,-8,-3,-11,1,1,-2,1,1,-16,-13,-15,1,-14,-24,53,-25,-17,-18,-19,-22,-23,-20,-21,]),'RVARDELIM':([21,],[28,]),'LEN':([39,],[43,]),'EQ':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,19,22,23,24,28,29,31,36,42,44,45,46,48,73,74,75,76,77,78,],[14,-10,-1,-12,14,-7,14,-9,-4,-6,-5,-8,-3,-11,14,14,-2,14,14,-16,-13,-15,14,-14,-24,47,50,-25,-17,-18,-19,-22,-23,-20,-21,]),'RCODEDELIM':([38,41,44,67,68,69,70,71,72,],[42,46,48,73,74,75,76,77,78,]),'IF':([20,26,32,35,],[27,27,27,27,]),'$end':([1,2,3,5,6,8,9,10,11,12,13,14,19,24,28,29,36,46,],[-10,-1,-12,-7,0,-9,-4,-6,-5,-8,-3,-11,-2,-16,-13,-15,-14,-25,]),'LVARDELIM':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,19,22,23,24,28,29,31,36,42,46,48,73,74,75,76,77,78,],[15,-10,-1,-12,15,-7,15,-9,-4,-6,-5,-8,-3,-11,15,15,-2,15,15,-16,-13,-15,15,-14,-24,-25,-17,-18,-19,-22,-23,-20,-21,]),'STRING':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,19,22,23,24,28,29,31,36,42,46,48,73,74,75,76,77,78,],[11,-10,-1,-12,11,-7,11,-9,-4,-6,-5,-8,-3,-11,11,11,-2,11,11,-16,-13,-15,11,-14,-24,-25,-17,-18,-19,-22,-23,-20,-21,]),'INT':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,19,22,23,24,28,29,31,36,42,46,48,56,57,58,59,73,74,75,76,77,78,],[12,-10,-1,-12,12,-7,12,-9,-4,-6,-5,-8,-3,-11,12,12,-2,12,12,-16,-13,-15,12,-14,-24,-25,-17,62,62,62,62,-18,-19,-22,-23,-20,-21,]),'ENDIF':([32,35,],[37,37,]),'WORD':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,19,22,23,24,28,29,31,34,36,42,46,48,73,74,75,76,77,78,],[10,-10,-1,-12,10,-7,10,-9,-4,-6,-5,-8,-3,-11,21,10,10,-2,10,10,-16,-13,-15,10,39,-14,-24,-25,-17,-18,-19,-22,-23,-20,-21,]),'NE':([44,45,],[49,51,]),'ELSE':([26,32,],[33,33,]),'LCODEDELIM':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,19,22,23,24,28,29,31,36,42,46,48,73,74,75,76,77,78,],[7,-10,-1,-12,18,-7,7,-9,-4,-6,-5,-8,-3,-11,7,25,-2,30,7,-16,-13,-15,30,-14,-24,-25,-17,-18,-19,-22,-23,-20,-21,]),'GT':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,16,17,19,22,23,24,28,29,31,36,42,45,46,48,73,74,75,76,77,78,],[8,-10,-1,-12,8,-7,8,-9,-4,-6,-5,-8,-3,-11,8,8,-2,8,8,-16,-13,-15,8,-14,-24,52,-25,-17,-18,-19,-22,-23,-20,-21,]),'WS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,22,23,24,25,27,28,29,30,31,33,36,37,39,40,42,43,46,47,48,49,50,51,52,53,60,61,62,63,64,65,66,73,74,75,76,77,78,],[9,-10,-1,-12,9,-7,9,20,-9,-4,-6,-5,-8,-3,-11,9,9,26,-2,9,9,-16,32,34,-13,-15,35,9,38,-14,41,44,45,-24,-26,-25,54,-17,55,56,57,58,59,67,68,-27,69,70,71,72,-18,-19,-22,-23,-20,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'else':([4,17,],[16,23,]),'output_list':([0,4,16,23,],[6,17,22,31,]),'end_if':([17,22,31,],[24,29,36,]),'block':([0,4,6,16,17,22,23,31,],[13,13,13,13,13,13,13,13,]),'output':([0,4,6,16,17,22,23,31,],[2,2,19,2,19,19,2,19,]),'variable':([0,4,6,16,17,22,23,31,],[3,3,3,3,3,3,3,3,]),'cast_int':([56,57,58,59,],[63,64,65,66,]),'word_len':([34,],[40,]),'if_result':([0,4,6,16,17,22,23,31,],[4,4,4,4,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> output_list","S'",1,None,None,None),
  ('output_list -> output','output_list',1,'p_output_list_1','parser.py',26),
  ('output_list -> output_list output','output_list',2,'p_output_list_2','parser.py',31),
  ('output -> block','output',1,'p_output','parser.py',36),
  ('output -> WS','output',1,'p_output','parser.py',37),
  ('output -> STRING','output',1,'p_output','parser.py',38),
  ('output -> WORD','output',1,'p_output','parser.py',39),
  ('output -> QUOTEDSTRING','output',1,'p_output','parser.py',40),
  ('output -> INT','output',1,'p_output','parser.py',41),
  ('output -> GT','output',1,'p_output','parser.py',42),
  ('output -> LT','output',1,'p_output','parser.py',43),
  ('output -> EQ','output',1,'p_output','parser.py',44),
  ('output -> variable','output',1,'p_output','parser.py',45),
  ('variable -> LVARDELIM WORD RVARDELIM','variable',3,'p_variable','parser.py',50),
  ('block -> if_result output_list else output_list end_if','block',5,'p_if_else_statement','parser.py',54),
  ('block -> if_result else output_list end_if','block',4,'p_empty_if_else_statement','parser.py',59),
  ('block -> if_result output_list end_if','block',3,'p_if_statement','parser.py',64),
  ('if_result -> LCODEDELIM WS IF WS WORD WS RCODEDELIM','if_result',7,'p_truthy_if','parser.py',69),
  ('if_result -> LCODEDELIM WS IF WS WORD WS EQ WS QUOTEDSTRING WS RCODEDELIM','if_result',11,'p_equality_if','parser.py',74),
  ('if_result -> LCODEDELIM WS IF WS WORD WS NE WS QUOTEDSTRING WS RCODEDELIM','if_result',11,'p_non_equality_if','parser.py',80),
  ('if_result -> LCODEDELIM WS IF WS word_len WS GT WS cast_int WS RCODEDELIM','if_result',11,'p_len_gt_if','parser.py',86),
  ('if_result -> LCODEDELIM WS IF WS word_len WS LT WS cast_int WS RCODEDELIM','if_result',11,'p_len_lt_if','parser.py',91),
  ('if_result -> LCODEDELIM WS IF WS word_len WS EQ WS cast_int WS RCODEDELIM','if_result',11,'p_len_equality_if','parser.py',96),
  ('if_result -> LCODEDELIM WS IF WS word_len WS NE WS cast_int WS RCODEDELIM','if_result',11,'p_len_non_equality_if','parser.py',101),
  ('else -> LCODEDELIM WS ELSE WS RCODEDELIM','else',5,'p_else','parser.py',106),
  ('end_if -> LCODEDELIM WS ENDIF WS RCODEDELIM','end_if',5,'p_end_if','parser.py',111),
  ('word_len -> WORD LEN','word_len',2,'p_word_len','parser.py',116),
  ('cast_int -> INT','cast_int',1,'p_cast_int','parser.py',120),
]
