
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightEQUALLBRACKET RBRACKET LBRACE RBRACE EQUAL INT IDENTIFIER IF THEN ELSE RETURNexpression : INTexpression : expression EQUAL expressionexpression : IDENTIFIERinstruction : IDENTIFIER EQUAL expressioninstruction : IF LBRACE expression RBRACE THEN LBRACE instruction RBRACE ELSE LBRACE instruction RBRACEinstruction : RETURN expressioninstructions : instructions instructioninstructions : instructionprogram : LBRACKET instructions RBRACKET'
    
_lr_action_items = {'LBRACKET':([0,],[2,]),'$end':([1,8,],[0,-9,]),'IDENTIFIER':([2,3,4,7,9,10,11,12,13,14,15,17,19,21,25,27,],[5,5,-8,14,-7,14,14,-6,-1,-3,-4,14,-2,5,5,-5,]),'IF':([2,3,4,9,12,13,14,15,19,21,25,27,],[6,6,-8,-7,-6,-1,-3,-4,-2,6,6,-5,]),'RETURN':([2,3,4,9,12,13,14,15,19,21,25,27,],[7,7,-8,-7,-6,-1,-3,-4,-2,7,7,-5,]),'RBRACKET':([3,4,9,12,13,14,15,19,27,],[8,-8,-7,-6,-1,-3,-4,-2,-5,]),'EQUAL':([5,12,13,14,15,16,19,],[10,17,-1,-3,17,17,17,]),'LBRACE':([6,20,24,],[11,21,25,]),'INT':([7,10,11,17,],[13,13,13,13,]),'RBRACE':([12,13,14,15,16,19,22,26,27,],[-6,-1,-3,-4,18,-2,23,27,-5,]),'THEN':([18,],[20,]),'ELSE':([23,],[24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions':([2,],[3,]),'instruction':([2,3,21,25,],[4,9,22,26,]),'expression':([7,10,11,17,],[12,15,16,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('expression -> INT','expression',1,'p_expression_int','parser.py',27),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_expression_eq_expression','parser.py',31),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','parser.py',35),
  ('instruction -> IDENTIFIER EQUAL expression','instruction',3,'p_instruction_assignment','parser.py',39),
  ('instruction -> IF LBRACE expression RBRACE THEN LBRACE instruction RBRACE ELSE LBRACE instruction RBRACE','instruction',12,'p_instruction_if_then_else','parser.py',44),
  ('instruction -> RETURN expression','instruction',2,'p_instruction_return_expression','parser.py',48),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_instructions_instruction','parser.py',52),
  ('instructions -> instruction','instructions',1,'p_instructions_instruction','parser.py',56),
  ('program -> LBRACKET instructions RBRACKET','program',3,'p_program_instructions','parser.py',60),
]
