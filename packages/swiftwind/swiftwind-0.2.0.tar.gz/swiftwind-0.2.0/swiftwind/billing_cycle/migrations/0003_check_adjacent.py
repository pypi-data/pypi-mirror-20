# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-30 12:56
from __future__ import unicode_literals

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('billing_cycle', '0002_check_non_overlapping'),
    ]

    operations = [
        migrations.RunSQL(
            """
            CREATE OR REPLACE FUNCTION check_billing_cycle_adjacent()
              RETURNS trigger AS
            $$
            DECLARE
              previous billing_cycle_billingcycle%ROWTYPE;
              row billing_cycle_billingcycle%ROWTYPE;
              is_adjacent BOOLEAN;
            BEGIN
              previous := NULL;
              FOR row IN SELECT * FROM billing_cycle_billingcycle ORDER BY date_range LOOP
                IF previous IS NULL THEN
                  previous := row;
                  CONTINUE;
                END IF;

                is_adjacent := previous.date_range -|- row.date_range;
                IF NOT is_adjacent THEN
                  RAISE EXCEPTION 'Billing cycles % % and % % are not adjacent. All cycles must be adjacent.',
                    previous.uuid, previous.date_range, row.uuid, row.date_range
                    USING ERRCODE = 'integrity_constraint_violation';
                END IF;

                previous := row;
              END LOOP;

              RETURN NEW;

            END;
            $$
            LANGUAGE plpgsql
            """,
            "DROP FUNCTION check_billing_cycle_adjacent()"
        ),
        migrations.RunSQL(
            """
            CREATE CONSTRAINT TRIGGER check_billing_cycle_adjacent_trigger
            AFTER INSERT OR UPDATE OR DELETE ON billing_cycle_billingcycle
            DEFERRABLE INITIALLY DEFERRED
            FOR EACH ROW EXECUTE PROCEDURE check_billing_cycle_adjacent()
            """,
            "DROP TRIGGER check_billing_cycle_adjacent_trigger ON billing_cycle_billingcycle"
        )
    ]
