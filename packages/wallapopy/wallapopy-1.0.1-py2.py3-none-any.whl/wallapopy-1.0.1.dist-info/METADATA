Metadata-Version: 2.0
Name: wallapopy
Version: 1.0.1
Summary: A Wallapop client for Python.
Home-page: https://github.com/toniprada/wallapopy
Author: Toni Prada
Author-email: toniprada@gmail.com
License: MIT
Keywords: wallapop client
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Communications
Classifier: Topic :: Internet
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Requires-Dist: future
Requires-Dist: requests

wallapopy
=========

A Wallapop client for Python.

*Wallapop* is a marketplace for second hand articles with a high user
penetration in Spain. It follows the *two-sided* reputation schema,
where both seller and buyer receive a rating as well as an optional
comment. User profiles consist of profile data, sold products with their
associated feedbacks and products on sale.

This library was created to enable research projects related to
reputation in the Sharing Economy (results not published yet).

Data
----

Endpoints implemented:

-  User:

   -  Profile (including user metadata).
   -  Published and sold items.
   -  Sent and received reviews.

-  Search: by location and with optional parameters as query term or
   sorting strategy.

Usage
-----

Given that this library was intended to be used together with Scrapy,
not only a client is included but also a *request builder* to easily
create *Scrapy Requests* (or whatever it is needed).

Request Builder
~~~~~~~~~~~~~~~

It returns a url that can be queried to access the data together with
the method to do it.

.. code:: python

    from request_builder import WallapopRequestBuilder

    request_builder = WallapopRequestBuilder()
    request_builder.user(40000000)

::

    > {'method': 'GET', 'url': 'http://pro2.wallapop.com/shnm-portlet/api/v1/user.json/40000000?'}

Client
~~~~~~

Leveraging the *request builder*, a client that directly downloads the
data.

.. code:: python

    from client import WallapopClient

    client = WallapopClient()
    client.user(40000000)

::

    > {u'gender': u'M', u'image': {u'averageHexColor': u'565b51', u'pictureId': 148033140, u'originalHeight': 416, u'mediumURL': u'http://cdn.wallapop.com/shnm-portlet/images?pictu...


