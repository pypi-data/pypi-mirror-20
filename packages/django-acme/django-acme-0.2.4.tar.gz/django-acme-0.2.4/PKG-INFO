Metadata-Version: 1.1
Name: django-acme
Version: 0.2.4
Summary: A re-usable Django app to quickly deploy a page for the ACME challenge
Home-page: https://github.com/browniebroke/django-acme
Author: Bruno Alla
Author-email: alla.brunoo@gmail.com
License: MIT
Description: ===========
        Django ACME
        ===========
        
        NOT MAINTAINED ANYMORE
        ======================
        
        This project isn't maintained anymore, `django-letsencrypt <https://github.com/urda/django-letsencrypt>`_
        serves the same purpose but with a more features. Please use that instead.
        
        .. image:: https://badge.fury.io/py/django-acme.svg
            :target: https://badge.fury.io/py/django-acme
        
        .. image:: https://travis-ci.org/browniebroke/django-acme.svg?branch=master
            :target: https://travis-ci.org/browniebroke/django-acme
        
        .. image:: https://codecov.io/gh/browniebroke/django-acme/branch/master/graph/badge.svg
            :target: https://codecov.io/gh/browniebroke/django-acme
        
        A re-usable Django app to quickly deploy a page for the ACME challenge
        
        Documentation
        -------------
        
        The full documentation is at https://django-acme.readthedocs.io.
        
        Quickstart
        ----------
        
        Install Django ACME::
        
            pip install django-acme
        
        Add it to your `INSTALLED_APPS`:
        
        .. code-block:: python
        
            INSTALLED_APPS = (
                ...
                'acme_challenge',
                ...
            )
        
        Add the Django ACME's URL patterns:
        
        .. code-block:: python
            
            from acme_challenge import urls as acme_challenge_urls
        
        
            urlpatterns = [
                ...
                url(r'^', include(acme_challenge_urls)),
                ...
            ]
        
        The URL of the ACME challenge to serve as well as the content are
        controlled via 2 settings which default to:
        
        .. code-block:: python
        
            ACME_CHALLENGE_URL_SLUG = os.getenv('ACME_CHALLENGE_URL_SLUG')
            ACME_CHALLENGE_TEMPLATE_CONTENT = os.getenv('ACME_CHALLENGE_TEMPLATE_CONTENT')
        
        The slug being the suffix of the URL path:
        `/.well-known/acme-challenge/[ACME_CHALLENGE_URL_SLUG]/`
        
        Features
        --------
        
        * TODO
        
        Running Tests
        -------------
        
        Does the code actually work? This projects uses tox_:
        
        ::
        
            source <YOURVIRTUALENV>/bin/activate
            (myenv) $ pip install tox
            (myenv) $ tox [-e py27-django18]
        
        Credits
        -------
        
        Tools used in rendering this package:
        
        *  Cookiecutter_
        *  `cookiecutter-djangopackage`_
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage
        .. _tox: https://tox.readthedocs.io/en/latest/
        
        
        
        
        History
        -------
        
        0.2.1 (2016-11-25)
        ++++++++++++++++++
        
        * Settings are taken from the environment variables by default
        
        0.2.0 (2016-11-17)
        ++++++++++++++++++
        
        * The root URL includes the `.well-known/acme-challenge/` prefix.
        * Accept an optional `/` at the end of the URL
        * Updated documentation
        
        0.1.3 (2016-11-17)
        ++++++++++++++++++
        
        * Bump version, various minor docs updates
        
        0.1.0 (2016-11-16)
        ++++++++++++++++++
        
        * First release on PyPI.
        
Keywords: django-acme
Platform: UNKNOWN
Classifier: Development Status :: 7 - Inactive
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
