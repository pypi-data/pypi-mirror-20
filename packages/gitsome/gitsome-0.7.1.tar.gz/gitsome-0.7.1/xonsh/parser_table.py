
# parser_table.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'start_symbolsleftPIPEleftXORleftAMPERSANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEDOUBLEDIVMODleftPOWDOUBLEDIVEQUAL STRING NEWLINE INDENT DEDENT TIMES SEMI AT LSHIFTEQUAL MODEQUAL POWEQUAL LSHIFT DIVEQUAL DIVIDE ELLIPSIS RSHIFTEQUAL TILDE MINUS AWAIT GT COLON XOREQUAL MOD NE RSHIFT RARROW DOUBLEDIV LE POW XOR PLUSEQUAL MINUSEQUAL GE PIPEEQUAL LT COMMA ATEQUAL PLUS TIMESEQUAL AMPERSANDEQUAL EQUALS PERIOD ASYNC PIPE EQ NAME NUMBER WS AMPERSAND REGEXPATH IOREDIRECT LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE AT QUESTION DOUBLE_QUESTION AT_LPAREN DOLLAR_NAME DOLLAR_LPAREN DOLLAR_LBRACE DOLLAR_LBRACKET FALSE NONE TRUE AND AS ASSERT BREAK CLASS CONTINUE DEF DEL ELIF ELSE EXCEPT FINALLY FOR FROM GLOBAL IF IMPORT IN IS LAMBDA NONLOCAL NOT OR PASS RAISE RETURN TRY WHILE WITH YIELDampersand_shift_expr_list_opt : empty\n        | ampersand_shift_expr_listand_not_test_list_opt : empty\n        | and_not_test_listarglist_opt : empty\n        | arglistas_name_opt : empty\n        | as_namecolon_test_opt : empty\n        | colon_testcomma_dotted_as_name_list_opt : empty\n        | comma_dotted_as_name_listcomma_import_as_name_list_opt : empty\n        | comma_import_as_name_listcomma_name_list_opt : empty\n        | comma_name_listcomma_pow_tfpdef_opt : empty\n        | comma_pow_tfpdefcomma_pow_vfpdef_opt : empty\n        | comma_pow_vfpdefcomma_subscript_list_opt : empty\n        | comma_subscript_listcomma_test_opt : empty\n        | comma_testcomma_tfpdef_list_opt : empty\n        | comma_tfpdef_listcomma_vfpdef_list_opt : empty\n        | comma_vfpdef_listcomp_iter_opt : empty\n        | comp_itercomp_op_expr_list_opt : empty\n        | comp_op_expr_listdictorsetmaker_opt : empty\n        | dictorsetmakerelif_part_list_opt : empty\n        | elif_part_listequals_test_opt : empty\n        | equals_testequals_yield_expr_or_testlist_list_opt : empty\n        | equals_yield_expr_or_testlist_listfinally_part_opt : empty\n        | finally_partfunc_call_opt : empty\n        | func_callnewlines_opt : empty\n        | newlinesop_factor_list_opt : empty\n        | op_factor_listor_and_test_list_opt : empty\n        | or_and_test_listperiod_or_ellipsis_list_opt : empty\n        | period_or_ellipsis_listrarrow_test_opt : empty\n        | rarrow_testshift_arith_expr_list_opt : empty\n        | shift_arith_expr_listsliceop_opt : empty\n        | sliceoptest_comma_list_opt : empty\n        | test_comma_listtest_opt : empty\n        | testtestlist_comp_opt : empty\n        | testlist_comptestlist_opt : empty\n        | testlisttfpdef_opt : empty\n        | tfpdeftrailer_list_opt : empty\n        | trailer_listtypedargslist_opt : empty\n        | typedargslistvarargslist_opt : empty\n        | varargslistvfpdef_opt : empty\n        | vfpdefxor_and_expr_list_opt : empty\n        | xor_and_expr_listyield_arg_opt : empty\n        | yield_argyield_expr_or_testlist_comp_opt : empty\n        | yield_expr_or_testlist_compampersand_shift_expr_list : ampersand_shift_expr\n         | ampersand_shift_expr_list ampersand_shift_exprand_not_test_list : and_not_test\n         | and_not_test_list and_not_testattr_period_name_list : attr_period_name\n         | attr_period_name_list attr_period_namecomma_argument_list : comma_argument\n         | comma_argument_list comma_argumentcomma_dotted_as_name_list : comma_dotted_as_name\n         | comma_dotted_as_name_list comma_dotted_as_namecomma_expr_or_star_expr_list : comma_expr_or_star_expr\n         | comma_expr_or_star_expr_list comma_expr_or_star_exprcomma_import_as_name_list : comma_import_as_name\n         | comma_import_as_name_list comma_import_as_namecomma_item_list : comma_item\n         | comma_item_list comma_itemcomma_name_list : comma_name\n         | comma_name_list comma_namecomma_subscript_list : comma_subscript\n         | comma_subscript_list comma_subscriptcomma_test_list : comma_test\n         | comma_test_list comma_testcomma_test_or_star_expr_list : comma_test_or_star_expr\n         | comma_test_or_star_expr_list comma_test_or_star_exprcomma_tfpdef_list : comma_tfpdef\n         | comma_tfpdef_list comma_tfpdefcomma_vfpdef_list : comma_vfpdef\n         | comma_vfpdef_list comma_vfpdefcomma_with_item_list : comma_with_item\n         | comma_with_item_list comma_with_itemcomp_op_expr_list : comp_op_expr\n         | comp_op_expr_list comp_op_exprelif_part_list : elif_part\n         | elif_part_list elif_partequals_yield_expr_or_testlist_list : equals_yield_expr_or_testlist\n         | equals_yield_expr_or_testlist_list equals_yield_expr_or_testlistexcept_part_list : except_part\n         | except_part_list except_partop_factor_list : op_factor\n         | op_factor_list op_factoror_and_test_list : or_and_test\n         | or_and_test_list or_and_testperiod_name_list : period_name\n         | period_name_list period_nameperiod_or_ellipsis_list : period_or_ellipsis\n         | period_or_ellipsis_list period_or_ellipsispipe_xor_expr_list : pipe_xor_expr\n         | pipe_xor_expr_list pipe_xor_exprpm_term_list : pm_term\n         | pm_term_list pm_termsemi_small_stmt_list : semi_small_stmt\n         | semi_small_stmt_list semi_small_stmtshift_arith_expr_list : shift_arith_expr\n         | shift_arith_expr_list shift_arith_exprtest_comma_list : test_comma\n         | test_comma_list test_commatest_or_star_expr_list : test_or_star_expr\n         | test_or_star_expr_list test_or_star_exprtrailer_list : trailer\n         | trailer_list trailerxor_and_expr_list : xor_and_expr\n         | xor_and_expr_list xor_and_exprstart_symbols : single_input\n                         | file_input\n                         | eval_input\n                         | empty\n        single_input : compound_stmt NEWLINE\n        file_input : file_stmtsfile_stmts : newline_or_stmt\n                      | file_stmts newline_or_stmt\n        newline_or_stmt : NEWLINE\n                           | stmt\n        newlines : NEWLINE\n                    | newlines NEWLINE\n        eval_input : testlist newlines_opt\n        func_call : LPAREN arglist_opt RPARENattr_period_name : PERIOD NAMEattr_name : NAME\n                     | NAME attr_period_name_list\n        decorator : AT attr_name NEWLINE\n                     | AT attr_name func_call NEWLINE\n        decorators : decorator\n                      | decorators decorator\n        classdef_or_funcdef : classdef\n                               | funcdef\n                               | async_funcdef\n        decorated : decorators classdef_or_funcdefrarrow_test : RARROW testfuncdef : DEF NAME parameters rarrow_test_opt COLON suiteasync_funcdef : ASYNC funcdefparameters : LPAREN typedargslist_opt RPARENequals_test : EQUALS testtypedargslist : tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt\n                         | tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt COMMA POW vfpdef\n                         | tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt comma_tfpdef_list_opt\n                         | tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt comma_tfpdef_list COMMA POW tfpdef\n                         | tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt POW tfpdef\n                         | TIMES tfpdef_opt comma_tfpdef_list comma_pow_tfpdef_opt\n                         | TIMES tfpdef_opt comma_pow_tfpdef_opt\n                         | POW tfpdef\n        colon_test : COLON testtfpdef : NAME colon_test_optcomma_tfpdef : COMMA\n                        | COMMA tfpdef equals_test_opt\n        comma_pow_tfpdef : COMMA POW tfpdefvarargslist : vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt\n                       | vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt COMMA POW vfpdef\n                       | vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt comma_vfpdef_list_opt\n                       | vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt comma_vfpdef_list COMMA POW vfpdef\n                       | vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt POW vfpdef\n                       | TIMES vfpdef_opt comma_vfpdef_list comma_pow_vfpdef_opt\n                       | TIMES vfpdef_opt comma_pow_vfpdef_opt\n                       | POW vfpdef\n        vfpdef : NAMEcomma_vfpdef : COMMA\n                        | COMMA vfpdef equals_test_opt\n        comma_pow_vfpdef : COMMA POW vfpdefstmt : simple_stmt\n                | compound_stmt\n        stmt_list : stmt\n                     | stmt_list stmtsemi_opt : SEMI\n                    | empty\n        semi_small_stmt : SEMI small_stmtsimple_stmt : small_stmt semi_small_stmt_list semi_opt NEWLINE\n                       | small_stmt semi_opt NEWLINE\n        small_stmt : expr_stmt\n                      | del_stmt\n                      | pass_stmt\n                      | flow_stmt\n                      | import_stmt\n                      | global_stmt\n                      | nonlocal_stmt\n                      | assert_stmt\n        expr_stmt : testlist_star_expr augassign yield_expr_or_testlist\n                     | testlist_star_expr equals_yield_expr_or_testlist_list_opt\n                     | testlist equals_yield_expr_or_testlist_list_opt\n                     | test_comma_list_opt star_expr comma_test_list equals_yield_expr_or_testlist\n                     | test_comma_list_opt star_expr comma_opt test_comma_list_opt equals_yield_expr_or_testlist\n        test_comma : test COMMAcomma_opt : COMMA\n                     | empty\n        test_or_star_expr : test\n                             | star_expr\n        comma_test_or_star_expr : COMMA test_or_star_exprtestlist_star_expr : test_or_star_expr comma_test_or_star_expr_list comma_opt\n                              | test_or_star_expr comma_opt\n        augassign : PLUSEQUAL\n                     | MINUSEQUAL\n                     | TIMESEQUAL\n                     | ATEQUAL\n                     | DIVEQUAL\n                     | MODEQUAL\n                     | AMPERSANDEQUAL\n                     | PIPEEQUAL\n                     | XOREQUAL\n                     | LSHIFTEQUAL\n                     | RSHIFTEQUAL\n                     | POWEQUAL\n                     | DOUBLEDIVEQUAL\n        yield_expr_or_testlist : yield_expr\n                                  | testlist\n        equals_yield_expr_or_testlist : EQUALS yield_expr_or_testlistdel_stmt : DEL exprlistpass_stmt : PASSflow_stmt : break_stmt\n                     | continue_stmt\n                     | return_stmt\n                     | raise_stmt\n                     | yield_stmt\n        break_stmt : BREAKcontinue_stmt : CONTINUEreturn_stmt : RETURN testlist_optyield_stmt : yield_exprraise_stmt : RAISE\n                      | RAISE test\n                      | RAISE test FROM test\n        import_stmt : import_name\n                       | import_from\n        import_name : IMPORT dotted_as_names\n        import_from_pre : FROM period_or_ellipsis_list_opt dotted_name\n                           | FROM period_or_ellipsis_list\n        import_from_post : TIMES\n                            | LPAREN import_as_names RPAREN\n                            | import_as_names\n        import_from : import_from_pre IMPORT import_from_post\n        period_or_ellipsis : PERIOD\n                              | ELLIPSIS\n        as_name : AS NAMEimport_as_name : NAME as_name_optcomma_import_as_name : COMMA import_as_name\n        dotted_as_name : dotted_name as_name_optcomma_dotted_as_name : COMMA dotted_as_nameimport_as_names : import_as_name comma_import_as_name_list_opt comma_opt\n        dotted_as_names : dotted_as_name comma_dotted_as_name_list_optperiod_name : PERIOD NAMEdotted_name : NAME\n                       | NAME period_name_list\n        comma_name : COMMA NAMEglobal_stmt : GLOBAL NAME comma_name_list_optnonlocal_stmt : NONLOCAL NAME comma_name_list_optcomma_test : COMMA testassert_stmt : ASSERT test comma_test_optcompound_stmt : if_stmt\n                         | while_stmt\n                         | for_stmt\n                         | try_stmt\n                         | with_stmt\n                         | funcdef\n                         | classdef\n                         | decorated\n                         | async_stmt\n        elif_part : ELIF test COLON suiteelse_part : ELSE COLON suiteif_stmt : IF test COLON suite elif_part_list_opt\n                   | IF test COLON suite elif_part_list_opt else_part\n        while_stmt : WHILE test COLON suite\n                      | WHILE test COLON suite else_part\n        for_stmt : FOR exprlist IN testlist COLON suite\n                    | FOR exprlist IN testlist COLON suite else_part\n        async_for_stmt : ASYNC for_stmtexcept_part : except_clause COLON suitefinally_part : FINALLY COLON suitetry_stmt : TRY COLON suite except_part_list else_part finally_part_opt\n                    | TRY COLON suite except_part_list finally_part_opt\n                    | TRY COLON suite finally_part\n        with_stmt : WITH with_item COLON suite\n                     | WITH with_item comma_with_item_list COLON suite\n        async_with_stmt : ASYNC with_stmtas_expr : AS exprwith_item : test\n                     | test as_expr\n        comma_with_item : COMMA with_itemexcept_clause : EXCEPT\n                         | EXCEPT test as_name_opt\n        async_stmt : async_funcdef\n                      | async_with_stmt\n                      | async_for_stmt\n        suite : simple_stmt\n                 | NEWLINE INDENT stmt_list DEDENT\n        test : or_test\n                | or_test IF or_test ELSE test\n                | lambdef\n        test_nocond : or_test\n                       | lambdef_nocond\n        lambdef : LAMBDA varargslist_opt COLON testlambdef_nocond : LAMBDA varargslist_opt COLON test_nocondor_test : and_test or_and_test_list_optor_and_test : OR and_testand_test : not_test and_not_test_list_optand_not_test : AND not_testnot_test : NOT not_test\n                    | comparison\n        comparison : expr comp_op_expr_list_optcomp_op_expr : comp_op exprcomp_op : LT\n                   | GT\n                   | EQ\n                   | GE\n                   | LE\n                   | NE\n                   | IN\n                   | NOT IN\n                   | IS\n                   | IS NOT\n        star_expr : TIMES exprexpr : xor_expr\n                | xor_expr pipe_xor_expr_list\n        pipe_xor_expr : PIPE xor_exprxor_expr : and_expr xor_and_expr_list_optxor_and_expr : XOR and_exprand_expr : shift_expr ampersand_shift_expr_list_optampersand_shift_expr : AMPERSAND shift_exprshift_expr : arith_expr shift_arith_expr_list_optshift_arith_expr : LSHIFT arith_expr\n                            | RSHIFT arith_expr\n        arith_expr : term\n                      | term pm_term_list\n        pm_term : PLUS term\n                   | MINUS term\n        term : factor op_factor_list_optop_factor : TIMES factor\n                     | AT factor\n                     | DIVIDE factor\n                     | MOD factor\n                     | DOUBLEDIV factor\n        factor : PLUS factor\n                  | MINUS factor\n                  | TILDE factor\n                  | power\n        power : atom_expr\n                 | atom_expr POW factor\n        yield_expr_or_testlist_comp : yield_expr\n                                       | testlist_comp\n        atom_expr : atom trailer_list_opt\n                     | AWAIT atom trailer_list_opt\n        atom : LPAREN yield_expr_or_testlist_comp_opt RPAREN\n                | LBRACKET testlist_comp_opt RBRACKET\n                | LBRACE dictorsetmaker_opt RBRACE\n                | NAME\n                | number\n                | string_literal_list\n                | ELLIPSIS\n                | NONE\n                | TRUE\n                | FALSE\n                | REGEXPATH\n                | DOLLAR_NAME\n                | DOLLAR_LBRACE test RBRACE\n                | DOLLAR_LPAREN subproc RPAREN\n                | DOLLAR_LBRACKET subproc RBRACKET\n        string_literal : STRINGstring_literal_list : string_literal\n                               | string_literal_list string_literal\n        number : NUMBERtestlist_comp : test_or_star_expr comp_for\n                         | test_or_star_expr comma_opt\n                         | test_or_star_expr comma_test_or_star_expr_list comma_opt\n        trailer : LPAREN arglist_opt RPAREN\n                   | LBRACKET subscriptlist RBRACKET\n                   | PERIOD NAME\n                   | DOUBLE_QUESTION\n                   | QUESTION\n        subscriptlist : subscript comma_subscript_list_opt comma_optcomma_subscript : COMMA subscriptsubscript : test\n                     | test_opt COLON test_opt sliceop_opt\n        sliceop : COLON test_optexpr_or_star_expr : expr\n                             | star_expr\n        comma_expr_or_star_expr : COMMA expr_or_star_exprexprlist : expr_or_star_expr comma_expr_or_star_expr_list comma_opt\n                    | expr_or_star_expr comma_opt\n        testlist : test comma_test_list COMMA\n                    | test comma_test_list\n                    | test COMMA\n                    | test\n        item : test COLON test\n                | POW expr\n        comma_item : COMMA itemdictorsetmaker : item comp_for\n                          | test_or_star_expr comp_for\n                          | testlist\n                          | test_or_star_expr comma_opt\n                          | test_or_star_expr comma_test_or_star_expr_list comma_opt\n                          | test COLON testlist\n                          | item comma_item_list comma_opt\n                          | test COLON test comma_item_list comma_opt\n        classdef : CLASS NAME func_call_opt COLON suitearglist : argument comma_opt\n                       | argument comma_argument_list comma_opt\n            comma_argument : COMMA argumentargument : test_or_star_expr\n                    | test comp_for\n                    | test EQUALS test\n                    | POW test\n                    | TIMES test\n        comp_iter : comp_for\n                     | comp_if\n        comp_for : FOR exprlist IN or_test comp_iter_optcomp_if : IF test_nocond comp_iter_optyield_expr : YIELD yield_arg_optyield_arg : FROM test\n                     | testlist\n        pipe : PIPE\n                | WS PIPE\n                | PIPE WS\n                | WS PIPE WS\n        subproc : subproc_atoms\n                   | subproc_atoms WS\n                   | subproc AMPERSAND\n                   | subproc pipe subproc_atoms\n                   | subproc pipe subproc_atoms WS\n        subproc_atoms : subproc_atom\n                         | subproc_atoms WS subproc_atom\n        subproc_atom : subproc_arg\n                        | string_literal\n                        | REGEXPATH\n                        | DOLLAR_NAME\n                        | GT\n                        | LT\n                        | RSHIFT\n                        | IOREDIRECT\n                        | AT_LPAREN test RPAREN\n                        | DOLLAR_LBRACE test RBRACE\n                        | DOLLAR_LPAREN subproc RPAREN\n                        | DOLLAR_LBRACKET subproc RBRACKET\n        subproc_arg : subproc_arg_part\n                       | subproc_arg subproc_arg_part\n        subproc_arg_part : NAME\n                            | TILDE\n                            | PERIOD\n                            | DIVIDE\n                            | MINUS\n                            | PLUS\n                            | COLON\n                            | AT\n                            | EQUALS\n                            | TIMES\n                            | POW\n                            | MOD\n                            | XOR\n                            | DOUBLEDIV\n                            | ELLIPSIS\n                            | NONE\n                            | TRUE\n                            | FALSE\n                            | NUMBER\n                            | STRING\n        empty : '
    
_lr_action_items = {'POW':([2,3,6,16,17,19,21,27,30,35,43,49,50,52,55,56,59,63,64,66,67,70,74,76,78,81,88,95,98,104,108,115,117,119,120,147,148,150,151,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,188,189,205,232,239,244,245,246,248,259,260,261,263,264,268,269,272,274,286,287,288,289,291,292,294,295,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,364,365,367,372,373,374,376,377,378,380,381,404,409,411,417,421,426,429,430,431,438,439,443,444,445,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,521,523,531,534,549,560,561,562,563,564,565,566,570,581,591,593,606,608,614,615,619,621,623,624,637,639,640,641,667,668,669,670,671,672,676,688,701,702,703,719,724,727,734,736,742,],[-395,-323,-492,-492,154,-359,-325,-387,-394,-390,-382,215,-385,-335,-383,223,-386,-492,-389,154,-384,-388,-372,-492,265,-349,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,154,-475,-482,-490,-488,-484,-478,-489,-483,154,154,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,-131,-360,-224,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-196,-492,-350,-129,-334,-141,-70,-405,-69,-377,-404,471,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-471,-491,154,154,-393,-447,-132,-362,-361,530,-391,471,-374,-380,-381,223,-337,-114,-378,-392,-331,-124,-38,-37,-492,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-448,-449,-492,-492,223,-328,-174,-27,-492,-109,-197,-28,643,-402,471,-401,-324,-223,-450,154,-492,-9,-10,-184,223,686,-492,-110,-492,-25,-185,-107,-26,-183,704,-198,717,-492,-108,-186,265,733,740,741,746,]),'SEMI':([2,3,5,6,7,9,10,16,18,19,21,23,24,27,28,29,30,35,39,41,43,44,46,49,50,52,55,59,60,61,63,64,67,68,70,73,74,76,77,79,81,86,88,92,93,95,97,98,100,102,104,105,108,111,112,115,117,119,120,122,125,130,139,140,145,147,148,150,151,188,189,194,195,196,197,198,199,200,201,202,205,206,207,208,209,220,222,232,239,244,245,246,248,249,250,251,252,254,257,259,260,261,263,264,272,274,275,283,284,285,286,287,288,289,291,292,294,298,304,305,308,311,319,321,322,323,324,325,326,327,329,331,332,334,335,336,338,339,346,347,348,349,350,351,352,353,355,356,357,358,360,362,363,373,376,377,378,381,382,383,385,386,387,388,389,391,393,394,395,397,398,405,406,407,409,411,417,426,429,430,431,432,433,434,435,438,439,449,450,451,452,454,455,461,462,463,464,470,485,486,487,488,489,490,491,492,493,494,495,499,500,501,503,505,508,509,510,511,513,514,536,537,538,539,540,556,557,558,560,572,573,581,593,605,606,607,608,609,610,611,],[-395,-323,-254,-492,-492,-257,-252,-492,-261,-359,-325,-214,-251,-387,-253,-492,-394,-390,-249,-492,-382,-226,-209,-373,-385,-335,-383,-386,-250,-256,-492,-389,-384,-248,-388,-492,-372,-492,-210,-260,-349,-225,-492,-212,-213,-492,-215,-397,-211,-492,-492,-216,-492,340,-247,-55,-356,-56,-135,-40,-218,-39,-117,-258,-492,-1,-2,-354,-83,-131,-360,-255,-66,-419,-65,-492,-492,-262,-492,-279,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-246,-411,-492,-412,-39,-219,-370,-49,-330,-50,-123,-350,-129,-492,-417,-103,-418,-334,-141,-70,-405,-69,-377,-404,-492,-363,-47,-121,-48,-444,-446,-79,-80,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,340,-133,-358,-357,-136,-118,-243,-244,-245,-217,-268,-267,-492,-492,-265,-84,-355,-393,-132,-362,-361,-391,-418,-23,-24,-285,-7,-274,-8,-11,-91,-12,-277,-280,-125,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-93,-415,-223,-492,-331,-124,-130,-351,-15,-282,-16,-99,-104,-416,-284,-142,-403,-283,-379,-367,-366,-368,-365,-122,-364,-445,-144,-353,-333,-86,-134,-206,-220,-259,-13,-95,-492,-14,-272,-271,-275,-92,-278,-126,-413,-94,-414,-328,-281,-100,-402,-401,-221,-324,-276,-223,-273,-96,-266,]),'CONTINUE':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[5,-151,-287,5,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,5,-167,-166,-168,-169,5,5,5,-321,5,-208,-299,-492,-492,-119,-308,5,-309,5,5,-207,-300,5,-297,-115,-36,-35,5,5,-492,-41,-120,-42,-307,5,-202,5,-310,-431,5,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,5,-302,-295,]),'BREAK':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[28,-151,-287,28,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,28,-167,-166,-168,-169,28,28,28,-321,28,-208,-299,-492,-492,-119,-308,28,-309,28,28,-207,-300,28,-297,-115,-36,-35,28,28,-492,-41,-120,-42,-307,28,-202,28,-310,-431,28,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,28,-302,-295,]),'LT':([2,6,16,17,19,27,30,35,43,49,50,55,59,63,64,66,67,70,74,81,88,95,98,104,115,117,119,120,147,148,150,151,168,170,188,189,232,245,246,248,259,272,274,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,336,346,347,348,362,363,367,372,373,374,376,377,378,381,409,411,417,426,429,430,431,449,450,464,470,486,487,488,489,490,491,492,494,495,521,523,581,593,596,614,615,],[-395,-492,-492,155,-359,-387,-394,-390,-382,-373,-385,-383,-386,237,-389,155,-384,-388,-372,-349,-492,-492,-397,-492,-55,-356,-56,-135,-1,-2,-354,-83,155,155,-131,-360,-113,237,-492,-396,-370,-350,-129,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-369,-358,-357,-136,-84,-355,155,155,-393,-447,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-448,-449,-402,-401,237,-450,155,]),'DOLLAR_NAME':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,159,168,170,180,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[35,-395,-151,-492,-287,35,35,35,-492,158,-359,-289,-319,35,-387,35,-394,35,-390,-320,-294,-318,-382,-288,35,-373,-385,35,35,35,-383,35,-201,-154,-386,-293,-389,35,158,-384,-290,-388,35,35,-372,35,-200,-349,35,-492,-137,35,35,-492,-286,-397,-292,35,-153,-492,35,-291,35,-492,35,-55,35,-356,35,-56,-135,-232,-241,-239,35,-242,-235,-238,-233,-231,-236,-234,-240,35,-237,-230,-152,-201,-1,-2,35,-354,-83,35,158,158,35,-131,-360,35,35,-224,35,-311,-172,-303,-138,35,-348,35,-343,35,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,35,-350,35,-129,35,35,-141,-70,-405,35,-69,-377,-404,35,-363,-47,35,35,-121,35,35,-48,35,-167,-166,-168,-169,35,-77,-78,-143,-352,35,-371,35,-369,35,35,35,-358,-357,-136,35,35,-84,-355,158,158,-393,-447,-132,-362,-361,-391,35,35,35,-222,-374,35,-380,35,-381,35,35,-347,-345,-378,-392,35,35,35,35,-130,-351,-321,35,-142,-403,35,35,35,35,35,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,35,-299,-448,-449,35,-492,35,-492,-119,35,-308,35,-402,35,35,35,-401,35,-309,35,35,-207,-300,-450,158,35,35,-297,-115,-36,35,-35,35,35,35,35,35,-492,-41,-120,-42,-307,35,-202,35,-310,-431,35,-171,-298,-116,-301,-304,-306,-305,-203,-322,35,-296,35,35,-302,-295,35,]),'ATEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,131,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'PERIOD':([2,17,27,30,35,43,50,55,59,64,66,67,70,84,88,98,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,202,203,246,248,278,279,280,282,287,288,289,294,364,365,367,372,373,374,381,397,398,400,401,411,417,431,460,464,470,486,521,523,539,540,541,542,581,593,614,615,],[-395,178,-387,-394,-390,-382,-385,-383,-386,-389,178,-384,-388,278,293,-397,178,-475,-482,-490,-488,-484,-478,-489,-483,178,178,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,396,399,293,-396,-269,-127,-270,278,-141,293,-405,-404,-471,-491,178,178,-393,-447,-391,396,-125,-87,399,-380,-381,-392,-128,-142,-403,-379,-448,-449,-278,-126,-159,-88,-402,-401,-450,178,]),'RBRACE':([2,3,6,16,19,21,27,30,35,43,44,49,50,52,55,56,59,63,64,67,70,74,76,81,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,193,205,207,209,220,222,224,225,226,228,229,230,232,239,244,245,246,248,259,260,261,263,264,272,274,283,284,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,375,376,377,378,381,382,405,407,409,411,416,417,418,419,420,422,423,424,426,429,430,431,438,439,449,450,461,462,463,464,470,486,487,488,489,490,491,492,494,495,499,500,548,549,550,552,553,554,555,560,581,593,606,636,637,681,682,683,684,707,708,709,710,711,722,723,725,731,743,],[-395,-323,-492,-492,-359,-325,-387,-394,-390,-382,-226,-373,-385,-335,-383,-492,-386,-492,-389,-384,-388,-372,-492,-349,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,381,-224,-223,-105,-225,-348,417,-425,-34,-492,-225,-33,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-417,-103,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,524,-132,-362,-361,-391,-418,-227,-106,-374,-380,-421,-381,-492,-423,-97,-426,-424,-492,-337,-114,-378,-392,-331,-124,-130,-351,-104,-416,-284,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-429,-223,-98,-422,-427,-428,-419,-328,-402,-401,-324,-492,-418,-492,-420,-430,-284,-29,-442,-440,-441,-30,-326,-492,-327,-443,-329,]),'WHILE':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,314,316,317,318,457,504,516,545,575,576,578,580,600,604,613,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,685,690,691,693,694,695,700,713,721,],[13,-151,-287,13,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,-167,-166,-168,-169,-321,-208,-299,-492,-492,-119,-308,13,-309,-207,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,13,-310,-431,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,-302,-295,]),'FINALLY':([456,457,504,575,576,604,645,647,690,695,700,],[579,-321,-208,579,-119,-207,579,-120,-304,-322,-296,]),'FALSE':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,364,365,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[70,-395,-151,-492,-287,70,70,70,-492,165,-359,-289,-319,70,-387,70,-394,70,-390,-320,-294,-318,-382,-288,70,-373,-385,70,70,70,-383,70,-201,-154,-386,-293,-389,70,165,-384,-290,-388,70,70,-372,70,-200,-349,70,-492,-137,70,70,-492,-286,-397,-292,70,-153,-492,70,-291,70,-492,70,-55,70,-356,70,-56,-135,-232,-241,-239,70,-242,-235,-238,-233,-231,-236,-234,-240,70,-237,-230,-152,-201,-1,-2,70,-354,-83,165,-475,-482,-490,70,-488,-484,-478,-489,-483,165,165,-472,-480,-479,-473,-470,-474,70,-476,-485,-487,-491,-486,-477,-481,-131,-360,70,70,-224,70,-311,-172,-303,-138,70,-348,70,-343,70,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,70,-350,70,-129,70,70,-141,-70,-405,70,-69,-377,-404,70,-363,-47,70,70,-121,70,70,-48,70,-167,-166,-168,-169,70,-77,-78,-143,-352,70,-371,70,-369,70,70,70,-358,-357,-136,70,70,-84,-355,-471,-491,165,165,-393,-447,-132,-362,-361,-391,70,70,70,-222,-374,70,-380,70,-381,70,70,-347,-345,-378,-392,70,70,70,70,-130,-351,-321,70,-142,-403,70,70,70,70,70,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,70,-299,-448,-449,70,-492,70,-492,-119,70,-308,70,-402,70,70,70,-401,70,-309,70,70,-207,-300,-450,165,70,70,-297,-115,-36,70,-35,70,70,70,70,70,-492,-41,-120,-42,-307,70,-202,70,-310,-431,70,-171,-298,-116,-301,-304,-306,-305,-203,-322,70,-296,70,70,-302,-295,70,]),'INDENT':([458,],[580,]),'PIPEEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,137,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'DOLLAR_LBRACKET':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,159,168,170,180,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[17,-395,-151,-492,-287,17,17,17,-492,170,-359,-289,-319,17,-387,17,-394,17,-390,-320,-294,-318,-382,-288,17,-373,-385,17,17,17,-383,17,-201,-154,-386,-293,-389,17,170,-384,-290,-388,17,17,-372,17,-200,-349,17,-492,-137,17,17,-492,-286,-397,-292,17,-153,-492,17,-291,17,-492,17,-55,17,-356,17,-56,-135,-232,-241,-239,17,-242,-235,-238,-233,-231,-236,-234,-240,17,-237,-230,-152,-201,-1,-2,17,-354,-83,17,170,170,17,-131,-360,17,17,-224,17,-311,-172,-303,-138,17,-348,17,-343,17,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,17,-350,17,-129,17,17,-141,-70,-405,17,-69,-377,-404,17,-363,-47,17,17,-121,17,17,-48,17,-167,-166,-168,-169,17,-77,-78,-143,-352,17,-371,17,-369,17,17,17,-358,-357,-136,17,17,-84,-355,170,170,-393,-447,-132,-362,-361,-391,17,17,17,-222,-374,17,-380,17,-381,17,17,-347,-345,-378,-392,17,17,17,17,-130,-351,-321,17,-142,-403,17,17,17,17,17,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,17,-299,-448,-449,17,-492,17,-492,-119,17,-308,17,-402,17,17,17,-401,17,-309,17,17,-207,-300,-450,170,17,17,-297,-115,-36,17,-35,17,17,17,17,17,-492,-41,-120,-42,-307,17,-202,17,-310,-431,17,-171,-298,-116,-301,-304,-306,-305,-203,-322,17,-296,17,17,-302,-295,17,]),'NAME':([0,2,4,6,8,9,13,14,16,17,19,20,22,25,26,27,29,30,31,33,34,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,78,80,81,82,84,87,88,89,90,91,94,95,96,98,99,102,103,104,106,107,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,141,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,265,271,272,273,274,276,277,278,279,280,281,282,285,287,288,289,290,291,292,293,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,359,361,362,363,364,365,367,372,373,374,376,377,378,380,381,382,384,390,392,396,399,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,453,457,460,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,512,516,521,523,527,530,535,545,549,565,570,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,643,644,645,646,647,648,649,651,652,653,663,664,665,666,669,676,678,679,685,686,687,690,691,693,694,695,697,700,704,706,712,713,717,718,721,724,727,733,734,736,738,740,741,742,746,],[43,-395,-151,-492,-287,43,43,43,-492,171,-359,-289,-319,192,43,-387,43,-394,43,202,203,-390,-320,-294,-318,-382,-288,43,-373,-385,43,43,43,-383,43,-201,-154,-386,-293,-389,43,171,-384,-290,-388,43,43,-372,43,268,-200,-349,275,-492,43,-492,-137,43,298,43,-492,-286,-397,-292,43,-153,-492,43,330,-291,43,-492,43,-55,43,-356,43,-56,-135,-232,-241,-239,43,-242,-235,-238,-233,-231,-236,-234,-240,43,-237,-230,358,-152,-201,-1,-2,43,-354,-83,171,-475,-482,-490,43,-488,-484,-478,-489,-483,171,171,-472,-480,-479,-473,-470,-474,43,-476,-485,-487,-491,-486,-477,-481,-131,-360,43,43,-224,43,-311,-172,-303,-138,43,-348,43,-343,43,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,43,268,268,-350,43,-129,43,-51,-269,-127,-270,202,-52,43,-141,-70,-405,43,-69,-377,470,-404,43,-363,-47,43,43,-121,43,43,-48,43,-167,-166,-168,-169,43,-77,-78,-143,-352,43,-371,43,-369,43,43,43,-358,-357,-136,43,358,43,-84,-355,-471,-491,171,171,-393,-447,-132,-362,-361,534,-391,43,43,536,202,539,541,43,-222,-374,43,-380,43,-381,43,43,-347,-345,-378,-392,43,43,43,43,-130,-351,572,-321,-128,43,-142,-403,43,43,43,43,43,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,43,358,-299,-448,-449,43,534,534,-492,43,268,268,-492,-119,43,-308,43,-402,43,43,43,-401,43,-309,43,43,-207,-300,-450,171,43,43,-297,-115,-36,43,-35,43,43,43,43,268,43,-492,-41,-120,-42,-307,43,-202,43,-310,-431,43,-171,534,534,-298,-116,-301,268,268,-304,-306,-305,-203,-322,43,-296,534,43,43,-302,534,534,-295,268,268,268,268,534,43,268,268,534,534,]),'LBRACKET':([0,2,4,6,8,9,13,14,16,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,159,180,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,373,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[53,-395,-151,-492,-287,53,53,53,-492,-359,-289,-319,53,-387,53,-394,53,-390,-320,-294,-318,-382,-288,53,-373,-385,53,53,53,-383,53,-201,-154,-386,-293,-389,53,-384,-290,-388,53,53,-372,53,-200,-349,53,290,-137,53,53,-492,-286,-397,-292,53,-153,-492,53,-291,53,-492,53,-55,53,-356,53,-56,-135,-232,-241,-239,53,-242,-235,-238,-233,-231,-236,-234,-240,53,-237,-230,-152,-201,-1,-2,53,-354,-83,53,53,-131,-360,53,53,-224,53,-311,-172,-303,-138,53,-348,53,-343,53,-339,-342,-338,-346,-344,-341,-340,290,-396,-370,53,-350,53,-129,53,53,-141,290,-405,53,-69,-377,-404,53,-363,-47,53,53,-121,53,53,-48,53,-167,-166,-168,-169,53,-77,-78,-143,-352,53,-371,53,-369,53,53,53,-358,-357,-136,53,53,-84,-355,-393,-132,-362,-361,-391,53,53,53,-222,-374,53,-380,53,-381,53,53,-347,-345,-378,-392,53,53,53,53,-130,-351,-321,53,-142,-403,53,53,53,53,53,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,53,-299,53,-492,53,-492,-119,53,-308,53,-402,53,53,53,-401,53,-309,53,53,-207,-300,53,53,-297,-115,-36,53,-35,53,53,53,53,53,-492,-41,-120,-42,-307,53,-202,53,-310,-431,53,-171,-298,-116,-301,-304,-306,-305,-203,-322,53,-296,53,53,-302,-295,53,]),'DOUBLEDIVEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,127,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'DEF':([0,4,8,14,20,22,32,37,38,42,45,47,57,58,62,69,80,96,99,101,103,109,143,144,210,211,212,313,314,315,316,317,318,403,457,504,516,543,545,575,576,578,580,600,604,613,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,685,690,691,693,694,695,700,713,721,],[25,-151,-287,25,-289,-319,-164,-320,-294,-318,-288,25,-201,-154,-293,-290,-200,-286,-292,25,-153,-291,-152,-201,-311,-172,-303,-165,-167,25,-166,-168,-169,-162,-321,-208,-299,-163,-492,-492,-119,-308,25,-309,-207,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,25,-310,-431,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,-302,-295,]),'DOLLAR_LBRACE':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,159,168,170,180,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[26,-395,-151,-492,-287,26,26,26,-492,180,-359,-289,-319,26,-387,26,-394,26,-390,-320,-294,-318,-382,-288,26,-373,-385,26,26,26,-383,26,-201,-154,-386,-293,-389,26,180,-384,-290,-388,26,26,-372,26,-200,-349,26,-492,-137,26,26,-492,-286,-397,-292,26,-153,-492,26,-291,26,-492,26,-55,26,-356,26,-56,-135,-232,-241,-239,26,-242,-235,-238,-233,-231,-236,-234,-240,26,-237,-230,-152,-201,-1,-2,26,-354,-83,26,180,180,26,-131,-360,26,26,-224,26,-311,-172,-303,-138,26,-348,26,-343,26,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,26,-350,26,-129,26,26,-141,-70,-405,26,-69,-377,-404,26,-363,-47,26,26,-121,26,26,-48,26,-167,-166,-168,-169,26,-77,-78,-143,-352,26,-371,26,-369,26,26,26,-358,-357,-136,26,26,-84,-355,180,180,-393,-447,-132,-362,-361,-391,26,26,26,-222,-374,26,-380,26,-381,26,26,-347,-345,-378,-392,26,26,26,26,-130,-351,-321,26,-142,-403,26,26,26,26,26,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,26,-299,-448,-449,26,-492,26,-492,-119,26,-308,26,-402,26,26,26,-401,26,-309,26,26,-207,-300,-450,180,26,26,-297,-115,-36,26,-35,26,26,26,26,26,-492,-41,-120,-42,-307,26,-202,26,-310,-431,26,-171,-298,-116,-301,-304,-306,-305,-203,-322,26,-296,26,26,-302,-295,26,]),'RPAREN':([2,3,6,16,19,21,27,30,35,43,44,49,50,52,55,59,63,64,67,70,74,76,81,88,94,95,98,102,104,108,115,117,119,120,147,148,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,175,176,177,178,179,181,182,183,184,185,186,187,188,189,196,205,207,209,219,220,222,232,239,244,245,246,247,248,259,260,261,263,264,268,272,274,283,284,286,287,288,289,291,292,294,295,299,300,301,302,303,304,305,308,311,319,321,322,323,324,325,326,327,329,331,332,334,335,336,346,347,348,357,358,362,363,364,365,366,367,368,371,373,376,377,378,380,381,382,387,389,404,405,407,409,411,413,414,415,417,426,429,430,431,438,439,443,444,449,450,461,462,463,464,470,472,473,474,475,476,477,486,487,488,489,490,491,492,493,494,495,499,500,509,510,511,513,514,515,517,518,519,520,522,524,529,531,532,533,534,535,536,544,547,560,561,581,588,589,590,591,592,593,594,596,597,606,607,608,609,610,615,618,619,621,623,624,625,626,627,659,660,661,662,667,668,669,670,671,672,673,674,675,676,677,681,701,702,703,705,707,708,709,710,711,718,719,720,722,723,725,729,730,731,735,736,737,742,743,745,747,],[-395,-323,-492,-492,-359,-325,-387,-394,-390,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-492,-492,-492,-397,-492,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-458,-475,-482,-463,-460,-490,-461,-488,-484,-478,-456,-451,-489,-459,-483,-465,-472,-480,-479,-464,-473,-470,-474,-462,-476,-485,-487,-394,-486,-477,-481,-131,-360,-419,-224,-223,-105,-492,-225,-348,-113,-31,-336,-32,-492,431,-396,-370,-49,-330,-50,-123,-196,-350,-129,-417,-103,-334,-141,-70,-405,-69,-377,-404,-492,-375,-376,-81,-82,486,-363,-47,-121,-48,-444,-446,-79,-80,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-492,-492,-84,-355,-471,-491,517,-452,519,-453,-393,-132,-362,-361,-492,-391,-418,-7,-8,-492,-227,-106,-374,-380,-399,-398,-492,-381,-337,-114,-378,-392,-331,-124,-38,-37,-130,-351,-104,-416,-284,-142,-403,-6,-492,-435,593,-5,-225,-379,-367,-366,-368,-365,-122,-364,-445,-144,-353,-333,-86,-13,-95,-492,-14,-272,611,-466,-457,-468,-469,-454,-467,-72,-492,620,-71,-492,-492,-271,628,-400,-328,-174,-402,-438,-89,-432,-223,-492,-401,-436,-348,-439,-324,-276,-223,-273,-96,-455,-182,-492,-9,-10,-184,-67,-492,-68,-434,-90,-433,-437,-492,-25,-185,-107,-26,-183,-17,-181,-18,-185,-492,-492,-175,-492,-108,-180,-29,-442,-440,-441,-30,-492,-186,-187,-326,-492,-327,-179,-492,-443,-177,-185,-26,-185,-329,-176,-178,]),'OR':([2,6,16,19,27,30,35,43,49,50,52,55,59,63,64,67,70,74,76,81,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,232,239,244,245,246,248,259,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,581,593,596,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,262,-349,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-113,-31,-336,-32,-492,-396,-370,262,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-402,-401,-492,]),'EQ':([2,6,16,19,27,30,35,43,49,50,55,59,63,64,67,70,74,81,88,95,98,104,115,117,119,120,147,148,150,151,188,189,232,245,246,248,259,272,274,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,449,450,464,470,486,487,488,489,490,491,492,494,495,581,593,596,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-383,-386,243,-389,-384,-388,-372,-349,-492,-492,-397,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-113,243,-492,-396,-370,-350,-129,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-402,-401,243,]),'RETURN':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[29,-151,-287,29,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,29,-167,-166,-168,-169,29,29,29,-321,29,-208,-299,-492,-492,-119,-308,29,-309,29,29,-207,-300,29,-297,-115,-36,-35,29,29,-492,-41,-120,-42,-307,29,-202,29,-310,-431,29,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,29,-302,-295,]),'POWEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,123,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'STRING':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,364,365,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[30,-395,-151,-492,-287,30,30,30,-492,184,-359,-289,-319,30,-387,30,-394,30,-390,-320,-294,-318,-382,-288,30,-373,-385,30,30,30,-383,30,-201,-154,-386,-293,-389,30,184,30,-290,-388,30,30,-372,30,-200,-349,30,-492,-137,30,30,-492,-286,-397,-292,30,-153,-492,30,-291,30,-492,30,-55,30,-356,30,-56,-135,-232,-241,-239,30,-242,-235,-238,-233,-231,-236,-234,-240,30,-237,-230,-152,-201,-1,-2,30,-354,-83,365,-475,-482,-490,30,-488,-484,-478,-489,-483,184,184,-472,-480,-479,-473,-470,-474,30,-476,-485,-487,-491,-486,-477,-481,-131,-360,30,30,-224,30,-311,-172,-303,-138,30,-348,30,-343,30,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,30,-350,30,-129,30,30,-141,-70,-405,30,-69,-377,-404,30,-363,-47,30,30,-121,30,30,-48,30,-167,-166,-168,-169,30,-77,-78,-143,-352,30,-371,30,-369,30,30,30,-358,-357,-136,30,30,-84,-355,-471,-491,184,184,-393,-447,-132,-362,-361,-391,30,30,30,-222,-374,30,-380,30,-381,30,30,-347,-345,-378,-392,30,30,30,30,-130,-351,-321,30,-142,-403,30,30,30,30,30,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,30,-299,-448,-449,30,-492,30,-492,-119,30,-308,30,-402,30,30,30,-401,30,-309,30,30,-207,-300,-450,184,30,30,-297,-115,-36,30,-35,30,30,30,30,30,-492,-41,-120,-42,-307,30,-202,30,-310,-431,30,-171,-298,-116,-301,-304,-306,-305,-203,-322,30,-296,30,30,-302,-295,30,]),'ASSERT':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[31,-151,-287,31,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,31,-167,-166,-168,-169,31,31,31,-321,31,-208,-299,-492,-492,-119,-308,31,-309,31,31,-207,-300,31,-297,-115,-36,-35,31,31,-492,-41,-120,-42,-307,31,-202,31,-310,-431,31,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,31,-302,-295,]),'QUESTION':([2,27,30,35,43,50,55,59,64,67,70,88,98,246,248,287,288,289,294,373,381,411,417,431,464,470,486,581,593,],[-395,-387,-394,-390,-382,-385,-383,-386,-389,-384,-388,289,-397,289,-396,-141,289,-405,-404,-393,-391,-380,-381,-392,-142,-403,-379,-402,-401,]),'TIMESEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,121,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'IMPORT':([0,4,8,11,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,202,210,211,212,276,278,279,280,282,314,316,317,318,340,361,397,398,410,457,459,460,482,504,516,539,540,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[33,-151,-287,141,33,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-279,-311,-172,-303,33,-269,-127,-270,-264,-167,-166,-168,-169,33,33,-280,-125,33,-321,-263,-128,33,-208,-299,-278,-126,-492,-492,-119,-308,33,-309,33,33,-207,-300,33,-297,-115,-36,-35,33,33,-492,-41,-120,-42,-307,33,-202,33,-310,-431,33,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,33,-302,-295,]),'AND':([2,6,16,19,27,30,35,43,49,50,52,55,59,63,64,67,70,74,81,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,232,239,244,245,246,248,259,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,334,335,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,581,593,596,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-349,-492,-492,-397,-492,333,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-113,-31,-336,-32,-492,-396,-370,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-85,333,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-402,-401,-492,]),'ELSE':([2,6,16,19,27,30,35,43,49,50,52,55,59,63,64,67,70,74,76,81,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,345,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,438,439,449,450,457,464,470,486,487,488,489,490,491,492,494,495,499,500,504,516,545,575,576,581,593,604,629,630,631,633,647,679,685,690,695,721,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,507,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-321,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-208,612,-492,612,-119,-402,-401,-207,612,-115,-36,-35,-120,-116,612,-304,-322,-295,]),'GT':([2,6,16,17,19,27,30,35,43,49,50,55,59,63,64,66,67,70,74,81,88,95,98,104,115,117,119,120,147,148,150,151,168,170,188,189,232,245,246,248,259,272,274,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,336,346,347,348,362,363,367,372,373,374,376,377,378,381,409,411,417,426,429,430,431,449,450,464,470,486,487,488,489,490,491,492,494,495,521,523,581,593,596,614,615,],[-395,-492,-492,179,-359,-387,-394,-390,-382,-373,-385,-383,-386,235,-389,179,-384,-388,-372,-349,-492,-492,-397,-492,-55,-356,-56,-135,-1,-2,-354,-83,179,179,-131,-360,-113,235,-492,-396,-370,-350,-129,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-369,-358,-357,-136,-84,-355,179,179,-393,-447,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-448,-449,-402,-401,235,-450,179,]),'LE':([2,6,16,19,27,30,35,43,49,50,55,59,63,64,67,70,74,81,88,95,98,104,115,117,119,120,147,148,150,151,188,189,232,245,246,248,259,272,274,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,449,450,464,470,486,487,488,489,490,491,492,494,495,581,593,596,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-383,-386,236,-389,-384,-388,-372,-349,-492,-492,-397,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-113,236,-492,-396,-370,-350,-129,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-402,-401,236,]),'MODEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,128,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'DIVIDE':([2,17,27,30,35,43,49,50,55,59,64,66,67,70,74,88,95,98,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,246,248,259,287,288,289,291,292,294,308,311,329,336,364,365,367,372,373,374,381,409,411,417,430,431,464,470,486,487,488,489,490,491,492,521,523,581,593,614,615,],[-395,153,-387,-394,-390,-382,-373,-385,-383,-386,-389,153,-384,-388,-372,-492,307,-397,153,-475,-482,-490,-488,-484,-478,-489,-483,153,153,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,-492,-396,-370,-141,-70,-405,-69,-377,-404,-121,307,-371,-369,-471,-491,153,153,-393,-447,-391,-374,-380,-381,-378,-392,-142,-403,-379,-367,-366,-368,-365,-122,-364,-448,-449,-402,-401,-450,153,]),'IN':([2,6,16,19,27,30,35,43,49,50,55,59,63,64,67,70,74,81,88,95,98,104,115,117,119,120,147,148,150,151,188,189,205,222,232,241,245,246,248,250,251,252,253,259,272,274,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,432,433,434,435,449,450,464,470,486,487,488,489,490,491,492,494,495,546,556,557,558,581,593,596,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-383,-386,240,-389,-384,-388,-372,-349,-492,-492,-397,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-348,-113,428,240,-492,-396,-411,-492,-412,436,-370,-350,-129,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-93,-415,-223,-492,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,634,-413,-94,-414,-402,-401,240,]),'AMPERSAND':([2,6,16,19,27,30,35,43,49,50,55,59,64,67,70,74,88,95,98,115,117,119,120,148,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,246,247,248,259,287,288,289,291,292,294,304,305,308,311,329,336,346,347,348,362,363,364,365,367,368,369,371,373,376,377,378,381,409,411,417,430,431,464,470,486,487,488,489,490,491,492,517,518,519,520,522,524,581,593,615,],[-395,-492,149,-359,-387,-394,-390,-382,-373,-385,-383,-386,-389,-384,-388,-372,-492,-492,-397,-55,-356,-56,-135,149,-83,-458,-475,-482,-463,-460,-490,-461,-488,-484,-478,-456,-451,-489,-459,-483,-465,-472,-480,-479,371,-464,-473,-470,-474,-462,-476,-485,-487,-394,-486,-477,-481,-131,-360,-492,371,-396,-370,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-371,-369,-358,-357,-136,-84,-355,-471,-491,-452,371,371,-453,-393,-132,-362,-361,-391,-374,-380,-381,-378,-392,-142,-403,-379,-367,-366,-368,-365,-122,-364,-466,-457,-468,-469,-454,-467,-402,-401,-455,]),'PASS':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[112,-151,-287,112,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,112,-167,-166,-168,-169,112,112,112,-321,112,-208,-299,-492,-492,-119,-308,112,-309,112,112,-207,-300,112,-297,-115,-36,-35,112,112,-492,-41,-120,-42,-307,112,-202,112,-310,-431,112,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,112,-302,-295,]),'ASYNC':([0,4,8,14,20,22,32,37,38,42,45,57,58,62,69,80,96,99,101,103,109,143,144,210,211,212,313,314,316,317,318,403,457,504,516,543,545,575,576,578,580,600,604,613,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,685,690,691,693,694,695,700,713,721,],[47,-151,-287,47,-289,-319,-164,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,315,-153,-291,-152,-201,-311,-172,-303,-165,-167,-166,-168,-169,-162,-321,-208,-299,-163,-492,-492,-119,-308,47,-309,-207,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,47,-310,-431,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,-302,-295,]),'LSHIFTEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,124,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'ELLIPSIS':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,84,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,278,279,280,282,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,364,365,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,460,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[50,-395,-151,-492,-287,50,50,50,-492,185,-359,-289,-319,50,-387,50,-394,50,-390,-320,-294,-318,-382,-288,50,-373,-385,50,50,50,-383,50,-201,-154,-386,-293,-389,50,185,-384,-290,-388,50,50,-372,50,-200,-349,280,50,-492,-137,50,50,-492,-286,-397,-292,50,-153,-492,50,-291,50,-492,50,-55,50,-356,50,-56,-135,-232,-241,-239,50,-242,-235,-238,-233,-231,-236,-234,-240,50,-237,-230,-152,-201,-1,-2,50,-354,-83,185,-475,-482,-490,50,-488,-484,-478,-489,-483,185,185,-472,-480,-479,-473,-470,-474,50,-476,-485,-487,-491,-486,-477,-481,-131,-360,50,50,-224,50,-311,-172,-303,-138,50,-348,50,-343,50,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,50,-350,50,-129,50,-269,-127,-270,280,50,-141,-70,-405,50,-69,-377,-404,50,-363,-47,50,50,-121,50,50,-48,50,-167,-166,-168,-169,50,-77,-78,-143,-352,50,-371,50,-369,50,50,50,-358,-357,-136,50,50,-84,-355,-471,-491,185,185,-393,-447,-132,-362,-361,-391,50,50,50,-222,-374,50,-380,50,-381,50,50,-347,-345,-378,-392,50,50,50,50,-130,-351,-321,-128,50,-142,-403,50,50,50,50,50,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,50,-299,-448,-449,50,-492,50,-492,-119,50,-308,50,-402,50,50,50,-401,50,-309,50,50,-207,-300,-450,185,50,50,-297,-115,-36,50,-35,50,50,50,50,50,-492,-41,-120,-42,-307,50,-202,50,-310,-431,50,-171,-298,-116,-301,-304,-306,-305,-203,-322,50,-296,50,50,-302,-295,50,]),'PLUS':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,364,365,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[110,-395,-151,-492,-287,110,110,110,-492,186,191,-289,-319,110,-387,110,-394,110,-390,-320,-294,-318,-382,-288,110,-373,-385,110,110,110,-383,110,-201,-154,-386,-293,-389,186,-384,-290,-388,110,110,-372,110,-200,-349,110,-492,-137,110,110,-492,-286,-397,-292,110,-153,-492,110,-291,110,-492,110,-55,110,-356,110,-56,-135,-232,-241,-239,110,-242,-235,-238,-233,-231,-236,-234,-240,110,-237,-230,-152,-201,-1,-2,110,-354,-83,186,-475,-482,-490,110,-488,-484,-478,-489,-483,186,186,-472,-480,-479,-473,-470,-474,110,-476,-485,-487,-491,-486,-477,-481,-131,191,110,110,-224,110,-311,-172,-303,-138,110,-348,110,-343,110,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,110,-350,110,-129,110,110,-141,-70,-405,110,-69,-377,-404,110,-363,-47,110,110,-121,110,110,-48,110,-167,-166,-168,-169,110,-77,-78,-143,-352,110,-371,110,-369,110,110,110,-358,-357,-136,110,110,-84,-355,-471,-491,186,186,-393,-447,-132,-362,-361,-391,110,110,110,-222,-374,110,-380,110,-381,110,110,-347,-345,-378,-392,110,110,110,110,-130,-351,-321,110,-142,-403,110,110,110,110,110,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,110,-299,-448,-449,110,-492,110,-492,-119,110,-308,110,-402,110,110,110,-401,110,-309,110,110,-207,-300,-450,186,110,110,-297,-115,-36,110,-35,110,110,110,110,110,-492,-41,-120,-42,-307,110,-202,110,-310,-431,110,-171,-298,-116,-301,-304,-306,-305,-203,-322,110,-296,110,110,-302,-295,110,]),'XOR':([2,6,16,17,19,27,30,35,43,49,50,55,59,64,66,67,70,74,88,95,98,104,115,117,119,120,147,148,150,151,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,188,189,246,248,259,287,288,289,291,292,294,304,305,308,311,325,326,329,336,346,347,348,362,363,364,365,367,372,373,374,376,377,378,381,409,411,417,430,431,464,470,486,487,488,489,490,491,492,494,495,521,523,581,593,614,615,],[-395,-492,-492,161,-359,-387,-394,-390,-382,-373,-385,-383,-386,-389,161,-384,-388,-372,-492,-492,-397,328,-55,-356,-56,-135,-1,-2,-354,-83,161,-475,-482,-490,-488,-484,-478,-489,-483,161,161,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,-131,-360,-492,-396,-370,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,328,-143,-371,-369,-358,-357,-136,-84,-355,-471,-491,161,161,-393,-447,-132,-362,-361,-391,-374,-380,-381,-378,-392,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-448,-449,-402,-401,-450,161,]),'MOD':([2,17,27,30,35,43,49,50,55,59,64,66,67,70,74,88,95,98,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,246,248,259,287,288,289,291,292,294,308,311,329,336,364,365,367,372,373,374,381,409,411,417,430,431,464,470,486,487,488,489,490,491,492,521,523,581,593,614,615,],[-395,167,-387,-394,-390,-382,-373,-385,-383,-386,-389,167,-384,-388,-372,-492,306,-397,167,-475,-482,-490,-488,-484,-478,-489,-483,167,167,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,-492,-396,-370,-141,-70,-405,-69,-377,-404,-121,306,-371,-369,-471,-491,167,167,-393,-447,-391,-374,-380,-381,-378,-392,-142,-403,-379,-367,-366,-368,-365,-122,-364,-448,-449,-402,-401,-450,167,]),'REGEXPATH':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,159,168,170,180,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[64,-395,-151,-492,-287,64,64,64,-492,156,-359,-289,-319,64,-387,64,-394,64,-390,-320,-294,-318,-382,-288,64,-373,-385,64,64,64,-383,64,-201,-154,-386,-293,-389,64,156,-384,-290,-388,64,64,-372,64,-200,-349,64,-492,-137,64,64,-492,-286,-397,-292,64,-153,-492,64,-291,64,-492,64,-55,64,-356,64,-56,-135,-232,-241,-239,64,-242,-235,-238,-233,-231,-236,-234,-240,64,-237,-230,-152,-201,-1,-2,64,-354,-83,64,156,156,64,-131,-360,64,64,-224,64,-311,-172,-303,-138,64,-348,64,-343,64,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,64,-350,64,-129,64,64,-141,-70,-405,64,-69,-377,-404,64,-363,-47,64,64,-121,64,64,-48,64,-167,-166,-168,-169,64,-77,-78,-143,-352,64,-371,64,-369,64,64,64,-358,-357,-136,64,64,-84,-355,156,156,-393,-447,-132,-362,-361,-391,64,64,64,-222,-374,64,-380,64,-381,64,64,-347,-345,-378,-392,64,64,64,64,-130,-351,-321,64,-142,-403,64,64,64,64,64,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,64,-299,-448,-449,64,-492,64,-492,-119,64,-308,64,-402,64,64,64,-401,64,-309,64,64,-207,-300,-450,156,64,64,-297,-115,-36,64,-35,64,64,64,64,64,-492,-41,-120,-42,-307,64,-202,64,-310,-431,64,-171,-298,-116,-301,-304,-306,-305,-203,-322,64,-296,64,64,-302,-295,64,]),'AWAIT':([0,2,4,6,8,9,13,14,16,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,159,180,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,373,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[65,-395,-151,-492,-287,65,65,65,-492,-359,-289,-319,65,-387,65,-394,65,-390,-320,-294,-318,-382,-288,65,-373,-385,65,65,65,-383,65,-201,-154,-386,-293,-389,-384,-290,-388,65,65,-372,65,-200,-349,65,-492,-137,65,65,-492,-286,-397,-292,65,-153,-492,65,-291,65,-492,65,-55,65,-356,65,-56,-135,-232,-241,-239,65,-242,-235,-238,-233,-231,-236,-234,-240,65,-237,-230,-152,-201,-1,-2,65,-354,-83,65,65,-131,-360,65,65,-224,65,-311,-172,-303,-138,65,-348,65,-343,65,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,65,-350,65,-129,65,65,-141,-70,-405,65,-69,-377,-404,65,-363,-47,65,65,-121,65,65,-48,65,-167,-166,-168,-169,65,-77,-78,-143,-352,65,-371,65,-369,65,65,65,-358,-357,-136,65,65,-84,-355,-393,-132,-362,-361,-391,65,65,65,-222,-374,65,-380,65,-381,65,65,-347,-345,-378,-392,65,65,65,65,-130,-351,-321,65,-142,-403,65,65,65,65,65,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,65,-299,65,-492,65,-492,-119,65,-308,65,-402,65,65,65,-401,65,-309,65,65,-207,-300,65,65,-297,-115,-36,65,-35,65,65,65,65,65,-492,-41,-120,-42,-307,65,-202,65,-310,-431,65,-171,-298,-116,-301,-304,-306,-305,-203,-322,65,-296,65,65,-302,-295,65,]),'DOLLAR_LPAREN':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,159,168,170,180,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[66,-395,-151,-492,-287,66,66,66,-492,168,-359,-289,-319,66,-387,66,-394,66,-390,-320,-294,-318,-382,-288,66,-373,-385,66,66,66,-383,66,-201,-154,-386,-293,-389,66,168,-384,-290,-388,66,66,-372,66,-200,-349,66,-492,-137,66,66,-492,-286,-397,-292,66,-153,-492,66,-291,66,-492,66,-55,66,-356,66,-56,-135,-232,-241,-239,66,-242,-235,-238,-233,-231,-236,-234,-240,66,-237,-230,-152,-201,-1,-2,66,-354,-83,66,168,168,66,-131,-360,66,66,-224,66,-311,-172,-303,-138,66,-348,66,-343,66,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,66,-350,66,-129,66,66,-141,-70,-405,66,-69,-377,-404,66,-363,-47,66,66,-121,66,66,-48,66,-167,-166,-168,-169,66,-77,-78,-143,-352,66,-371,66,-369,66,66,66,-358,-357,-136,66,66,-84,-355,168,168,-393,-447,-132,-362,-361,-391,66,66,66,-222,-374,66,-380,66,-381,66,66,-347,-345,-378,-392,66,66,66,66,-130,-351,-321,66,-142,-403,66,66,66,66,66,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,66,-299,-448,-449,66,-492,66,-492,-119,66,-308,66,-402,66,66,66,-401,66,-309,66,66,-207,-300,-450,168,66,66,-297,-115,-36,66,-35,66,66,66,66,66,-492,-41,-120,-42,-307,66,-202,66,-310,-431,66,-171,-298,-116,-301,-304,-306,-305,-203,-322,66,-296,66,66,-302,-295,66,]),'WS':([152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,247,364,365,367,368,369,371,374,517,518,519,520,521,522,524,615,],[-458,-475,-482,-463,-460,-490,-461,-488,-484,-478,-456,367,-489,-459,-483,-465,-472,-480,-479,370,-464,-473,-470,-474,-462,-476,-485,-487,-394,-486,-477,-481,370,-471,-491,-452,370,370,-453,523,-466,-457,-468,-469,614,615,-467,-455,]),'AT_LPAREN':([17,66,168,170,367,372,374,521,523,614,615,],[159,159,159,159,159,159,-447,-448,-449,-450,159,]),'DOUBLEDIV':([2,17,27,30,35,43,49,50,55,59,64,66,67,70,74,88,95,98,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,246,248,259,287,288,289,291,292,294,308,311,329,336,364,365,367,372,373,374,381,409,411,417,430,431,464,470,486,487,488,489,490,491,492,521,523,581,593,614,615,],[-395,182,-387,-394,-390,-382,-373,-385,-383,-386,-389,182,-384,-388,-372,-492,309,-397,182,-475,-482,-490,-488,-484,-478,-489,-483,182,182,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,-492,-396,-370,-141,-70,-405,-69,-377,-404,-121,309,-371,-369,-471,-491,182,182,-393,-447,-391,-374,-380,-381,-378,-392,-142,-403,-379,-367,-366,-368,-365,-122,-364,-448,-449,-402,-401,-450,182,]),'NONE':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,364,365,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[59,-395,-151,-492,-287,59,59,59,-492,183,-359,-289,-319,59,-387,59,-394,59,-390,-320,-294,-318,-382,-288,59,-373,-385,59,59,59,-383,59,-201,-154,-386,-293,-389,59,183,-384,-290,-388,59,59,-372,59,-200,-349,59,-492,-137,59,59,-492,-286,-397,-292,59,-153,-492,59,-291,59,-492,59,-55,59,-356,59,-56,-135,-232,-241,-239,59,-242,-235,-238,-233,-231,-236,-234,-240,59,-237,-230,-152,-201,-1,-2,59,-354,-83,183,-475,-482,-490,59,-488,-484,-478,-489,-483,183,183,-472,-480,-479,-473,-470,-474,59,-476,-485,-487,-491,-486,-477,-481,-131,-360,59,59,-224,59,-311,-172,-303,-138,59,-348,59,-343,59,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,59,-350,59,-129,59,59,-141,-70,-405,59,-69,-377,-404,59,-363,-47,59,59,-121,59,59,-48,59,-167,-166,-168,-169,59,-77,-78,-143,-352,59,-371,59,-369,59,59,59,-358,-357,-136,59,59,-84,-355,-471,-491,183,183,-393,-447,-132,-362,-361,-391,59,59,59,-222,-374,59,-380,59,-381,59,59,-347,-345,-378,-392,59,59,59,59,-130,-351,-321,59,-142,-403,59,59,59,59,59,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,59,-299,-448,-449,59,-492,59,-492,-119,59,-308,59,-402,59,59,59,-401,59,-309,59,59,-207,-300,-450,183,59,59,-297,-115,-36,59,-35,59,59,59,59,59,-492,-41,-120,-42,-307,59,-202,59,-310,-431,59,-171,-298,-116,-301,-304,-306,-305,-203,-322,59,-296,59,59,-302,-295,59,]),'RARROW':([379,620,],[527,-173,]),'AS':([2,3,6,16,19,21,27,30,35,43,49,50,52,55,59,63,64,67,70,74,76,81,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,199,202,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,296,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,358,362,363,373,376,377,378,381,397,398,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,539,540,560,581,593,606,650,],[-395,-323,-492,-492,-359,-325,-387,-394,-390,-382,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,390,-279,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,479,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,390,-84,-355,-393,-132,-362,-361,-391,-280,-125,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-278,-126,-328,-402,-401,-324,390,]),'PLUSEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,138,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'TRUE':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,364,365,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[27,-395,-151,-492,-287,27,27,27,-492,160,-359,-289,-319,27,-387,27,-394,27,-390,-320,-294,-318,-382,-288,27,-373,-385,27,27,27,-383,27,-201,-154,-386,-293,-389,27,160,-384,-290,-388,27,27,-372,27,-200,-349,27,-492,-137,27,27,-492,-286,-397,-292,27,-153,-492,27,-291,27,-492,27,-55,27,-356,27,-56,-135,-232,-241,-239,27,-242,-235,-238,-233,-231,-236,-234,-240,27,-237,-230,-152,-201,-1,-2,27,-354,-83,160,-475,-482,-490,27,-488,-484,-478,-489,-483,160,160,-472,-480,-479,-473,-470,-474,27,-476,-485,-487,-491,-486,-477,-481,-131,-360,27,27,-224,27,-311,-172,-303,-138,27,-348,27,-343,27,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,27,-350,27,-129,27,27,-141,-70,-405,27,-69,-377,-404,27,-363,-47,27,27,-121,27,27,-48,27,-167,-166,-168,-169,27,-77,-78,-143,-352,27,-371,27,-369,27,27,27,-358,-357,-136,27,27,-84,-355,-471,-491,160,160,-393,-447,-132,-362,-361,-391,27,27,27,-222,-374,27,-380,27,-381,27,27,-347,-345,-378,-392,27,27,27,27,-130,-351,-321,27,-142,-403,27,27,27,27,27,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,27,-299,-448,-449,27,-492,27,-492,-119,27,-308,27,-402,27,27,27,-401,27,-309,27,27,-207,-300,-450,160,27,27,-297,-115,-36,27,-35,27,27,27,27,27,-492,-41,-120,-42,-307,27,-202,27,-310,-431,27,-171,-298,-116,-301,-304,-306,-305,-203,-322,27,-296,27,27,-302,-295,27,]),'RSHIFTEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,135,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'FOR':([0,2,3,4,6,8,14,16,19,20,21,22,27,30,35,37,38,42,43,44,45,47,49,50,52,55,57,58,59,62,63,64,67,69,70,74,76,80,81,88,95,96,98,99,103,104,108,109,115,117,119,120,143,144,147,148,150,151,188,189,210,211,212,219,220,222,227,228,229,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,314,316,317,318,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,409,411,416,417,426,429,430,431,438,439,449,450,457,464,470,477,486,487,488,489,490,491,492,494,495,499,500,504,516,545,555,560,575,576,578,580,581,593,600,604,606,613,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,681,685,690,691,693,694,695,700,713,721,722,723,725,743,],[72,-395,-323,-151,-492,-287,72,-492,-359,-289,-325,-319,-387,-394,-390,-320,-294,-318,-382,-226,-288,72,-373,-385,-335,-383,-201,-154,-386,-293,-492,-389,-384,-290,-388,-372,-492,-200,-349,-492,-492,-286,-397,-292,-153,-492,-492,-291,-55,-356,-56,-135,-152,-201,-1,-2,-354,-83,-131,-360,-311,-172,-303,412,-225,-348,412,412,-225,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-167,-166,-168,-169,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-421,-381,-337,-114,-378,-392,-331,-124,-130,-351,-321,-142,-403,412,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-208,-299,-492,-420,-328,-492,-119,-308,72,-402,-401,-309,-207,-324,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,72,-310,-431,-171,-298,-116,412,-301,-304,-306,-305,-203,-322,-296,-302,-295,-326,412,-327,-329,]),'RAISE':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[9,-151,-287,9,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,9,-167,-166,-168,-169,9,9,9,-321,9,-208,-299,-492,-492,-119,-308,9,-309,9,9,-207,-300,9,-297,-115,-36,-35,9,9,-492,-41,-120,-42,-307,9,-202,9,-310,-431,9,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,9,-302,-295,]),'MINUS':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,364,365,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[75,-395,-151,-492,-287,75,75,75,-492,181,190,-289,-319,75,-387,75,-394,75,-390,-320,-294,-318,-382,-288,75,-373,-385,75,75,75,-383,75,-201,-154,-386,-293,-389,181,-384,-290,-388,75,75,-372,75,-200,-349,75,-492,-137,75,75,-492,-286,-397,-292,75,-153,-492,75,-291,75,-492,75,-55,75,-356,75,-56,-135,-232,-241,-239,75,-242,-235,-238,-233,-231,-236,-234,-240,75,-237,-230,-152,-201,-1,-2,75,-354,-83,181,-475,-482,-490,75,-488,-484,-478,-489,-483,181,181,-472,-480,-479,-473,-470,-474,75,-476,-485,-487,-491,-486,-477,-481,-131,190,75,75,-224,75,-311,-172,-303,-138,75,-348,75,-343,75,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,75,-350,75,-129,75,75,-141,-70,-405,75,-69,-377,-404,75,-363,-47,75,75,-121,75,75,-48,75,-167,-166,-168,-169,75,-77,-78,-143,-352,75,-371,75,-369,75,75,75,-358,-357,-136,75,75,-84,-355,-471,-491,181,181,-393,-447,-132,-362,-361,-391,75,75,75,-222,-374,75,-380,75,-381,75,75,-347,-345,-378,-392,75,75,75,75,-130,-351,-321,75,-142,-403,75,75,75,75,75,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,75,-299,-448,-449,75,-492,75,-492,-119,75,-308,75,-402,75,75,75,-401,75,-309,75,75,-207,-300,-450,181,75,75,-297,-115,-36,75,-35,75,75,75,75,75,-492,-41,-120,-42,-307,75,-202,75,-310,-431,75,-171,-298,-116,-301,-304,-306,-305,-203,-322,75,-296,75,75,-302,-295,75,]),'XOREQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,129,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'LAMBDA':([0,2,4,6,8,9,13,14,16,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,55,56,57,58,59,62,64,67,69,70,74,80,81,88,89,90,94,95,96,98,99,102,103,104,109,113,115,117,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,150,151,159,180,188,189,205,207,210,211,212,213,222,246,248,259,272,274,276,285,287,288,289,290,291,292,294,295,304,305,308,311,314,316,317,318,320,324,325,326,327,329,336,340,343,344,346,347,348,354,361,362,363,373,376,377,378,381,382,384,404,408,409,410,411,417,421,425,430,431,436,441,442,449,450,457,462,464,470,471,478,481,482,486,487,488,489,490,491,492,494,495,504,507,516,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,617,622,629,630,631,632,633,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[78,-395,-151,-492,-287,78,78,78,-492,-359,-289,-319,78,-387,78,-394,78,-390,-320,-294,-318,-382,-288,78,-373,-385,78,78,-383,78,-201,-154,-386,-293,-389,-384,-290,-388,-372,-200,-349,-492,-137,78,78,-492,-286,-397,-292,78,-153,-492,-291,-492,-55,-356,-56,-135,-232,-241,-239,78,-242,-235,-238,-233,-231,-236,-234,-240,78,-237,-230,-152,-201,-1,-2,-354,-83,78,78,-131,-360,-224,78,-311,-172,-303,-138,-348,-492,-396,-370,-350,-129,78,78,-141,-70,-405,78,-69,-377,-404,78,-363,-47,-121,-48,-167,-166,-168,-169,78,-77,-78,-143,-352,-371,-369,78,78,78,-358,-357,-136,78,78,-84,-355,-393,-132,-362,-361,-391,78,78,78,-222,-374,78,-380,-381,78,78,-378,-392,78,78,78,-130,-351,-321,78,-142,-403,78,78,78,78,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,78,-299,78,-492,78,-492,-119,78,-308,78,-402,78,78,78,-401,78,-309,78,78,-207,-300,78,78,-297,-115,-36,78,-35,78,78,78,78,-492,-41,-120,-42,-307,78,-202,78,-310,-431,78,-171,-298,-116,-301,-304,-306,-305,-203,-322,78,-296,78,724,-302,-295,724,]),'MINUSEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,132,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'AMPERSANDEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,133,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'GLOBAL':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[82,-151,-287,82,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,82,-167,-166,-168,-169,82,82,82,-321,82,-208,-299,-492,-492,-119,-308,82,-309,82,82,-207,-300,82,-297,-115,-36,-35,82,82,-492,-41,-120,-42,-307,82,-202,82,-310,-431,82,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,82,-302,-295,]),'TRY':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,314,316,317,318,457,504,516,545,575,576,578,580,600,604,613,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,685,690,691,693,694,695,700,713,721,],[83,-151,-287,83,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,-167,-166,-168,-169,-321,-208,-299,-492,-492,-119,-308,83,-309,-207,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,83,-310,-431,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,-302,-295,]),'ELIF':([457,504,545,604,630,631,679,695,721,],[-321,-208,632,-207,-115,632,-116,-322,-295,]),'FROM':([0,2,3,4,6,8,14,16,19,20,21,22,27,30,35,37,38,42,43,45,49,50,52,55,57,58,59,62,63,64,67,69,70,74,76,80,81,88,95,96,98,99,102,103,104,108,109,115,117,119,120,140,143,144,147,148,150,151,188,189,210,211,212,232,239,244,245,246,248,259,260,261,263,264,272,274,276,286,287,288,289,291,292,294,304,305,308,311,314,316,317,318,324,325,326,327,329,331,332,334,335,336,340,346,347,348,361,362,363,373,376,377,378,381,409,410,411,417,426,429,430,431,438,439,449,450,457,464,470,482,486,487,488,489,490,491,492,494,495,499,500,504,516,545,560,575,576,578,580,581,593,600,601,603,604,606,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[84,-395,-323,-151,-492,-287,84,-492,-359,-289,-325,-319,-387,-394,-390,-320,-294,-318,-382,-288,-373,-385,-335,-383,-201,-154,-386,-293,-492,-389,-384,-290,-388,-372,-492,-200,-349,-492,-492,-286,-397,-292,320,-153,-492,-492,-291,-55,-356,-56,-135,354,-152,-201,-1,-2,-354,-83,-131,-360,-311,-172,-303,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,84,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-167,-166,-168,-169,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,84,-358,-357,-136,84,-84,-355,-393,-132,-362,-361,-391,-374,84,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-321,-142,-403,84,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-208,-299,-492,-328,-492,-119,-308,84,-402,-401,-309,84,84,-207,-324,-300,84,-297,-115,-36,-35,84,84,-492,-41,-120,-42,-307,84,-202,84,-310,-431,84,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,84,-302,-295,]),'LBRACE':([0,2,4,6,8,9,13,14,16,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,159,180,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,373,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[56,-395,-151,-492,-287,56,56,56,-492,-359,-289,-319,56,-387,56,-394,56,-390,-320,-294,-318,-382,-288,56,-373,-385,56,56,56,-383,56,-201,-154,-386,-293,-389,56,-384,-290,-388,56,56,-372,56,-200,-349,56,-492,-137,56,56,-492,-286,-397,-292,56,-153,-492,56,-291,56,-492,56,-55,56,-356,56,-56,-135,-232,-241,-239,56,-242,-235,-238,-233,-231,-236,-234,-240,56,-237,-230,-152,-201,-1,-2,56,-354,-83,56,56,-131,-360,56,56,-224,56,-311,-172,-303,-138,56,-348,56,-343,56,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,56,-350,56,-129,56,56,-141,-70,-405,56,-69,-377,-404,56,-363,-47,56,56,-121,56,56,-48,56,-167,-166,-168,-169,56,-77,-78,-143,-352,56,-371,56,-369,56,56,56,-358,-357,-136,56,56,-84,-355,-393,-132,-362,-361,-391,56,56,56,-222,-374,56,-380,56,-381,56,56,-347,-345,-378,-392,56,56,56,56,-130,-351,-321,56,-142,-403,56,56,56,56,56,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,56,-299,56,-492,56,-492,-119,56,-308,56,-402,56,56,56,-401,56,-309,56,56,-207,-300,56,56,-297,-115,-36,56,-35,56,56,56,56,56,-492,-41,-120,-42,-307,56,-202,56,-310,-431,56,-171,-298,-116,-301,-304,-306,-305,-203,-322,56,-296,56,56,-302,-295,56,]),'NOT':([0,2,4,6,8,9,13,14,16,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,55,56,57,58,59,62,63,64,67,69,70,74,80,81,87,88,89,90,94,95,96,98,99,102,103,104,109,113,114,115,117,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,150,151,159,180,188,189,205,207,210,211,212,213,222,232,238,245,246,248,259,262,272,274,276,285,287,288,289,290,291,292,294,295,304,305,308,311,314,316,317,318,320,324,325,326,327,329,333,336,340,343,344,346,347,348,354,361,362,363,373,376,377,378,381,382,384,404,408,409,410,411,417,421,425,426,429,430,431,436,441,442,449,450,457,462,464,470,471,478,481,482,486,487,488,489,490,491,492,494,495,504,507,516,527,545,549,575,576,577,578,580,581,582,585,591,593,595,596,600,601,603,604,613,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[87,-395,-151,-492,-287,87,87,87,-492,-359,-289,-319,87,-387,87,-394,87,-390,-320,-294,-318,-382,-288,87,-373,-385,87,87,-383,87,-201,-154,-386,-293,241,-389,-384,-290,-388,-372,-200,-349,87,-492,-137,87,87,-492,-286,-397,-292,87,-153,-492,-291,-492,87,-55,-356,-56,-135,-232,-241,-239,87,-242,-235,-238,-233,-231,-236,-234,-240,87,-237,-230,-152,-201,-1,-2,-354,-83,87,87,-131,-360,-224,87,-311,-172,-303,-138,-348,-113,427,241,-492,-396,-370,87,-350,-129,87,87,-141,-70,-405,87,-69,-377,-404,87,-363,-47,-121,-48,-167,-166,-168,-169,87,-77,-78,-143,-352,-371,87,-369,87,87,87,-358,-357,-136,87,87,-84,-355,-393,-132,-362,-361,-391,87,87,87,-222,-374,87,-380,-381,87,87,-337,-114,-378,-392,87,87,87,-130,-351,-321,87,-142,-403,87,87,87,87,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,87,-299,87,-492,87,-492,-119,87,-308,87,-402,87,87,87,-401,87,241,-309,87,87,-207,-300,87,87,-297,-115,-36,87,-35,87,87,87,87,87,-492,-41,-120,-42,-307,87,-202,87,-310,-431,87,-171,-298,-116,-301,-304,-306,-305,-203,-322,87,-296,87,87,-302,-295,87,]),'WITH':([0,4,8,14,20,22,37,38,42,45,47,57,58,62,69,80,96,99,103,109,143,144,210,211,212,314,316,317,318,457,504,516,545,575,576,578,580,600,604,613,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,685,690,691,693,694,695,700,713,721,],[90,-151,-287,90,-289,-319,-320,-294,-318,-288,90,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,-167,-166,-168,-169,-321,-208,-299,-492,-492,-119,-308,90,-309,-207,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,90,-310,-431,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,-302,-295,]),'COMMA':([2,3,6,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,113,115,117,119,120,147,148,150,151,188,189,196,198,199,201,202,208,209,214,219,220,222,227,228,229,232,239,244,245,246,248,250,251,252,259,260,261,263,264,268,269,271,272,274,275,283,284,286,287,288,289,291,292,294,296,297,298,304,305,308,311,324,325,326,327,329,331,332,334,335,336,342,346,347,348,357,358,362,363,373,376,377,378,381,387,388,389,393,394,397,398,405,407,409,411,415,416,417,418,420,424,426,429,430,431,432,435,438,439,443,444,445,446,447,448,449,450,454,455,461,463,464,467,468,469,470,473,474,477,480,483,484,486,487,488,489,490,491,492,494,495,499,500,509,510,511,513,514,531,534,535,536,537,538,539,540,550,552,555,556,557,560,561,562,563,564,565,566,569,570,572,573,581,582,583,584,586,587,588,589,592,593,594,596,597,598,599,602,606,609,610,619,621,623,624,625,626,627,636,640,641,654,655,656,657,659,660,662,667,668,669,670,671,672,676,677,681,682,684,687,688,696,697,698,699,702,703,707,708,709,710,711,715,716,718,719,722,723,725,727,728,730,731,734,736,737,742,743,],[-395,-323,-492,-492,-359,-325,-387,-394,-390,207,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,285,-492,-492,-397,-492,-492,344,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,382,384,-492,392,-279,207,-105,408,207,-225,-348,421,207,382,-113,-31,-336,-32,-492,-396,-411,434,-412,-370,-49,-330,-50,-123,-196,-492,-492,-350,-129,453,462,-103,-334,-141,-70,-405,-69,-377,-404,-313,481,453,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,384,-358,-357,-136,512,-492,-84,-355,-393,-132,-362,-361,-391,-7,-274,-8,-91,392,-280,-125,-227,-106,-374,-380,207,-421,-381,549,-97,207,-337,-114,-378,-392,-93,434,-331,-124,-38,-37,565,-75,570,-76,-130,-351,453,-99,-104,-284,-142,-408,585,-61,-403,591,-435,-225,-314,481,-111,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-13,-95,608,512,-272,-492,-492,-492,-271,-275,-92,-278,-126,-98,-422,637,-413,-94,-328,-174,-27,608,-109,-197,565,570,-197,-281,-100,-402,-492,-21,585,-101,608,-438,-89,591,-401,-436,-348,-439,-312,-315,-112,-324,-273,-96,669,-9,-10,-184,-67,676,-68,549,-492,-110,-492,-62,-102,-407,-434,-90,-437,608,-25,-185,-107,669,-183,-185,676,-492,-420,-284,-492,-198,-57,-492,-58,-409,-492,-108,-29,-442,-440,-441,-30,727,-410,-492,-186,-326,-492,-327,-197,734,736,-443,-197,-185,742,-185,-329,]),'LSHIFT':([2,6,19,27,30,35,43,49,50,55,59,64,67,70,74,88,95,98,119,120,188,189,246,248,259,287,288,289,291,292,294,304,305,308,311,329,336,346,347,348,373,376,377,378,381,409,411,417,430,431,464,470,486,487,488,489,490,491,492,581,593,],[-395,118,-359,-387,-394,-390,-382,-373,-385,-383,-386,-389,-384,-388,-372,-492,-492,-397,118,-135,-131,-360,-492,-396,-370,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-371,-369,-358,-357,-136,-393,-132,-362,-361,-391,-374,-380,-381,-378,-392,-142,-403,-379,-367,-366,-368,-365,-122,-364,-402,-401,]),'NONLOCAL':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[91,-151,-287,91,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,91,-167,-166,-168,-169,91,91,91,-321,91,-208,-299,-492,-492,-119,-308,91,-309,91,91,-207,-300,91,-297,-115,-36,-35,91,91,-492,-41,-120,-42,-307,91,-202,91,-310,-431,91,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,91,-302,-295,]),'IS':([2,6,16,19,27,30,35,43,49,50,55,59,63,64,67,70,74,81,88,95,98,104,115,117,119,120,147,148,150,151,188,189,232,245,246,248,259,272,274,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,449,450,464,470,486,487,488,489,490,491,492,494,495,581,593,596,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-383,-386,238,-389,-384,-388,-372,-349,-492,-492,-397,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-113,238,-492,-396,-370,-350,-129,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-402,-401,238,]),'RBRACKET':([2,3,6,16,19,21,27,30,35,43,44,49,50,52,53,55,59,63,64,67,70,74,76,81,88,95,98,104,108,115,117,119,120,147,148,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,205,207,209,217,218,219,220,221,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,364,365,367,369,371,373,376,377,378,381,405,407,409,411,413,414,415,417,426,429,430,431,438,439,449,450,464,465,467,468,469,470,486,487,488,489,490,491,492,494,495,499,500,517,518,519,520,522,524,547,560,581,582,583,584,586,587,593,606,608,615,654,655,656,657,658,681,696,697,698,699,707,708,709,710,711,716,722,723,725,731,743,],[-395,-323,-492,-492,-359,-325,-387,-394,-390,-382,-226,-373,-385,-335,-492,-383,-386,-492,-389,-384,-388,-372,-492,-349,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-458,-475,-482,-463,-460,-490,-461,-488,-484,-478,-456,-451,-489,-459,-483,-465,-472,-480,-479,373,-464,-473,-470,-474,-462,-476,-485,-487,-394,-486,-477,-481,-131,-360,-224,-223,-105,411,-64,-492,-225,-63,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-471,-491,-452,520,-453,-393,-132,-362,-361,-391,-227,-106,-374,-380,-399,-398,-492,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,581,-408,-492,-61,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-466,-457,-468,-469,-454,-467,-400,-328,-402,-492,-21,-22,-101,-492,-401,-324,-223,-455,-492,-62,-102,-407,-406,-492,-57,-492,-58,-409,-29,-442,-440,-441,-30,-410,-326,-492,-327,-443,-329,]),'PIPE':([2,6,16,19,27,30,35,43,49,50,55,59,64,67,70,74,81,88,95,98,104,115,117,119,120,147,148,150,151,152,153,154,155,156,157,158,160,161,162,163,164,165,166,167,169,171,172,173,174,175,176,177,178,179,181,182,183,184,185,186,187,188,189,246,247,248,259,272,274,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,336,346,347,348,362,363,364,365,367,368,369,370,371,373,376,377,378,381,409,411,417,430,431,449,450,464,470,486,487,488,489,490,491,492,494,495,517,518,519,520,522,524,581,593,615,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-383,-386,-389,-384,-388,-372,273,-492,-492,-397,-492,-55,-356,-56,-135,-1,-2,-354,-83,-458,-475,-482,-463,-460,-490,-461,-488,-484,-478,-456,-451,-489,-459,-483,-465,-472,-480,-479,374,-464,-473,-470,-474,-462,-476,-485,-487,-394,-486,-477,-481,-131,-360,-492,374,-396,-370,273,-129,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-369,-358,-357,-136,-84,-355,-471,-491,-452,374,374,521,-453,-393,-132,-362,-361,-391,-374,-380,-381,-378,-392,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-466,-457,-468,-469,-454,-467,-402,-401,-455,]),'$end':([0,2,3,4,6,8,12,14,15,16,19,20,21,22,27,30,35,36,37,38,40,42,43,45,49,50,52,55,57,58,59,62,63,64,67,69,70,73,74,76,80,81,85,86,88,95,96,98,99,103,104,108,109,115,117,119,120,143,144,147,148,150,151,188,189,210,211,212,231,232,239,244,245,246,248,254,255,256,258,259,260,261,263,264,272,274,283,284,285,286,287,288,289,291,292,294,304,305,308,311,314,316,317,318,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,437,438,439,449,450,457,461,462,463,464,470,486,487,488,489,490,491,492,494,495,499,500,504,516,545,560,575,576,578,581,593,600,604,606,613,629,630,631,633,645,646,647,648,649,663,664,666,678,679,685,690,691,693,695,700,713,721,],[-492,-395,-323,-151,-492,-287,-147,-150,0,-492,-359,-289,-325,-319,-387,-394,-390,-146,-320,-294,-148,-318,-382,-288,-373,-385,-335,-383,-201,-154,-386,-293,-492,-389,-384,-290,-388,-492,-372,-492,-200,-349,-145,-419,-492,-492,-286,-397,-292,-153,-492,-492,-291,-55,-356,-56,-135,-152,-201,-1,-2,-354,-83,-131,-360,-311,-172,-303,-149,-113,-31,-336,-32,-492,-396,-45,-157,-155,-46,-370,-49,-330,-50,-123,-350,-129,-417,-103,-418,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-167,-166,-168,-169,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-156,-331,-124,-130,-351,-321,-104,-416,-284,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-208,-299,-492,-328,-492,-119,-308,-402,-401,-309,-207,-324,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-310,-431,-171,-298,-116,-301,-304,-306,-305,-322,-296,-302,-295,]),'EXCEPT':([456,457,504,575,576,604,647,690,695,],[577,-321,-208,577,-119,-207,-120,-304,-322,]),'DIVEQUAL':([2,3,6,7,16,19,21,27,30,35,41,43,44,49,50,52,55,59,63,64,67,70,74,76,81,86,88,95,98,104,108,115,117,119,120,147,148,150,151,188,189,205,206,207,208,209,220,222,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,405,406,407,409,411,417,426,429,430,431,438,439,449,450,464,470,486,487,488,489,490,491,492,494,495,499,500,560,581,593,606,],[-395,-323,-492,134,-492,-359,-325,-387,-394,-390,-492,-382,-226,-373,-385,-335,-383,-386,-492,-389,-384,-388,-372,-492,-349,-225,-492,-492,-397,-492,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-224,-229,-223,-492,-105,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-227,-228,-106,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-328,-402,-401,-324,]),'COLON':([2,3,6,16,17,19,21,27,30,35,43,49,50,52,55,59,63,64,66,67,70,74,76,78,81,83,88,95,98,104,108,115,117,119,120,142,147,148,150,151,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,188,189,196,205,216,229,232,239,244,245,246,248,259,260,261,263,264,266,267,268,269,270,271,272,274,283,284,286,287,288,289,290,291,292,294,296,297,304,305,308,311,324,325,326,327,329,330,331,332,334,335,336,346,347,348,362,363,364,365,367,372,373,374,376,377,378,379,381,382,387,389,409,411,417,426,429,430,431,438,439,440,443,444,445,446,447,448,449,450,461,462,463,464,466,467,469,470,480,483,484,486,487,488,489,490,491,492,494,495,496,497,498,499,500,521,523,525,526,528,534,536,551,559,560,561,562,563,564,565,566,567,568,569,570,571,574,577,579,581,582,585,593,598,599,602,606,608,612,614,615,616,620,628,639,640,641,642,650,654,655,680,684,687,688,689,692,714,715,724,726,727,728,732,734,739,744,],[-395,-323,-492,-492,162,-359,-325,-387,-394,-390,-382,-373,-385,-335,-383,-386,-492,-389,162,-384,-388,-372,-492,-492,-349,276,-492,-492,-397,-492,-492,-55,-356,-56,-135,361,-1,-2,-354,-83,162,-475,-482,-490,-488,-484,-478,-489,-483,162,162,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,-131,-360,-419,-224,410,425,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,441,-73,-196,-492,-74,-492,-350,-129,-417,-103,-334,-141,-70,-405,-492,-69,-377,-404,-313,482,-363,-47,-121,-48,-77,-78,-143,-352,-371,-492,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-471,-491,162,162,-393,-447,-132,-362,-361,-492,-391,-418,-7,-8,-374,-380,-381,-337,-114,-378,-392,-331,-124,-195,-38,-37,-492,-75,-492,-76,-130,-351,-104,-416,-284,-142,582,-62,-61,-403,-314,601,-111,-379,-367,-366,-368,-365,-122,-364,-144,-353,-43,-44,603,-333,-86,-448,-449,-53,-54,617,622,-271,635,638,-328,-174,-27,-492,-109,-197,-28,-19,-194,-492,-197,-20,644,-316,651,-402,-492,-492,-401,-312,-315,-112,-324,-223,665,-450,162,-170,-173,-158,-188,-492,-110,-193,-492,697,-62,706,635,-492,-198,-199,-317,-192,-492,-492,-190,-197,-28,738,-197,-189,-191,]),'DEDENT':([8,20,22,37,38,42,45,62,69,80,96,99,109,144,210,211,212,314,316,317,318,457,504,516,545,575,576,578,600,604,613,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,685,690,691,693,694,695,700,713,721,],[-287,-289,-319,-320,-294,-318,-288,-293,-290,-200,-286,-292,-291,-201,-311,-172,-303,-167,-166,-168,-169,-321,-208,-299,-492,-492,-119,-308,-309,-207,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,695,-310,-431,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,-302,-295,]),'DOUBLE_QUESTION':([2,27,30,35,43,50,55,59,64,67,70,88,98,246,248,287,288,289,294,373,381,411,417,431,464,470,486,581,593,],[-395,-387,-394,-390,-382,-385,-383,-386,-389,-384,-388,294,-397,294,-396,-141,294,-405,-404,-393,-391,-380,-381,-392,-142,-403,-379,-402,-401,]),'LPAREN':([0,2,4,6,8,9,13,14,16,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,141,143,144,147,148,149,150,151,159,180,188,189,190,191,192,203,204,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,330,333,336,340,343,344,346,347,348,354,361,362,363,373,376,377,378,381,382,384,400,401,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,527,541,542,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[94,-395,-151,-492,-287,94,94,94,-492,-359,-289,-319,94,-387,94,-394,94,-390,-320,-294,-318,-382,-288,94,-373,-385,94,94,94,-383,94,-201,-154,-386,-293,-389,94,-384,-290,-388,94,94,-372,94,-200,-349,94,295,-137,94,94,-492,-286,-397,-292,94,-153,-492,94,-291,94,-492,94,-55,94,-356,94,-56,-135,-232,-241,-239,94,-242,-235,-238,-233,-231,-236,-234,-240,94,-237,-230,359,-152,-201,-1,-2,94,-354,-83,94,94,-131,-360,94,94,380,-160,404,-224,94,-311,-172,-303,-138,94,-348,94,-343,94,-339,-342,-338,-346,-344,-341,-340,295,-396,-370,94,-350,94,-129,94,94,-141,295,-405,94,-69,-377,-404,94,-363,-47,94,94,-121,94,94,-48,94,-167,-166,-168,-169,94,-77,-78,-143,-352,94,-371,404,94,-369,94,94,94,-358,-357,-136,94,94,-84,-355,-393,-132,-362,-361,-391,94,94,-87,-161,94,-222,-374,94,-380,94,-381,94,94,-347,-345,-378,-392,94,94,94,94,-130,-351,-321,94,-142,-403,94,94,94,94,94,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,94,-299,94,-159,-88,-492,94,-492,-119,94,-308,94,-402,94,94,94,-401,94,-309,94,94,-207,-300,94,94,-297,-115,-36,94,-35,94,94,94,94,94,-492,-41,-120,-42,-307,94,-202,94,-310,-431,94,-171,-298,-116,-301,-304,-306,-305,-203,-322,94,-296,94,94,-302,-295,94,]),'NUMBER':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,65,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,364,365,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[98,-395,-151,-492,-287,98,98,98,-492,157,-359,-289,-319,98,-387,98,-394,98,-390,-320,-294,-318,-382,-288,98,-373,-385,98,98,98,-383,98,-201,-154,-386,-293,-389,98,157,-384,-290,-388,98,98,-372,98,-200,-349,98,-492,-137,98,98,-492,-286,-397,-292,98,-153,-492,98,-291,98,-492,98,-55,98,-356,98,-56,-135,-232,-241,-239,98,-242,-235,-238,-233,-231,-236,-234,-240,98,-237,-230,-152,-201,-1,-2,98,-354,-83,157,-475,-482,-490,98,-488,-484,-478,-489,-483,157,157,-472,-480,-479,-473,-470,-474,98,-476,-485,-487,-491,-486,-477,-481,-131,-360,98,98,-224,98,-311,-172,-303,-138,98,-348,98,-343,98,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,98,-350,98,-129,98,98,-141,-70,-405,98,-69,-377,-404,98,-363,-47,98,98,-121,98,98,-48,98,-167,-166,-168,-169,98,-77,-78,-143,-352,98,-371,98,-369,98,98,98,-358,-357,-136,98,98,-84,-355,-471,-491,157,157,-393,-447,-132,-362,-361,-391,98,98,98,-222,-374,98,-380,98,-381,98,98,-347,-345,-378,-392,98,98,98,98,-130,-351,-321,98,-142,-403,98,98,98,98,98,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,98,-299,-448,-449,98,-492,98,-492,-119,98,-308,98,-402,98,98,98,-401,98,-309,98,98,-207,-300,-450,157,98,98,-297,-115,-36,98,-35,98,98,98,98,98,-492,-41,-120,-42,-307,98,-202,98,-310,-431,98,-171,-298,-116,-301,-304,-306,-305,-203,-322,98,-296,98,98,-302,-295,98,]),'NE':([2,6,16,19,27,30,35,43,49,50,55,59,63,64,67,70,74,81,88,95,98,104,115,117,119,120,147,148,150,151,188,189,232,245,246,248,259,272,274,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,449,450,464,470,486,487,488,489,490,491,492,494,495,581,593,596,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-383,-386,233,-389,-384,-388,-372,-349,-492,-492,-397,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-113,233,-492,-396,-370,-350,-129,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-402,-401,233,]),'IOREDIRECT':([17,66,168,170,367,372,374,521,523,614,615,],[169,169,169,169,169,169,-447,-448,-449,-450,169,]),'TILDE':([0,2,4,6,8,9,13,14,16,17,19,20,22,26,27,29,30,31,35,37,38,42,43,45,48,49,50,51,53,54,55,56,57,58,59,62,64,66,67,69,70,71,72,74,75,80,81,87,88,89,90,94,95,96,98,99,102,103,104,106,109,110,113,114,115,116,117,118,119,120,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,147,148,149,150,151,152,153,154,157,159,160,161,162,165,167,168,170,171,172,173,176,177,178,180,181,182,183,184,185,186,187,188,189,190,191,205,207,210,211,212,213,215,222,223,233,234,235,236,237,238,240,242,243,246,248,259,262,272,273,274,276,285,287,288,289,290,291,292,294,295,304,305,306,307,308,309,310,311,312,314,316,317,318,320,324,325,326,327,328,329,333,336,340,343,344,346,347,348,354,361,362,363,364,365,367,372,373,374,376,377,378,381,382,384,404,408,409,410,411,412,417,421,425,427,428,430,431,434,436,441,442,449,450,457,462,464,470,471,478,479,481,482,486,487,488,489,490,491,492,494,495,504,507,516,521,523,527,545,549,575,576,577,578,580,581,582,585,591,593,595,600,601,603,604,613,614,615,617,622,629,630,631,632,633,634,635,637,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,697,700,706,712,713,721,738,],[106,-395,-151,-492,-287,106,106,106,-492,176,-359,-289,-319,106,-387,106,-394,106,-390,-320,-294,-318,-382,-288,106,-373,-385,106,106,106,-383,106,-201,-154,-386,-293,-389,176,-384,-290,-388,106,106,-372,106,-200,-349,106,-492,-137,106,106,-492,-286,-397,-292,106,-153,-492,106,-291,106,-492,106,-55,106,-356,106,-56,-135,-232,-241,-239,106,-242,-235,-238,-233,-231,-236,-234,-240,106,-237,-230,-152,-201,-1,-2,106,-354,-83,176,-475,-482,-490,106,-488,-484,-478,-489,-483,176,176,-472,-480,-479,-473,-470,-474,106,-476,-485,-487,-491,-486,-477,-481,-131,-360,106,106,-224,106,-311,-172,-303,-138,106,-348,106,-343,106,-339,-342,-338,-346,-344,-341,-340,-492,-396,-370,106,-350,106,-129,106,106,-141,-70,-405,106,-69,-377,-404,106,-363,-47,106,106,-121,106,106,-48,106,-167,-166,-168,-169,106,-77,-78,-143,-352,106,-371,106,-369,106,106,106,-358,-357,-136,106,106,-84,-355,-471,-491,176,176,-393,-447,-132,-362,-361,-391,106,106,106,-222,-374,106,-380,106,-381,106,106,-347,-345,-378,-392,106,106,106,106,-130,-351,-321,106,-142,-403,106,106,106,106,106,-379,-367,-366,-368,-365,-122,-364,-144,-353,-208,106,-299,-448,-449,106,-492,106,-492,-119,106,-308,106,-402,106,106,106,-401,106,-309,106,106,-207,-300,-450,176,106,106,-297,-115,-36,106,-35,106,106,106,106,106,-492,-41,-120,-42,-307,106,-202,106,-310,-431,106,-171,-298,-116,-301,-304,-306,-305,-203,-322,106,-296,106,106,-302,-295,106,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,14,16,18,19,20,21,22,23,24,27,28,29,30,35,37,38,39,41,42,43,44,45,46,49,50,52,55,57,58,59,60,61,62,63,64,67,68,69,70,73,74,76,77,79,80,81,86,88,92,93,95,96,97,98,99,100,102,103,104,105,108,109,111,112,115,117,119,120,122,125,130,139,140,143,144,145,147,148,150,151,188,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,220,222,232,239,244,245,246,248,249,250,251,252,254,256,257,258,259,260,261,263,264,272,274,275,276,283,284,285,286,287,288,289,291,292,294,298,304,305,308,311,314,316,317,318,319,321,322,323,324,325,326,327,329,331,332,334,335,336,337,338,339,340,341,346,347,348,349,350,351,352,353,355,356,357,358,360,361,362,363,373,376,377,378,381,382,383,385,386,387,388,389,391,393,394,395,397,398,400,401,402,405,406,407,409,410,411,417,426,429,430,431,432,433,434,435,437,438,439,449,450,451,452,454,455,457,461,462,463,464,470,482,485,486,487,488,489,490,491,492,493,494,495,499,500,501,502,503,504,505,508,509,510,511,513,514,516,536,537,538,539,540,541,542,545,556,557,558,560,572,573,575,576,578,581,593,600,601,603,604,605,606,607,608,609,610,611,613,617,628,629,630,631,633,638,644,645,646,647,648,649,651,663,664,665,666,678,679,685,690,691,693,695,700,706,713,721,],[103,-395,-323,-151,-254,-492,-492,-287,-257,-252,103,-492,-261,-359,-289,-325,-319,-214,-251,-387,-253,-492,-394,-390,-320,-294,-249,-492,-318,-382,-226,-288,-209,-373,-385,-335,-383,231,-154,-386,-250,-256,-293,-492,-389,-384,-248,-290,-388,256,-372,-492,-210,-260,-200,-349,-225,-492,-212,-213,-492,-286,-215,-397,-292,-211,-492,-153,-492,-216,-492,-291,-492,-247,-55,-356,-56,-135,-40,-218,-39,-117,-258,-152,-201,-492,-1,-2,-354,-83,-131,-360,-255,-66,-419,-65,-492,-492,-262,-492,-279,-160,403,-224,-229,-223,-492,-105,-311,-172,-303,-225,-348,-113,-31,-336,-32,-492,-396,-246,-411,-492,-412,-39,-155,-219,437,-370,-49,-330,-50,-123,-350,-129,-492,458,-417,-103,-418,-334,-141,-70,-405,-69,-377,-404,-492,-363,-47,-121,-48,-167,-166,-168,-169,-444,-446,-79,-80,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-205,-492,-133,-204,504,-358,-357,-136,-118,-243,-244,-245,-217,-268,-267,-492,-492,-265,458,-84,-355,-393,-132,-362,-361,-391,-418,-23,-24,-285,-7,-274,-8,-11,-91,-12,-277,-280,-125,-87,-161,543,-227,-228,-106,-374,458,-380,-381,-337,-114,-378,-392,-93,-415,-223,-492,-156,-331,-124,-130,-351,-15,-282,-16,-99,-321,-104,-416,-284,-142,-403,458,-283,-379,-367,-366,-368,-365,-122,-364,-445,-144,-353,-333,-86,-134,604,-206,-208,-220,-259,-13,-95,-492,-14,-272,-299,-271,-275,-92,-278,-126,-159,-88,-492,-413,-94,-414,-328,-281,-100,-492,-119,-308,-402,-401,-309,458,458,-207,-221,-324,-276,-223,-273,-96,-266,-300,458,-158,-297,-115,-36,-35,458,458,-492,-41,-120,-42,-307,458,-310,-431,458,-171,-298,-116,-301,-304,-306,-305,-322,-296,458,-302,-295,]),'EQUALS':([2,3,6,7,16,17,19,21,27,30,35,41,43,44,48,49,50,52,55,59,63,64,66,67,70,73,74,76,81,86,88,89,95,98,102,104,108,113,115,117,119,120,122,139,145,146,147,148,150,151,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,188,189,196,205,206,207,208,209,213,220,222,232,239,244,245,246,248,259,260,261,263,264,268,269,272,274,283,284,285,286,287,288,289,291,292,294,304,305,308,311,319,321,322,323,324,325,326,327,329,331,332,334,335,336,342,343,344,346,347,348,349,350,351,352,362,363,364,365,367,372,373,374,376,377,378,381,382,405,406,407,408,409,411,417,426,429,430,431,438,439,449,450,461,462,463,464,470,477,486,487,488,489,490,491,492,493,494,495,499,500,506,521,523,531,534,560,581,593,606,614,615,621,623,624,640,672,702,],[-395,-323,-492,126,-492,172,-359,-325,-387,-394,-390,-492,-382,-226,-60,-373,-385,-335,-383,-386,-492,-389,172,-384,-388,126,-372,-492,-349,-225,-492,-137,-492,-397,-492,-492,-492,-492,-55,-356,-56,-135,126,-117,126,-59,-1,-2,-354,-83,172,-475,-482,-490,-488,-484,-478,-489,-483,172,172,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,-131,-360,-419,-224,-229,-223,-492,-105,-138,-225,-348,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-196,442,-350,-129,-417,-103,-418,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-444,-446,-79,-80,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,126,-492,-223,-358,-357,-136,-118,-243,-244,-245,-84,-355,-471,-491,172,172,-393,-447,-132,-362,-361,-391,-418,-227,-228,-106,-222,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-104,-416,-284,-142,-403,595,-379,-367,-366,-368,-365,-122,-364,-445,-144,-353,-333,-86,126,-448,-449,442,-492,-328,-402,-401,-324,-450,172,-9,-10,-184,442,-183,442,]),'RSHIFT':([2,6,17,19,27,30,35,43,49,50,55,59,64,66,67,70,74,88,95,98,119,120,168,170,188,189,246,248,259,287,288,289,291,292,294,304,305,308,311,329,336,346,347,348,367,372,373,374,376,377,378,381,409,411,417,430,431,464,470,486,487,488,489,490,491,492,521,523,581,593,614,615,],[-395,116,175,-359,-387,-394,-390,-382,-373,-385,-383,-386,-389,175,-384,-388,-372,-492,-492,-397,116,-135,175,175,-131,-360,-492,-396,-370,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-371,-369,-358,-357,-136,175,175,-393,-447,-132,-362,-361,-391,-374,-380,-381,-378,-392,-142,-403,-379,-367,-366,-368,-365,-122,-364,-448,-449,-402,-401,-450,175,]),'CLASS':([0,4,8,14,20,22,32,37,38,42,45,57,58,62,69,80,96,99,101,103,109,143,144,210,211,212,313,314,316,317,318,403,457,504,516,543,545,575,576,578,580,600,604,613,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,685,690,691,693,694,695,700,713,721,],[107,-151,-287,107,-289,-319,-164,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,107,-153,-291,-152,-201,-311,-172,-303,-165,-167,-166,-168,-169,-162,-321,-208,-299,-163,-492,-492,-119,-308,107,-309,-207,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,107,-310,-431,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,-302,-295,]),'DEL':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,96,99,103,109,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[71,-151,-287,71,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,-286,-292,-153,-291,-152,-201,-311,-172,-303,71,-167,-166,-168,-169,71,71,71,-321,71,-208,-299,-492,-492,-119,-308,71,-309,71,71,-207,-300,71,-297,-115,-36,-35,71,71,-492,-41,-120,-42,-307,71,-202,71,-310,-431,71,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,71,-302,-295,]),'GE':([2,6,16,19,27,30,35,43,49,50,55,59,63,64,67,70,74,81,88,95,98,104,115,117,119,120,147,148,150,151,188,189,232,245,246,248,259,272,274,287,288,289,291,292,294,304,305,308,311,324,325,326,327,329,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,449,450,464,470,486,487,488,489,490,491,492,494,495,581,593,596,],[-395,-492,-492,-359,-387,-394,-390,-382,-373,-385,-383,-386,242,-389,-384,-388,-372,-349,-492,-492,-397,-492,-55,-356,-56,-135,-1,-2,-354,-83,-131,-360,-113,242,-492,-396,-370,-350,-129,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-77,-78,-143,-352,-371,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-130,-351,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-402,-401,242,]),'TIMES':([0,1,2,3,4,6,8,14,16,17,19,20,21,22,27,30,35,37,38,40,42,43,45,48,49,50,52,53,55,56,57,58,59,62,63,64,66,67,69,70,71,72,74,76,78,80,81,88,89,94,95,96,98,99,103,104,108,109,115,117,119,120,141,143,144,146,147,148,150,151,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,188,189,205,207,210,211,212,213,232,239,244,245,246,248,259,260,261,263,264,268,269,272,274,276,285,286,287,288,289,291,292,294,295,304,305,308,311,314,316,317,318,324,325,326,327,329,331,332,334,335,336,340,346,347,348,361,362,363,364,365,367,372,373,374,376,377,378,380,381,404,408,409,410,411,412,417,426,429,430,431,434,438,439,443,444,445,449,450,457,464,470,482,486,487,488,489,490,491,492,494,495,499,500,504,516,521,523,531,534,545,560,561,562,563,564,565,566,575,576,578,580,581,591,593,600,601,603,604,606,608,613,614,615,617,619,621,623,624,629,630,631,633,638,639,640,641,644,645,646,647,648,649,651,652,653,663,664,665,666,667,668,669,670,671,672,678,679,685,688,690,691,693,694,695,700,701,702,703,706,713,719,721,724,],[54,54,-395,-323,-151,-492,-287,54,-492,187,-359,-289,-325,-319,-387,-394,-390,-320,-294,-59,-318,-382,-288,-60,-373,-385,-335,54,-383,54,-201,-154,-386,-293,-492,-389,187,-384,-290,-388,54,54,-372,-492,271,-200,-349,-492,-137,54,312,-286,-397,-292,-153,-492,-492,-291,-55,-356,-56,-135,360,-152,-201,-59,-1,-2,-354,-83,187,-475,-482,-490,-488,-484,-478,-489,-483,187,187,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,-131,-360,-224,54,-311,-172,-303,-138,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-196,-492,-350,-129,54,-222,-334,-141,-70,-405,-69,-377,-404,478,-363,-47,-121,312,-167,-166,-168,-169,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,54,-358,-357,-136,54,-84,-355,-471,-491,187,187,-393,-447,-132,-362,-361,535,-391,478,-222,-374,54,-380,54,-381,-337,-114,-378,-392,54,-331,-124,-38,-37,-492,-130,-351,-321,-142,-403,54,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-208,-299,-448,-449,-492,-492,-492,-328,-174,-27,-492,-109,-197,-28,-492,-119,-308,54,-402,478,-401,-309,54,54,-207,-324,-223,-300,-450,187,54,-492,-9,-10,-184,-297,-115,-36,-35,54,687,-492,-110,54,-492,-41,-120,-42,-307,54,-202,54,-310,-431,54,-171,-492,-25,-185,-107,-26,-183,-298,-116,-301,-198,-304,-306,-305,-203,-322,-296,718,-492,-108,54,-302,-186,-295,271,]),'IF':([0,2,3,4,6,8,14,16,19,20,22,27,30,35,37,38,42,43,45,49,50,52,55,57,58,59,62,63,64,67,69,70,74,76,80,81,88,95,96,98,99,103,104,108,109,115,117,119,120,143,144,147,148,150,151,188,189,210,211,212,232,239,244,245,246,248,259,260,261,263,264,272,274,286,287,288,289,291,292,294,304,305,308,311,314,316,317,318,324,325,326,327,329,331,332,334,335,336,346,347,348,362,363,373,376,377,378,381,409,411,417,426,429,430,431,438,439,449,450,457,464,470,486,487,488,489,490,491,492,494,495,499,500,504,516,545,575,576,578,580,581,593,596,600,604,613,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,681,685,690,691,693,694,695,700,713,721,722,723,725,743,],[51,-395,114,-151,-492,-287,51,-492,-359,-289,-319,-387,-394,-390,-320,-294,-318,-382,-288,-373,-385,-335,-383,-201,-154,-386,-293,-492,-389,-384,-290,-388,-372,-492,-200,-349,-492,-492,-286,-397,-292,-153,-492,-492,-291,-55,-356,-56,-135,-152,-201,-1,-2,-354,-83,-131,-360,-311,-172,-303,-113,-31,-336,-32,-492,-396,-370,-49,-330,-50,-123,-350,-129,-334,-141,-70,-405,-69,-377,-404,-363,-47,-121,-48,-167,-166,-168,-169,-77,-78,-143,-352,-371,-3,-332,-85,-4,-369,-358,-357,-136,-84,-355,-393,-132,-362,-361,-391,-374,-380,-381,-337,-114,-378,-392,-331,-124,-130,-351,-321,-142,-403,-379,-367,-366,-368,-365,-122,-364,-144,-353,-333,-86,-208,-299,-492,-492,-119,-308,51,-402,-401,-492,-309,-207,-300,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,51,-310,-431,-171,-298,-116,712,-301,-304,-306,-305,-203,-322,-296,-302,-295,-326,712,-327,-329,]),'AT':([0,2,4,8,14,17,20,22,27,30,32,35,37,38,42,43,45,49,50,55,57,58,59,62,64,66,67,69,70,74,80,88,95,96,98,99,101,103,109,143,144,152,153,154,157,160,161,162,165,167,168,170,171,172,173,176,177,178,181,182,183,184,185,186,187,210,211,212,246,248,259,287,288,289,291,292,294,308,311,313,314,316,317,318,329,336,364,365,367,372,373,374,381,403,409,411,417,430,431,457,464,470,486,487,488,489,490,491,492,504,516,521,523,543,545,575,576,578,580,581,593,600,604,613,614,615,629,630,631,633,645,646,647,648,649,652,653,663,664,666,678,679,685,690,691,693,694,695,700,713,721,],[34,-395,-151,-287,34,173,-289,-319,-387,-394,-164,-390,-320,-294,-318,-382,-288,-373,-385,-383,-201,-154,-386,-293,-389,173,-384,-290,-388,-372,-200,-492,310,-286,-397,-292,34,-153,-291,-152,-201,173,-475,-482,-490,-488,-484,-478,-489,-483,173,173,-472,-480,-479,-473,-470,-474,-476,-485,-487,-491,-486,-477,-481,-311,-172,-303,-492,-396,-370,-141,-70,-405,-69,-377,-404,-121,310,-165,-167,-166,-168,-169,-371,-369,-471,-491,173,173,-393,-447,-391,-162,-374,-380,-381,-378,-392,-321,-142,-403,-379,-367,-366,-368,-365,-122,-364,-208,-299,-448,-449,-163,-492,-492,-119,-308,34,-402,-401,-309,-207,-300,-450,173,-297,-115,-36,-35,-492,-41,-120,-42,-307,-202,34,-310,-431,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,-302,-295,]),'YIELD':([0,4,8,14,20,22,37,38,42,45,57,58,62,69,80,94,96,99,103,109,121,123,124,126,127,128,129,131,132,133,134,135,136,137,138,143,144,210,211,212,276,314,316,317,318,340,361,410,457,482,504,516,545,575,576,578,580,600,601,603,604,613,617,629,630,631,633,638,644,645,646,647,648,649,651,652,653,663,664,665,666,678,679,685,690,691,693,694,695,700,706,713,721,],[102,-151,-287,102,-289,-319,-320,-294,-318,-288,-201,-154,-293,-290,-200,102,-286,-292,-153,-291,-232,-241,-239,102,-242,-235,-238,-233,-231,-236,-234,-240,102,-237,-230,-152,-201,-311,-172,-303,102,-167,-166,-168,-169,102,102,102,-321,102,-208,-299,-492,-492,-119,-308,102,-309,102,102,-207,-300,102,-297,-115,-36,-35,102,102,-492,-41,-120,-42,-307,102,-202,102,-310,-431,102,-171,-298,-116,-301,-304,-306,-305,-203,-322,-296,102,-302,-295,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exprlist':([71,72,412,],[249,253,546,]),'or_test':([0,9,13,14,26,29,31,48,51,53,56,90,94,102,114,126,136,159,180,207,276,285,290,295,320,340,343,344,354,361,382,384,404,410,421,425,436,441,442,462,471,478,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,345,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,681,3,3,3,3,3,3,3,3,3,722,722,]),'newline_or_stmt':([0,14,],[4,143,]),'varargslist_opt':([78,724,],[266,732,]),'else_part':([516,575,629,685,],[613,645,678,713,]),'comma_with_item_list':([297,],[483,]),'while_stmt':([0,14,580,653,],[8,8,8,8,]),'op_factor_list_opt':([95,],[304,]),'import_from_pre':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'except_part':([456,575,],[576,647,]),'yield_expr':([0,14,94,126,136,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[61,61,299,350,350,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'comp_op_expr_list_opt':([63,596,],[244,244,]),'arglist':([295,404,],[472,472,]),'dictorsetmaker_opt':([56,],[224,]),'comp_op_expr':([63,245,596,],[232,429,232,]),'start_symbols':([0,],[15,]),'shift_expr':([0,9,13,14,26,29,31,48,51,53,54,56,71,72,87,90,94,102,114,126,136,149,159,180,207,223,234,262,273,276,285,290,295,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,363,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'comma_import_as_name':([357,513,],[510,610,]),'shift_arith_expr_list_opt':([6,],[117,]),'comma_test_or_star_expr_list':([41,219,228,],[208,415,424,]),'async_with_stmt':([0,14,580,653,],[22,22,22,22,]),'testlist_comp':([53,94,],[218,300,]),'equals_yield_expr_or_testlist_list':([7,73,145,],[122,122,122,]),'attr_period_name':([203,401,],[400,542,]),'ampersand_shift_expr_list':([16,],[148,]),'period_name':([202,397,],[398,540,]),'or_and_test_list':([76,],[263,]),'decorator':([0,14,101,580,653,],[32,32,313,32,32,]),'comp_iter_opt':([681,723,],[708,731,]),'comma_name_list':([275,298,],[454,454,]),'comma_pow_vfpdef':([447,569,],[571,571,]),'comma_argument_list':([473,],[592,]),'yield_arg':([102,],[323,]),'async_funcdef':([0,14,101,580,653,],[42,42,317,42,42,]),'yield_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'comma_import_as_name_list_opt':([357,],[511,]),'comma_pow_vfpdef_opt':([447,569,],[568,642,]),'comma_import_as_name_list':([357,],[513,]),'equals_yield_expr_or_testlist':([7,73,122,145,342,506,],[139,139,349,139,505,605,]),'pipe_xor_expr_list':([81,],[272,]),'elif_part_list_opt':([545,],[629,]),'continue_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'comp_op':([63,245,596,],[234,234,234,]),'tfpdef':([380,530,535,669,676,704,717,718,736,742,746,],[531,618,627,702,702,720,729,627,702,702,747,]),'atom_expr':([0,9,13,14,26,29,31,48,51,53,54,56,71,72,75,87,90,94,102,106,110,114,116,118,126,136,149,159,180,190,191,207,215,223,234,262,273,276,285,290,295,306,307,309,310,312,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'test_comma_list':([0,14,276,340,343,361,410,482,580,601,603,617,638,644,651,653,665,706,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'dotted_as_names':([33,],[200,]),'import_name':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'subproc':([17,66,168,170,],[174,247,368,369,]),'comma_tfpdef_list_opt':([619,730,],[667,735,]),'elif_part':([545,631,],[630,679,]),'suite':([276,361,410,482,601,603,617,638,644,651,665,706,],[456,516,545,600,663,664,666,685,690,693,700,721,]),'comma_opt':([41,113,208,219,228,251,415,418,424,435,473,511,563,587,592,636,667,],[206,343,406,413,422,433,547,548,553,558,590,607,639,658,661,683,701,]),'dictorsetmaker':([56,],[226,]),'comma_vfpdef':([445,447,566,569,715,728,],[564,564,641,641,564,641,]),'import_as_names':([141,359,],[356,515,]),'expr':([0,9,13,14,26,29,31,48,51,53,54,56,71,72,87,90,94,102,114,126,136,159,180,207,223,234,262,276,285,290,295,320,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[63,63,63,63,63,63,63,63,63,63,222,63,250,250,63,63,63,63,63,63,63,63,63,63,416,426,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,250,63,63,250,63,63,63,63,63,596,598,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'yield_arg_opt':([102,],[319,]),'equals_test':([269,531,640,702,],[443,443,443,443,]),'comma_pow_tfpdef':([626,677,],[675,675,]),'vfpdef':([78,265,271,565,570,643,686,687,724,727,733,734,740,741,],[269,440,448,640,640,689,714,448,269,640,739,640,744,745,]),'subproc_atom':([17,66,168,170,367,372,615,],[163,163,163,163,518,163,518,]),'varargslist':([78,724,],[270,270,]),'test_nocond':([712,738,],[723,743,]),'pm_term':([19,189,],[188,376,]),'atom':([0,9,13,14,26,29,31,48,51,53,54,56,65,71,72,75,87,90,94,102,106,110,114,116,118,126,136,149,159,180,190,191,207,215,223,234,262,273,276,285,290,295,306,307,309,310,312,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[88,88,88,88,88,88,88,88,88,88,88,88,246,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'comma_expr_or_star_expr':([251,435,],[432,557,]),'except_part_list':([456,],[575,]),'and_not_test_list_opt':([108,],[332,]),'argument':([295,404,591,],[473,473,659,]),'attr_name':([34,],[204,]),'newlines':([73,],[258,]),'func_call_opt':([330,],[498,]),'and_test':([0,9,13,14,26,29,31,48,51,53,56,90,94,102,114,126,136,159,180,207,262,276,285,290,295,320,340,343,344,354,361,382,384,404,410,421,425,436,441,442,462,471,478,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,438,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'and_not_test_list':([108,],[335,]),'del_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'test_comma_list_opt':([0,14,276,340,343,361,410,482,580,601,603,617,638,644,651,653,665,706,],[1,1,1,1,506,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'period_name_list':([202,],[397,]),'subscriptlist':([290,],[465,]),'simple_stmt':([0,14,276,361,410,482,580,601,603,617,638,644,651,653,665,706,],[80,80,457,457,457,457,80,457,457,457,457,457,457,80,457,457,]),'xor_expr':([0,9,13,14,26,29,31,48,51,53,54,56,71,72,87,90,94,102,114,126,136,159,180,207,223,234,262,273,276,285,290,295,320,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,450,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'item':([56,421,549,637,],[227,552,552,552,]),'test_or_star_expr':([0,14,53,56,94,207,276,295,340,361,404,410,482,580,591,601,603,617,638,644,651,653,665,706,],[41,41,219,228,219,405,41,474,41,41,474,41,41,41,474,41,41,41,41,41,41,41,41,41,]),'test_comma':([0,14,48,276,340,343,361,410,482,580,601,603,617,638,644,651,653,665,706,],[89,89,213,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'ampersand_shift_expr_list_opt':([16,],[150,]),'string_literal_list':([0,9,13,14,26,29,31,48,51,53,54,56,65,71,72,75,87,90,94,102,106,110,114,116,118,126,136,149,159,180,190,191,207,215,223,234,262,273,276,285,290,295,306,307,309,310,312,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'return_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'trailer_list':([88,246,],[288,288,]),'comma_test_list':([86,113,196,229,555,],[283,342,283,283,283,]),'as_expr':([296,],[480,]),'flow_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'comma_argument':([473,592,],[589,660,]),'vfpdef_opt':([271,687,],[447,715,]),'if_stmt':([0,14,580,653,],[96,96,96,96,]),'colon_test':([534,],[623,]),'subproc_atoms':([17,66,168,170,372,],[164,164,164,164,522,]),'newlines_opt':([73,],[255,]),'with_item':([90,481,],[297,599,]),'dotted_as_name':([33,392,],[201,537,]),'as_name_opt':([199,358,650,],[388,514,692,]),'testlist_opt':([29,],[194,]),'elif_part_list':([545,],[631,]),'comma_test_or_star_expr':([41,208,219,228,415,424,],[209,407,209,209,407,407,]),'classdef':([0,14,101,580,653,],[99,99,316,99,99,]),'trailer_list_opt':([88,246,],[292,430,]),'comma_name_list_opt':([275,298,],[452,485,]),'semi_small_stmt':([111,338,],[339,501,]),'sliceop':([654,],[698,]),'yield_expr_or_testlist_comp_opt':([94,],[303,]),'xor_and_expr_list_opt':([104,],[327,]),'finally_part_opt':([575,645,],[649,691,]),'lambdef':([0,9,13,14,26,29,31,48,51,53,56,90,94,102,126,136,159,180,207,276,285,290,295,320,340,343,344,354,361,382,384,404,410,421,425,436,441,442,462,471,478,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,635,637,638,644,651,653,665,697,706,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'comma_dotted_as_name_list_opt':([201,],[395,]),'assert_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'string_literal':([0,9,13,14,17,26,29,31,48,51,53,54,56,65,66,67,71,72,75,87,90,94,102,106,110,114,116,118,126,136,149,159,168,170,180,190,191,207,215,223,234,262,273,276,285,290,295,306,307,309,310,312,320,328,333,340,343,344,354,361,367,372,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,615,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[2,2,2,2,166,2,2,2,2,2,2,2,2,2,166,248,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,166,166,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,166,166,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,166,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'arith_expr':([0,9,13,14,26,29,31,48,51,53,54,56,71,72,87,90,94,102,114,116,118,126,136,149,159,180,207,223,234,262,273,276,285,290,295,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,346,347,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'testlist_star_expr':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expr_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'comma_tfpdef':([619,626,671,677,730,737,],[670,670,703,703,670,703,]),'comma_item_list':([227,555,],[418,636,]),'file_stmts':([0,],[14,]),'global_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'attr_period_name_list':([203,],[401,]),'comma_expr_or_star_expr_list':([251,],[435,]),'raise_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'number':([0,9,13,14,26,29,31,48,51,53,54,56,65,71,72,75,87,90,94,102,106,110,114,116,118,126,136,149,159,180,190,191,207,215,223,234,262,273,276,285,290,295,306,307,309,310,312,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'import_from':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'try_stmt':([0,14,580,653,],[20,20,20,20,]),'equals_yield_expr_or_testlist_list_opt':([7,73,145,],[125,257,257,]),'parameters':([192,],[379,]),'shift_arith_expr_list':([6,],[119,]),'comma_vfpdef_list_opt':([445,715,],[563,726,]),'semi_small_stmt_list':([111,],[338,]),'lambdef_nocond':([712,738,],[725,725,]),'comp_if':([681,723,],[710,710,]),'decorated':([0,14,580,653,],[62,62,62,62,]),'comma_tfpdef_list':([619,626,730,],[671,677,737,]),'eval_input':([0,],[12,]),'as_name':([199,358,650,],[389,389,389,]),'import_from_post':([141,],[355,]),'subscript':([290,585,],[468,657,]),'subproc_arg':([17,66,168,170,367,372,615,],[152,152,152,152,152,152,152,]),'ampersand_shift_expr':([16,148,],[151,362,]),'func_call':([204,330,],[402,497,]),'file_input':([0,],[36,]),'async_for_stmt':([0,14,580,653,],[37,37,37,37,]),'async_stmt':([0,14,580,653,],[38,38,38,38,]),'comma_with_item':([297,483,],[484,602,]),'empty':([0,6,7,14,16,29,41,53,56,63,73,76,78,84,88,94,95,102,104,108,111,113,145,198,199,201,208,219,228,246,251,269,271,275,276,290,295,298,330,338,340,343,357,358,361,379,380,404,410,415,418,424,435,445,447,468,473,482,511,531,534,535,545,563,569,575,580,582,585,587,592,596,601,603,617,619,626,636,638,640,644,645,650,651,653,654,665,667,677,681,687,697,702,706,715,718,723,724,730,],[40,115,130,146,147,197,205,221,230,239,254,260,267,277,291,301,305,322,324,331,337,205,130,383,387,391,205,205,205,291,205,444,446,451,146,469,476,451,496,337,146,146,509,387,146,525,533,476,146,205,205,205,205,562,567,583,205,146,205,444,621,625,633,205,567,646,146,469,469,205,205,239,146,146,146,668,673,205,146,444,146,646,387,146,146,696,146,205,673,707,446,469,444,146,562,625,707,267,668,]),'yield_expr_or_testlist_comp':([94,],[302,]),'comma_pow_tfpdef_opt':([626,677,],[674,705,]),'star_expr':([0,1,14,53,56,71,72,94,207,276,295,340,361,404,410,412,434,482,580,591,601,603,617,638,644,651,653,665,706,],[44,113,44,44,44,252,252,44,44,44,44,44,44,44,44,252,252,44,44,44,44,44,44,44,44,44,44,44,44,]),'for_stmt':([0,14,47,580,653,],[45,45,212,45,45,]),'comp_iter':([681,723,],[711,711,]),'xor_and_expr_list':([104,],[325,]),'op_factor':([95,311,],[308,491,]),'tfpdef_opt':([535,718,],[626,730,]),'comma_dotted_as_name_list':([201,],[394,]),'comparison':([0,9,13,14,26,29,31,48,51,53,56,87,90,94,102,114,126,136,159,180,207,262,276,285,290,295,320,333,340,343,344,354,361,382,384,404,410,421,425,436,441,442,462,471,478,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'testlist':([0,14,29,56,102,126,136,276,340,361,410,425,436,482,580,601,603,617,638,644,651,653,665,706,],[73,145,195,225,321,351,351,145,145,145,145,554,559,145,145,145,145,145,145,145,145,145,145,145,]),'pipe':([174,247,368,369,],[372,372,372,372,]),'period_or_ellipsis':([84,282,],[279,460,]),'factor':([0,9,13,14,26,29,31,48,51,53,54,56,71,72,75,87,90,94,102,106,110,114,116,118,126,136,149,159,180,190,191,207,215,223,234,262,273,276,285,290,295,306,307,309,310,312,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,259,95,95,95,95,329,336,95,95,95,95,95,95,95,95,95,95,95,409,95,95,95,95,95,95,95,95,487,488,489,490,492,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'rarrow_test_opt':([379,],[528,]),'period_or_ellipsis_list':([84,],[282,]),'compound_stmt':([0,14,580,653,],[57,144,144,144,]),'stmt':([0,14,580,653,],[58,58,652,694,]),'and_expr':([0,9,13,14,26,29,31,48,51,53,54,56,71,72,87,90,94,102,114,126,136,159,180,207,223,234,262,273,276,285,290,295,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,495,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'arglist_opt':([295,404,],[475,544,]),'break_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'comma_subscript_list_opt':([468,],[587,]),'finally_part':([456,575,645,],[578,648,648,]),'import_as_name':([141,359,512,],[357,357,609,]),'pass_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'comma_test':([86,113,196,198,229,283,342,555,],[284,284,284,385,284,461,461,284,]),'comma_test_opt':([198,],[386,]),'and_not_test':([108,335,],[334,500,]),'with_stmt':([0,14,47,580,653,],[69,69,210,69,69,]),'augassign':([7,],[136,]),'pm_term_list':([19,],[189,]),'or_and_test_list_opt':([76,],[261,]),'xor_and_expr':([104,325,],[326,494,]),'sliceop_opt':([654,],[699,]),'testlist_comp_opt':([53,],[217,]),'rarrow_test':([379,],[526,]),'term':([0,9,13,14,26,29,31,48,51,53,54,56,71,72,87,90,94,102,114,116,118,126,136,149,159,180,190,191,207,223,234,262,273,276,285,290,295,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,377,378,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'equals_test_opt':([269,531,640,702,],[445,619,688,719,]),'except_clause':([456,575,],[574,574,]),'comma_vfpdef_list':([445,447,715,],[566,569,728,]),'decorators':([0,14,580,653,],[101,101,101,101,]),'stmt_list':([580,],[653,]),'comp_op_expr_list':([63,596,],[245,245,]),'test_opt':([290,582,585,697,],[466,654,466,716,]),'comma_subscript':([468,584,],[586,656,]),'comma_name':([275,298,454,],[455,455,573,]),'classdef_or_funcdef':([101,],[318,]),'single_input':([0,],[85,]),'test':([0,9,13,14,26,29,31,48,51,53,56,90,94,102,126,136,159,180,207,276,285,290,295,320,340,343,344,354,361,382,384,404,410,421,425,436,441,442,462,471,478,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,635,637,638,644,651,653,665,697,706,],[86,140,142,86,193,196,198,214,216,220,229,296,220,196,196,196,366,375,220,86,463,467,477,493,86,214,463,508,86,463,463,477,86,551,555,196,560,561,463,588,597,296,86,606,616,551,650,86,655,467,477,662,86,86,86,672,680,682,684,86,86,86,86,86,655,86,]),'subproc_arg_part':([17,66,152,168,170,367,372,615,],[177,177,364,177,177,177,177,177,]),'yield_expr_or_testlist':([126,136,],[352,353,]),'comma_subscript_list':([468,],[584,]),'expr_or_star_expr':([71,72,412,434,],[251,251,251,556,]),'comp_for':([219,227,228,477,681,723,],[414,419,423,594,709,709,]),'op_factor_list':([95,],[311,]),'comma_item':([227,418,555,636,],[420,550,420,550,]),'colon_test_opt':([534,],[624,]),'import_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'comma_dotted_as_name':([201,394,],[393,538,]),'pipe_xor_expr':([81,272,],[274,449,]),'nonlocal_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'or_and_test':([76,263,],[264,439,]),'trailer':([88,246,288,],[287,287,464,]),'power':([0,9,13,14,26,29,31,48,51,53,54,56,71,72,75,87,90,94,102,106,110,114,116,118,126,136,149,159,180,190,191,207,215,223,234,262,273,276,285,290,295,306,307,309,310,312,320,328,333,340,343,344,354,361,382,384,404,410,412,421,425,434,436,441,442,462,471,478,479,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'typedargslist':([380,],[529,]),'period_or_ellipsis_list_opt':([84,],[281,]),'not_test':([0,9,13,14,26,29,31,48,51,53,56,87,90,94,102,114,126,136,159,180,207,262,276,285,290,295,320,333,340,343,344,354,361,382,384,404,410,421,425,436,441,442,462,471,478,481,482,507,527,549,577,580,582,585,591,595,601,603,617,622,632,634,635,637,638,644,651,653,665,697,706,712,738,],[108,108,108,108,108,108,108,108,108,108,108,286,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,499,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'funcdef':([0,14,47,101,315,580,653,],[109,109,211,314,211,109,109,]),'dotted_name':([33,281,392,],[199,459,199,]),'small_stmt':([0,14,276,340,361,410,482,580,601,603,617,638,644,651,653,665,706,],[111,111,111,503,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'typedargslist_opt':([380,],[532,]),'semi_opt':([111,338,],[341,502,]),'shift_arith_expr':([6,119,],[120,348,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start_symbols","S'",1,None,None,None),
  ('ampersand_shift_expr_list_opt -> empty','ampersand_shift_expr_list_opt',1,'p_ampersand_shift_expr_list_opt','parser.py',285),
  ('ampersand_shift_expr_list_opt -> ampersand_shift_expr_list','ampersand_shift_expr_list_opt',1,'p_ampersand_shift_expr_list_opt','parser.py',286),
  ('and_not_test_list_opt -> empty','and_not_test_list_opt',1,'p_and_not_test_list_opt','parser.py',285),
  ('and_not_test_list_opt -> and_not_test_list','and_not_test_list_opt',1,'p_and_not_test_list_opt','parser.py',286),
  ('arglist_opt -> empty','arglist_opt',1,'p_arglist_opt','parser.py',285),
  ('arglist_opt -> arglist','arglist_opt',1,'p_arglist_opt','parser.py',286),
  ('as_name_opt -> empty','as_name_opt',1,'p_as_name_opt','parser.py',285),
  ('as_name_opt -> as_name','as_name_opt',1,'p_as_name_opt','parser.py',286),
  ('colon_test_opt -> empty','colon_test_opt',1,'p_colon_test_opt','parser.py',285),
  ('colon_test_opt -> colon_test','colon_test_opt',1,'p_colon_test_opt','parser.py',286),
  ('comma_dotted_as_name_list_opt -> empty','comma_dotted_as_name_list_opt',1,'p_comma_dotted_as_name_list_opt','parser.py',285),
  ('comma_dotted_as_name_list_opt -> comma_dotted_as_name_list','comma_dotted_as_name_list_opt',1,'p_comma_dotted_as_name_list_opt','parser.py',286),
  ('comma_import_as_name_list_opt -> empty','comma_import_as_name_list_opt',1,'p_comma_import_as_name_list_opt','parser.py',285),
  ('comma_import_as_name_list_opt -> comma_import_as_name_list','comma_import_as_name_list_opt',1,'p_comma_import_as_name_list_opt','parser.py',286),
  ('comma_name_list_opt -> empty','comma_name_list_opt',1,'p_comma_name_list_opt','parser.py',285),
  ('comma_name_list_opt -> comma_name_list','comma_name_list_opt',1,'p_comma_name_list_opt','parser.py',286),
  ('comma_pow_tfpdef_opt -> empty','comma_pow_tfpdef_opt',1,'p_comma_pow_tfpdef_opt','parser.py',285),
  ('comma_pow_tfpdef_opt -> comma_pow_tfpdef','comma_pow_tfpdef_opt',1,'p_comma_pow_tfpdef_opt','parser.py',286),
  ('comma_pow_vfpdef_opt -> empty','comma_pow_vfpdef_opt',1,'p_comma_pow_vfpdef_opt','parser.py',285),
  ('comma_pow_vfpdef_opt -> comma_pow_vfpdef','comma_pow_vfpdef_opt',1,'p_comma_pow_vfpdef_opt','parser.py',286),
  ('comma_subscript_list_opt -> empty','comma_subscript_list_opt',1,'p_comma_subscript_list_opt','parser.py',285),
  ('comma_subscript_list_opt -> comma_subscript_list','comma_subscript_list_opt',1,'p_comma_subscript_list_opt','parser.py',286),
  ('comma_test_opt -> empty','comma_test_opt',1,'p_comma_test_opt','parser.py',285),
  ('comma_test_opt -> comma_test','comma_test_opt',1,'p_comma_test_opt','parser.py',286),
  ('comma_tfpdef_list_opt -> empty','comma_tfpdef_list_opt',1,'p_comma_tfpdef_list_opt','parser.py',285),
  ('comma_tfpdef_list_opt -> comma_tfpdef_list','comma_tfpdef_list_opt',1,'p_comma_tfpdef_list_opt','parser.py',286),
  ('comma_vfpdef_list_opt -> empty','comma_vfpdef_list_opt',1,'p_comma_vfpdef_list_opt','parser.py',285),
  ('comma_vfpdef_list_opt -> comma_vfpdef_list','comma_vfpdef_list_opt',1,'p_comma_vfpdef_list_opt','parser.py',286),
  ('comp_iter_opt -> empty','comp_iter_opt',1,'p_comp_iter_opt','parser.py',285),
  ('comp_iter_opt -> comp_iter','comp_iter_opt',1,'p_comp_iter_opt','parser.py',286),
  ('comp_op_expr_list_opt -> empty','comp_op_expr_list_opt',1,'p_comp_op_expr_list_opt','parser.py',285),
  ('comp_op_expr_list_opt -> comp_op_expr_list','comp_op_expr_list_opt',1,'p_comp_op_expr_list_opt','parser.py',286),
  ('dictorsetmaker_opt -> empty','dictorsetmaker_opt',1,'p_dictorsetmaker_opt','parser.py',285),
  ('dictorsetmaker_opt -> dictorsetmaker','dictorsetmaker_opt',1,'p_dictorsetmaker_opt','parser.py',286),
  ('elif_part_list_opt -> empty','elif_part_list_opt',1,'p_elif_part_list_opt','parser.py',285),
  ('elif_part_list_opt -> elif_part_list','elif_part_list_opt',1,'p_elif_part_list_opt','parser.py',286),
  ('equals_test_opt -> empty','equals_test_opt',1,'p_equals_test_opt','parser.py',285),
  ('equals_test_opt -> equals_test','equals_test_opt',1,'p_equals_test_opt','parser.py',286),
  ('equals_yield_expr_or_testlist_list_opt -> empty','equals_yield_expr_or_testlist_list_opt',1,'p_equals_yield_expr_or_testlist_list_opt','parser.py',285),
  ('equals_yield_expr_or_testlist_list_opt -> equals_yield_expr_or_testlist_list','equals_yield_expr_or_testlist_list_opt',1,'p_equals_yield_expr_or_testlist_list_opt','parser.py',286),
  ('finally_part_opt -> empty','finally_part_opt',1,'p_finally_part_opt','parser.py',285),
  ('finally_part_opt -> finally_part','finally_part_opt',1,'p_finally_part_opt','parser.py',286),
  ('func_call_opt -> empty','func_call_opt',1,'p_func_call_opt','parser.py',285),
  ('func_call_opt -> func_call','func_call_opt',1,'p_func_call_opt','parser.py',286),
  ('newlines_opt -> empty','newlines_opt',1,'p_newlines_opt','parser.py',285),
  ('newlines_opt -> newlines','newlines_opt',1,'p_newlines_opt','parser.py',286),
  ('op_factor_list_opt -> empty','op_factor_list_opt',1,'p_op_factor_list_opt','parser.py',285),
  ('op_factor_list_opt -> op_factor_list','op_factor_list_opt',1,'p_op_factor_list_opt','parser.py',286),
  ('or_and_test_list_opt -> empty','or_and_test_list_opt',1,'p_or_and_test_list_opt','parser.py',285),
  ('or_and_test_list_opt -> or_and_test_list','or_and_test_list_opt',1,'p_or_and_test_list_opt','parser.py',286),
  ('period_or_ellipsis_list_opt -> empty','period_or_ellipsis_list_opt',1,'p_period_or_ellipsis_list_opt','parser.py',285),
  ('period_or_ellipsis_list_opt -> period_or_ellipsis_list','period_or_ellipsis_list_opt',1,'p_period_or_ellipsis_list_opt','parser.py',286),
  ('rarrow_test_opt -> empty','rarrow_test_opt',1,'p_rarrow_test_opt','parser.py',285),
  ('rarrow_test_opt -> rarrow_test','rarrow_test_opt',1,'p_rarrow_test_opt','parser.py',286),
  ('shift_arith_expr_list_opt -> empty','shift_arith_expr_list_opt',1,'p_shift_arith_expr_list_opt','parser.py',285),
  ('shift_arith_expr_list_opt -> shift_arith_expr_list','shift_arith_expr_list_opt',1,'p_shift_arith_expr_list_opt','parser.py',286),
  ('sliceop_opt -> empty','sliceop_opt',1,'p_sliceop_opt','parser.py',285),
  ('sliceop_opt -> sliceop','sliceop_opt',1,'p_sliceop_opt','parser.py',286),
  ('test_comma_list_opt -> empty','test_comma_list_opt',1,'p_test_comma_list_opt','parser.py',285),
  ('test_comma_list_opt -> test_comma_list','test_comma_list_opt',1,'p_test_comma_list_opt','parser.py',286),
  ('test_opt -> empty','test_opt',1,'p_test_opt','parser.py',285),
  ('test_opt -> test','test_opt',1,'p_test_opt','parser.py',286),
  ('testlist_comp_opt -> empty','testlist_comp_opt',1,'p_testlist_comp_opt','parser.py',285),
  ('testlist_comp_opt -> testlist_comp','testlist_comp_opt',1,'p_testlist_comp_opt','parser.py',286),
  ('testlist_opt -> empty','testlist_opt',1,'p_testlist_opt','parser.py',285),
  ('testlist_opt -> testlist','testlist_opt',1,'p_testlist_opt','parser.py',286),
  ('tfpdef_opt -> empty','tfpdef_opt',1,'p_tfpdef_opt','parser.py',285),
  ('tfpdef_opt -> tfpdef','tfpdef_opt',1,'p_tfpdef_opt','parser.py',286),
  ('trailer_list_opt -> empty','trailer_list_opt',1,'p_trailer_list_opt','parser.py',285),
  ('trailer_list_opt -> trailer_list','trailer_list_opt',1,'p_trailer_list_opt','parser.py',286),
  ('typedargslist_opt -> empty','typedargslist_opt',1,'p_typedargslist_opt','parser.py',285),
  ('typedargslist_opt -> typedargslist','typedargslist_opt',1,'p_typedargslist_opt','parser.py',286),
  ('varargslist_opt -> empty','varargslist_opt',1,'p_varargslist_opt','parser.py',285),
  ('varargslist_opt -> varargslist','varargslist_opt',1,'p_varargslist_opt','parser.py',286),
  ('vfpdef_opt -> empty','vfpdef_opt',1,'p_vfpdef_opt','parser.py',285),
  ('vfpdef_opt -> vfpdef','vfpdef_opt',1,'p_vfpdef_opt','parser.py',286),
  ('xor_and_expr_list_opt -> empty','xor_and_expr_list_opt',1,'p_xor_and_expr_list_opt','parser.py',285),
  ('xor_and_expr_list_opt -> xor_and_expr_list','xor_and_expr_list_opt',1,'p_xor_and_expr_list_opt','parser.py',286),
  ('yield_arg_opt -> empty','yield_arg_opt',1,'p_yield_arg_opt','parser.py',285),
  ('yield_arg_opt -> yield_arg','yield_arg_opt',1,'p_yield_arg_opt','parser.py',286),
  ('yield_expr_or_testlist_comp_opt -> empty','yield_expr_or_testlist_comp_opt',1,'p_yield_expr_or_testlist_comp_opt','parser.py',285),
  ('yield_expr_or_testlist_comp_opt -> yield_expr_or_testlist_comp','yield_expr_or_testlist_comp_opt',1,'p_yield_expr_or_testlist_comp_opt','parser.py',286),
  ('ampersand_shift_expr_list -> ampersand_shift_expr','ampersand_shift_expr_list',1,'p_ampersand_shift_expr_list','parser.py',298),
  ('ampersand_shift_expr_list -> ampersand_shift_expr_list ampersand_shift_expr','ampersand_shift_expr_list',2,'p_ampersand_shift_expr_list','parser.py',299),
  ('and_not_test_list -> and_not_test','and_not_test_list',1,'p_and_not_test_list','parser.py',298),
  ('and_not_test_list -> and_not_test_list and_not_test','and_not_test_list',2,'p_and_not_test_list','parser.py',299),
  ('attr_period_name_list -> attr_period_name','attr_period_name_list',1,'p_attr_period_name_list','parser.py',298),
  ('attr_period_name_list -> attr_period_name_list attr_period_name','attr_period_name_list',2,'p_attr_period_name_list','parser.py',299),
  ('comma_argument_list -> comma_argument','comma_argument_list',1,'p_comma_argument_list','parser.py',298),
  ('comma_argument_list -> comma_argument_list comma_argument','comma_argument_list',2,'p_comma_argument_list','parser.py',299),
  ('comma_dotted_as_name_list -> comma_dotted_as_name','comma_dotted_as_name_list',1,'p_comma_dotted_as_name_list','parser.py',298),
  ('comma_dotted_as_name_list -> comma_dotted_as_name_list comma_dotted_as_name','comma_dotted_as_name_list',2,'p_comma_dotted_as_name_list','parser.py',299),
  ('comma_expr_or_star_expr_list -> comma_expr_or_star_expr','comma_expr_or_star_expr_list',1,'p_comma_expr_or_star_expr_list','parser.py',298),
  ('comma_expr_or_star_expr_list -> comma_expr_or_star_expr_list comma_expr_or_star_expr','comma_expr_or_star_expr_list',2,'p_comma_expr_or_star_expr_list','parser.py',299),
  ('comma_import_as_name_list -> comma_import_as_name','comma_import_as_name_list',1,'p_comma_import_as_name_list','parser.py',298),
  ('comma_import_as_name_list -> comma_import_as_name_list comma_import_as_name','comma_import_as_name_list',2,'p_comma_import_as_name_list','parser.py',299),
  ('comma_item_list -> comma_item','comma_item_list',1,'p_comma_item_list','parser.py',298),
  ('comma_item_list -> comma_item_list comma_item','comma_item_list',2,'p_comma_item_list','parser.py',299),
  ('comma_name_list -> comma_name','comma_name_list',1,'p_comma_name_list','parser.py',298),
  ('comma_name_list -> comma_name_list comma_name','comma_name_list',2,'p_comma_name_list','parser.py',299),
  ('comma_subscript_list -> comma_subscript','comma_subscript_list',1,'p_comma_subscript_list','parser.py',298),
  ('comma_subscript_list -> comma_subscript_list comma_subscript','comma_subscript_list',2,'p_comma_subscript_list','parser.py',299),
  ('comma_test_list -> comma_test','comma_test_list',1,'p_comma_test_list','parser.py',298),
  ('comma_test_list -> comma_test_list comma_test','comma_test_list',2,'p_comma_test_list','parser.py',299),
  ('comma_test_or_star_expr_list -> comma_test_or_star_expr','comma_test_or_star_expr_list',1,'p_comma_test_or_star_expr_list','parser.py',298),
  ('comma_test_or_star_expr_list -> comma_test_or_star_expr_list comma_test_or_star_expr','comma_test_or_star_expr_list',2,'p_comma_test_or_star_expr_list','parser.py',299),
  ('comma_tfpdef_list -> comma_tfpdef','comma_tfpdef_list',1,'p_comma_tfpdef_list','parser.py',298),
  ('comma_tfpdef_list -> comma_tfpdef_list comma_tfpdef','comma_tfpdef_list',2,'p_comma_tfpdef_list','parser.py',299),
  ('comma_vfpdef_list -> comma_vfpdef','comma_vfpdef_list',1,'p_comma_vfpdef_list','parser.py',298),
  ('comma_vfpdef_list -> comma_vfpdef_list comma_vfpdef','comma_vfpdef_list',2,'p_comma_vfpdef_list','parser.py',299),
  ('comma_with_item_list -> comma_with_item','comma_with_item_list',1,'p_comma_with_item_list','parser.py',298),
  ('comma_with_item_list -> comma_with_item_list comma_with_item','comma_with_item_list',2,'p_comma_with_item_list','parser.py',299),
  ('comp_op_expr_list -> comp_op_expr','comp_op_expr_list',1,'p_comp_op_expr_list','parser.py',298),
  ('comp_op_expr_list -> comp_op_expr_list comp_op_expr','comp_op_expr_list',2,'p_comp_op_expr_list','parser.py',299),
  ('elif_part_list -> elif_part','elif_part_list',1,'p_elif_part_list','parser.py',298),
  ('elif_part_list -> elif_part_list elif_part','elif_part_list',2,'p_elif_part_list','parser.py',299),
  ('equals_yield_expr_or_testlist_list -> equals_yield_expr_or_testlist','equals_yield_expr_or_testlist_list',1,'p_equals_yield_expr_or_testlist_list','parser.py',298),
  ('equals_yield_expr_or_testlist_list -> equals_yield_expr_or_testlist_list equals_yield_expr_or_testlist','equals_yield_expr_or_testlist_list',2,'p_equals_yield_expr_or_testlist_list','parser.py',299),
  ('except_part_list -> except_part','except_part_list',1,'p_except_part_list','parser.py',298),
  ('except_part_list -> except_part_list except_part','except_part_list',2,'p_except_part_list','parser.py',299),
  ('op_factor_list -> op_factor','op_factor_list',1,'p_op_factor_list','parser.py',298),
  ('op_factor_list -> op_factor_list op_factor','op_factor_list',2,'p_op_factor_list','parser.py',299),
  ('or_and_test_list -> or_and_test','or_and_test_list',1,'p_or_and_test_list','parser.py',298),
  ('or_and_test_list -> or_and_test_list or_and_test','or_and_test_list',2,'p_or_and_test_list','parser.py',299),
  ('period_name_list -> period_name','period_name_list',1,'p_period_name_list','parser.py',298),
  ('period_name_list -> period_name_list period_name','period_name_list',2,'p_period_name_list','parser.py',299),
  ('period_or_ellipsis_list -> period_or_ellipsis','period_or_ellipsis_list',1,'p_period_or_ellipsis_list','parser.py',298),
  ('period_or_ellipsis_list -> period_or_ellipsis_list period_or_ellipsis','period_or_ellipsis_list',2,'p_period_or_ellipsis_list','parser.py',299),
  ('pipe_xor_expr_list -> pipe_xor_expr','pipe_xor_expr_list',1,'p_pipe_xor_expr_list','parser.py',298),
  ('pipe_xor_expr_list -> pipe_xor_expr_list pipe_xor_expr','pipe_xor_expr_list',2,'p_pipe_xor_expr_list','parser.py',299),
  ('pm_term_list -> pm_term','pm_term_list',1,'p_pm_term_list','parser.py',298),
  ('pm_term_list -> pm_term_list pm_term','pm_term_list',2,'p_pm_term_list','parser.py',299),
  ('semi_small_stmt_list -> semi_small_stmt','semi_small_stmt_list',1,'p_semi_small_stmt_list','parser.py',298),
  ('semi_small_stmt_list -> semi_small_stmt_list semi_small_stmt','semi_small_stmt_list',2,'p_semi_small_stmt_list','parser.py',299),
  ('shift_arith_expr_list -> shift_arith_expr','shift_arith_expr_list',1,'p_shift_arith_expr_list','parser.py',298),
  ('shift_arith_expr_list -> shift_arith_expr_list shift_arith_expr','shift_arith_expr_list',2,'p_shift_arith_expr_list','parser.py',299),
  ('test_comma_list -> test_comma','test_comma_list',1,'p_test_comma_list','parser.py',298),
  ('test_comma_list -> test_comma_list test_comma','test_comma_list',2,'p_test_comma_list','parser.py',299),
  ('test_or_star_expr_list -> test_or_star_expr','test_or_star_expr_list',1,'p_test_or_star_expr_list','parser.py',298),
  ('test_or_star_expr_list -> test_or_star_expr_list test_or_star_expr','test_or_star_expr_list',2,'p_test_or_star_expr_list','parser.py',299),
  ('trailer_list -> trailer','trailer_list',1,'p_trailer_list','parser.py',298),
  ('trailer_list -> trailer_list trailer','trailer_list',2,'p_trailer_list','parser.py',299),
  ('xor_and_expr_list -> xor_and_expr','xor_and_expr_list',1,'p_xor_and_expr_list','parser.py',298),
  ('xor_and_expr_list -> xor_and_expr_list xor_and_expr','xor_and_expr_list',2,'p_xor_and_expr_list','parser.py',299),
  ('start_symbols -> single_input','start_symbols',1,'p_start_symbols','parser.py',350),
  ('start_symbols -> file_input','start_symbols',1,'p_start_symbols','parser.py',351),
  ('start_symbols -> eval_input','start_symbols',1,'p_start_symbols','parser.py',352),
  ('start_symbols -> empty','start_symbols',1,'p_start_symbols','parser.py',353),
  ('single_input -> compound_stmt NEWLINE','single_input',2,'p_single_input','parser.py',358),
  ('file_input -> file_stmts','file_input',1,'p_file_input','parser.py',365),
  ('file_stmts -> newline_or_stmt','file_stmts',1,'p_file_stmts','parser.py',369),
  ('file_stmts -> file_stmts newline_or_stmt','file_stmts',2,'p_file_stmts','parser.py',370),
  ('newline_or_stmt -> NEWLINE','newline_or_stmt',1,'p_newline_or_stmt','parser.py',382),
  ('newline_or_stmt -> stmt','newline_or_stmt',1,'p_newline_or_stmt','parser.py',383),
  ('newlines -> NEWLINE','newlines',1,'p_newlines','parser.py',388),
  ('newlines -> newlines NEWLINE','newlines',2,'p_newlines','parser.py',389),
  ('eval_input -> testlist newlines_opt','eval_input',2,'p_eval_input','parser.py',394),
  ('func_call -> LPAREN arglist_opt RPAREN','func_call',3,'p_func_call','parser.py',399),
  ('attr_period_name -> PERIOD NAME','attr_period_name',2,'p_attr_period_name','parser.py',403),
  ('attr_name -> NAME','attr_name',1,'p_attr_name','parser.py',407),
  ('attr_name -> NAME attr_period_name_list','attr_name',2,'p_attr_name','parser.py',408),
  ('decorator -> AT attr_name NEWLINE','decorator',3,'p_decorator','parser.py',433),
  ('decorator -> AT attr_name func_call NEWLINE','decorator',4,'p_decorator','parser.py',434),
  ('decorators -> decorator','decorators',1,'p_decorators','parser.py',456),
  ('decorators -> decorators decorator','decorators',2,'p_decorators','parser.py',457),
  ('classdef_or_funcdef -> classdef','classdef_or_funcdef',1,'p_classdef_or_funcdef','parser.py',462),
  ('classdef_or_funcdef -> funcdef','classdef_or_funcdef',1,'p_classdef_or_funcdef','parser.py',463),
  ('classdef_or_funcdef -> async_funcdef','classdef_or_funcdef',1,'p_classdef_or_funcdef','parser.py',464),
  ('decorated -> decorators classdef_or_funcdef','decorated',2,'p_decorated','parser.py',476),
  ('rarrow_test -> RARROW test','rarrow_test',2,'p_rarrow_test','parser.py',482),
  ('funcdef -> DEF NAME parameters rarrow_test_opt COLON suite','funcdef',6,'p_funcdef','parser.py',486),
  ('async_funcdef -> ASYNC funcdef','async_funcdef',2,'p_async_funcdef','parser.py',497),
  ('parameters -> LPAREN typedargslist_opt RPAREN','parameters',3,'p_parameters','parser.py',502),
  ('equals_test -> EQUALS test','equals_test',2,'p_equals_test','parser.py',514),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt','typedargslist',4,'p_typedargslist','parser.py',518),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt COMMA POW vfpdef','typedargslist',9,'p_typedargslist','parser.py',519),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt comma_tfpdef_list_opt','typedargslist',7,'p_typedargslist','parser.py',520),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt comma_tfpdef_list COMMA POW tfpdef','typedargslist',10,'p_typedargslist','parser.py',521),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt POW tfpdef','typedargslist',6,'p_typedargslist','parser.py',522),
  ('typedargslist -> TIMES tfpdef_opt comma_tfpdef_list comma_pow_tfpdef_opt','typedargslist',4,'p_typedargslist','parser.py',523),
  ('typedargslist -> TIMES tfpdef_opt comma_pow_tfpdef_opt','typedargslist',3,'p_typedargslist','parser.py',524),
  ('typedargslist -> POW tfpdef','typedargslist',2,'p_typedargslist','parser.py',525),
  ('colon_test -> COLON test','colon_test',2,'p_colon_test','parser.py',579),
  ('tfpdef -> NAME colon_test_opt','tfpdef',2,'p_tfpdef','parser.py',583),
  ('comma_tfpdef -> COMMA','comma_tfpdef',1,'p_comma_tfpdef','parser.py',587),
  ('comma_tfpdef -> COMMA tfpdef equals_test_opt','comma_tfpdef',3,'p_comma_tfpdef','parser.py',588),
  ('comma_pow_tfpdef -> COMMA POW tfpdef','comma_pow_tfpdef',3,'p_comma_pow_tfpdef','parser.py',596),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt','varargslist',4,'p_varargslist','parser.py',641),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt COMMA POW vfpdef','varargslist',9,'p_varargslist','parser.py',642),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt comma_vfpdef_list_opt','varargslist',7,'p_varargslist','parser.py',643),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt comma_vfpdef_list COMMA POW vfpdef','varargslist',10,'p_varargslist','parser.py',644),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt POW vfpdef','varargslist',6,'p_varargslist','parser.py',645),
  ('varargslist -> TIMES vfpdef_opt comma_vfpdef_list comma_pow_vfpdef_opt','varargslist',4,'p_varargslist','parser.py',646),
  ('varargslist -> TIMES vfpdef_opt comma_pow_vfpdef_opt','varargslist',3,'p_varargslist','parser.py',647),
  ('varargslist -> POW vfpdef','varargslist',2,'p_varargslist','parser.py',648),
  ('vfpdef -> NAME','vfpdef',1,'p_vfpdef','parser.py',702),
  ('comma_vfpdef -> COMMA','comma_vfpdef',1,'p_comma_vfpdef','parser.py',706),
  ('comma_vfpdef -> COMMA vfpdef equals_test_opt','comma_vfpdef',3,'p_comma_vfpdef','parser.py',707),
  ('comma_pow_vfpdef -> COMMA POW vfpdef','comma_pow_vfpdef',3,'p_comma_pow_vfpdef','parser.py',715),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','parser.py',719),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','parser.py',720),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','parser.py',725),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','parser.py',726),
  ('semi_opt -> SEMI','semi_opt',1,'p_semi_opt','parser.py',733),
  ('semi_opt -> empty','semi_opt',1,'p_semi_opt','parser.py',734),
  ('semi_small_stmt -> SEMI small_stmt','semi_small_stmt',2,'p_semi_small_stmt','parser.py',740),
  ('simple_stmt -> small_stmt semi_small_stmt_list semi_opt NEWLINE','simple_stmt',4,'p_simple_stmt','parser.py',744),
  ('simple_stmt -> small_stmt semi_opt NEWLINE','simple_stmt',3,'p_simple_stmt','parser.py',745),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','parser.py',754),
  ('small_stmt -> del_stmt','small_stmt',1,'p_small_stmt','parser.py',755),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','parser.py',756),
  ('small_stmt -> flow_stmt','small_stmt',1,'p_small_stmt','parser.py',757),
  ('small_stmt -> import_stmt','small_stmt',1,'p_small_stmt','parser.py',758),
  ('small_stmt -> global_stmt','small_stmt',1,'p_small_stmt','parser.py',759),
  ('small_stmt -> nonlocal_stmt','small_stmt',1,'p_small_stmt','parser.py',760),
  ('small_stmt -> assert_stmt','small_stmt',1,'p_small_stmt','parser.py',761),
  ('expr_stmt -> testlist_star_expr augassign yield_expr_or_testlist','expr_stmt',3,'p_expr_stmt','parser.py',782),
  ('expr_stmt -> testlist_star_expr equals_yield_expr_or_testlist_list_opt','expr_stmt',2,'p_expr_stmt','parser.py',783),
  ('expr_stmt -> testlist equals_yield_expr_or_testlist_list_opt','expr_stmt',2,'p_expr_stmt','parser.py',784),
  ('expr_stmt -> test_comma_list_opt star_expr comma_test_list equals_yield_expr_or_testlist','expr_stmt',4,'p_expr_stmt','parser.py',785),
  ('expr_stmt -> test_comma_list_opt star_expr comma_opt test_comma_list_opt equals_yield_expr_or_testlist','expr_stmt',5,'p_expr_stmt','parser.py',786),
  ('test_comma -> test COMMA','test_comma',2,'p_test_comma','parser.py',837),
  ('comma_opt -> COMMA','comma_opt',1,'p_comma_opt','parser.py',841),
  ('comma_opt -> empty','comma_opt',1,'p_comma_opt','parser.py',842),
  ('test_or_star_expr -> test','test_or_star_expr',1,'p_test_or_star_expr','parser.py',848),
  ('test_or_star_expr -> star_expr','test_or_star_expr',1,'p_test_or_star_expr','parser.py',849),
  ('comma_test_or_star_expr -> COMMA test_or_star_expr','comma_test_or_star_expr',2,'p_comma_test_or_star_expr','parser.py',854),
  ('testlist_star_expr -> test_or_star_expr comma_test_or_star_expr_list comma_opt','testlist_star_expr',3,'p_testlist_star_expr','parser.py',858),
  ('testlist_star_expr -> test_or_star_expr comma_opt','testlist_star_expr',2,'p_testlist_star_expr','parser.py',859),
  ('augassign -> PLUSEQUAL','augassign',1,'p_augassign','parser.py',877),
  ('augassign -> MINUSEQUAL','augassign',1,'p_augassign','parser.py',878),
  ('augassign -> TIMESEQUAL','augassign',1,'p_augassign','parser.py',879),
  ('augassign -> ATEQUAL','augassign',1,'p_augassign','parser.py',880),
  ('augassign -> DIVEQUAL','augassign',1,'p_augassign','parser.py',881),
  ('augassign -> MODEQUAL','augassign',1,'p_augassign','parser.py',882),
  ('augassign -> AMPERSANDEQUAL','augassign',1,'p_augassign','parser.py',883),
  ('augassign -> PIPEEQUAL','augassign',1,'p_augassign','parser.py',884),
  ('augassign -> XOREQUAL','augassign',1,'p_augassign','parser.py',885),
  ('augassign -> LSHIFTEQUAL','augassign',1,'p_augassign','parser.py',886),
  ('augassign -> RSHIFTEQUAL','augassign',1,'p_augassign','parser.py',887),
  ('augassign -> POWEQUAL','augassign',1,'p_augassign','parser.py',888),
  ('augassign -> DOUBLEDIVEQUAL','augassign',1,'p_augassign','parser.py',889),
  ('yield_expr_or_testlist -> yield_expr','yield_expr_or_testlist',1,'p_yield_expr_or_testlist','parser.py',894),
  ('yield_expr_or_testlist -> testlist','yield_expr_or_testlist',1,'p_yield_expr_or_testlist','parser.py',895),
  ('equals_yield_expr_or_testlist -> EQUALS yield_expr_or_testlist','equals_yield_expr_or_testlist',2,'p_equals_yield_expr_or_testlist','parser.py',900),
  ('del_stmt -> DEL exprlist','del_stmt',2,'p_del_stmt','parser.py',908),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','parser.py',916),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','parser.py',920),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','parser.py',921),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','parser.py',922),
  ('flow_stmt -> raise_stmt','flow_stmt',1,'p_flow_stmt','parser.py',923),
  ('flow_stmt -> yield_stmt','flow_stmt',1,'p_flow_stmt','parser.py',924),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser.py',929),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','parser.py',933),
  ('return_stmt -> RETURN testlist_opt','return_stmt',2,'p_return_stmt','parser.py',937),
  ('yield_stmt -> yield_expr','yield_stmt',1,'p_yield_stmt','parser.py',941),
  ('raise_stmt -> RAISE','raise_stmt',1,'p_raise_stmt','parser.py',945),
  ('raise_stmt -> RAISE test','raise_stmt',2,'p_raise_stmt','parser.py',946),
  ('raise_stmt -> RAISE test FROM test','raise_stmt',4,'p_raise_stmt','parser.py',947),
  ('import_stmt -> import_name','import_stmt',1,'p_import_stmt','parser.py',967),
  ('import_stmt -> import_from','import_stmt',1,'p_import_stmt','parser.py',968),
  ('import_name -> IMPORT dotted_as_names','import_name',2,'p_import_name','parser.py',973),
  ('import_from_pre -> FROM period_or_ellipsis_list_opt dotted_name','import_from_pre',3,'p_import_from_pre','parser.py',978),
  ('import_from_pre -> FROM period_or_ellipsis_list','import_from_pre',2,'p_import_from_pre','parser.py',979),
  ('import_from_post -> TIMES','import_from_post',1,'p_import_from_post','parser.py',991),
  ('import_from_post -> LPAREN import_as_names RPAREN','import_from_post',3,'p_import_from_post','parser.py',992),
  ('import_from_post -> import_as_names','import_from_post',1,'p_import_from_post','parser.py',993),
  ('import_from -> import_from_pre IMPORT import_from_post','import_from',3,'p_import_from','parser.py',1006),
  ('period_or_ellipsis -> PERIOD','period_or_ellipsis',1,'p_period_or_ellipsis','parser.py',1021),
  ('period_or_ellipsis -> ELLIPSIS','period_or_ellipsis',1,'p_period_or_ellipsis','parser.py',1022),
  ('as_name -> AS NAME','as_name',2,'p_as_name','parser.py',1027),
  ('import_as_name -> NAME as_name_opt','import_as_name',2,'p_import_as_name','parser.py',1031),
  ('comma_import_as_name -> COMMA import_as_name','comma_import_as_name',2,'p_comma_import_as_name','parser.py',1035),
  ('dotted_as_name -> dotted_name as_name_opt','dotted_as_name',2,'p_dotted_as_name','parser.py',1040),
  ('comma_dotted_as_name -> COMMA dotted_as_name','comma_dotted_as_name',2,'p_comma_dotted_as_name','parser.py',1045),
  ('import_as_names -> import_as_name comma_import_as_name_list_opt comma_opt','import_as_names',3,'p_import_as_names','parser.py',1049),
  ('dotted_as_names -> dotted_as_name comma_dotted_as_name_list_opt','dotted_as_names',2,'p_dotted_as_names','parser.py',1058),
  ('period_name -> PERIOD NAME','period_name',2,'p_period_name','parser.py',1066),
  ('dotted_name -> NAME','dotted_name',1,'p_dotted_name','parser.py',1070),
  ('dotted_name -> NAME period_name_list','dotted_name',2,'p_dotted_name','parser.py',1071),
  ('comma_name -> COMMA NAME','comma_name',2,'p_comma_name','parser.py',1076),
  ('global_stmt -> GLOBAL NAME comma_name_list_opt','global_stmt',3,'p_global_stmt','parser.py',1080),
  ('nonlocal_stmt -> NONLOCAL NAME comma_name_list_opt','nonlocal_stmt',3,'p_nonlocal_stmt','parser.py',1088),
  ('comma_test -> COMMA test','comma_test',2,'p_comma_test','parser.py',1098),
  ('assert_stmt -> ASSERT test comma_test_opt','assert_stmt',3,'p_assert_stmt','parser.py',1102),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1115),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1116),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1117),
  ('compound_stmt -> try_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1118),
  ('compound_stmt -> with_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1119),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','parser.py',1120),
  ('compound_stmt -> classdef','compound_stmt',1,'p_compound_stmt','parser.py',1121),
  ('compound_stmt -> decorated','compound_stmt',1,'p_compound_stmt','parser.py',1122),
  ('compound_stmt -> async_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1123),
  ('elif_part -> ELIF test COLON suite','elif_part',4,'p_elif_part','parser.py',1128),
  ('else_part -> ELSE COLON suite','else_part',3,'p_else_part','parser.py',1136),
  ('if_stmt -> IF test COLON suite elif_part_list_opt','if_stmt',5,'p_if_stmt','parser.py',1140),
  ('if_stmt -> IF test COLON suite elif_part_list_opt else_part','if_stmt',6,'p_if_stmt','parser.py',1141),
  ('while_stmt -> WHILE test COLON suite','while_stmt',4,'p_while_stmt','parser.py',1159),
  ('while_stmt -> WHILE test COLON suite else_part','while_stmt',5,'p_while_stmt','parser.py',1160),
  ('for_stmt -> FOR exprlist IN testlist COLON suite','for_stmt',6,'p_for_stmt','parser.py',1170),
  ('for_stmt -> FOR exprlist IN testlist COLON suite else_part','for_stmt',7,'p_for_stmt','parser.py',1171),
  ('async_for_stmt -> ASYNC for_stmt','async_for_stmt',2,'p_async_for_stmt','parser.py',1193),
  ('except_part -> except_clause COLON suite','except_part',3,'p_except_part','parser.py',1198),
  ('finally_part -> FINALLY COLON suite','finally_part',3,'p_finally_part','parser.py',1204),
  ('try_stmt -> TRY COLON suite except_part_list else_part finally_part_opt','try_stmt',6,'p_try_stmt','parser.py',1208),
  ('try_stmt -> TRY COLON suite except_part_list finally_part_opt','try_stmt',5,'p_try_stmt','parser.py',1209),
  ('try_stmt -> TRY COLON suite finally_part','try_stmt',4,'p_try_stmt','parser.py',1210),
  ('with_stmt -> WITH with_item COLON suite','with_stmt',4,'p_with_stmt','parser.py',1231),
  ('with_stmt -> WITH with_item comma_with_item_list COLON suite','with_stmt',5,'p_with_stmt','parser.py',1232),
  ('async_with_stmt -> ASYNC with_stmt','async_with_stmt',2,'p_async_with_stmt','parser.py',1246),
  ('as_expr -> AS expr','as_expr',2,'p_as_expr','parser.py',1251),
  ('with_item -> test','with_item',1,'p_with_item','parser.py',1257),
  ('with_item -> test as_expr','with_item',2,'p_with_item','parser.py',1258),
  ('comma_with_item -> COMMA with_item','comma_with_item',2,'p_comma_with_item','parser.py',1264),
  ('except_clause -> EXCEPT','except_clause',1,'p_except_clause','parser.py',1268),
  ('except_clause -> EXCEPT test as_name_opt','except_clause',3,'p_except_clause','parser.py',1269),
  ('async_stmt -> async_funcdef','async_stmt',1,'p_async_stmt','parser.py',1284),
  ('async_stmt -> async_with_stmt','async_stmt',1,'p_async_stmt','parser.py',1285),
  ('async_stmt -> async_for_stmt','async_stmt',1,'p_async_stmt','parser.py',1286),
  ('suite -> simple_stmt','suite',1,'p_suite','parser.py',1291),
  ('suite -> NEWLINE INDENT stmt_list DEDENT','suite',4,'p_suite','parser.py',1292),
  ('test -> or_test','test',1,'p_test','parser.py',1297),
  ('test -> or_test IF or_test ELSE test','test',5,'p_test','parser.py',1298),
  ('test -> lambdef','test',1,'p_test','parser.py',1299),
  ('test_nocond -> or_test','test_nocond',1,'p_test_nocond','parser.py',1312),
  ('test_nocond -> lambdef_nocond','test_nocond',1,'p_test_nocond','parser.py',1313),
  ('lambdef -> LAMBDA varargslist_opt COLON test','lambdef',4,'p_lambdef','parser.py',1318),
  ('lambdef_nocond -> LAMBDA varargslist_opt COLON test_nocond','lambdef_nocond',4,'p_lambdef_nocond','parser.py',1336),
  ('or_test -> and_test or_and_test_list_opt','or_test',2,'p_or_test','parser.py',1340),
  ('or_and_test -> OR and_test','or_and_test',2,'p_or_and_test','parser.py',1357),
  ('and_test -> not_test and_not_test_list_opt','and_test',2,'p_and_test','parser.py',1361),
  ('and_not_test -> AND not_test','and_not_test',2,'p_and_not_test','parser.py',1378),
  ('not_test -> NOT not_test','not_test',2,'p_not_test','parser.py',1382),
  ('not_test -> comparison','not_test',1,'p_not_test','parser.py',1383),
  ('comparison -> expr comp_op_expr_list_opt','comparison',2,'p_comparison','parser.py',1395),
  ('comp_op_expr -> comp_op expr','comp_op_expr',2,'p_comp_op_expr','parser.py',1408),
  ('comp_op -> LT','comp_op',1,'p_comp_op','parser.py',1425),
  ('comp_op -> GT','comp_op',1,'p_comp_op','parser.py',1426),
  ('comp_op -> EQ','comp_op',1,'p_comp_op','parser.py',1427),
  ('comp_op -> GE','comp_op',1,'p_comp_op','parser.py',1428),
  ('comp_op -> LE','comp_op',1,'p_comp_op','parser.py',1429),
  ('comp_op -> NE','comp_op',1,'p_comp_op','parser.py',1430),
  ('comp_op -> IN','comp_op',1,'p_comp_op','parser.py',1431),
  ('comp_op -> NOT IN','comp_op',2,'p_comp_op','parser.py',1432),
  ('comp_op -> IS','comp_op',1,'p_comp_op','parser.py',1433),
  ('comp_op -> IS NOT','comp_op',2,'p_comp_op','parser.py',1434),
  ('star_expr -> TIMES expr','star_expr',2,'p_star_expr','parser.py',1440),
  ('expr -> xor_expr','expr',1,'p_expr','parser.py',1464),
  ('expr -> xor_expr pipe_xor_expr_list','expr',2,'p_expr','parser.py',1465),
  ('pipe_xor_expr -> PIPE xor_expr','pipe_xor_expr',2,'p_pipe_xor_expr','parser.py',1470),
  ('xor_expr -> and_expr xor_and_expr_list_opt','xor_expr',2,'p_xor_expr','parser.py',1478),
  ('xor_and_expr -> XOR and_expr','xor_and_expr',2,'p_xor_and_expr','parser.py',1482),
  ('and_expr -> shift_expr ampersand_shift_expr_list_opt','and_expr',2,'p_and_expr','parser.py',1490),
  ('ampersand_shift_expr -> AMPERSAND shift_expr','ampersand_shift_expr',2,'p_ampersand_shift_expr','parser.py',1494),
  ('shift_expr -> arith_expr shift_arith_expr_list_opt','shift_expr',2,'p_shift_expr','parser.py',1502),
  ('shift_arith_expr -> LSHIFT arith_expr','shift_arith_expr',2,'p_shift_arith_expr','parser.py',1506),
  ('shift_arith_expr -> RSHIFT arith_expr','shift_arith_expr',2,'p_shift_arith_expr','parser.py',1507),
  ('arith_expr -> term','arith_expr',1,'p_arith_expr','parser.py',1517),
  ('arith_expr -> term pm_term_list','arith_expr',2,'p_arith_expr','parser.py',1518),
  ('pm_term -> PLUS term','pm_term',2,'p_pm_term','parser.py',1551),
  ('pm_term -> MINUS term','pm_term',2,'p_pm_term','parser.py',1552),
  ('term -> factor op_factor_list_opt','term',2,'p_term','parser.py',1558),
  ('op_factor -> TIMES factor','op_factor',2,'p_op_factor','parser.py',1580),
  ('op_factor -> AT factor','op_factor',2,'p_op_factor','parser.py',1581),
  ('op_factor -> DIVIDE factor','op_factor',2,'p_op_factor','parser.py',1582),
  ('op_factor -> MOD factor','op_factor',2,'p_op_factor','parser.py',1583),
  ('op_factor -> DOUBLEDIV factor','op_factor',2,'p_op_factor','parser.py',1584),
  ('factor -> PLUS factor','factor',2,'p_factor','parser.py',1595),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',1596),
  ('factor -> TILDE factor','factor',2,'p_factor','parser.py',1597),
  ('factor -> power','factor',1,'p_factor','parser.py',1598),
  ('power -> atom_expr','power',1,'p_power','parser.py',1611),
  ('power -> atom_expr POW factor','power',3,'p_power','parser.py',1612),
  ('yield_expr_or_testlist_comp -> yield_expr','yield_expr_or_testlist_comp',1,'p_yield_expr_or_testlist_comp','parser.py',1628),
  ('yield_expr_or_testlist_comp -> testlist_comp','yield_expr_or_testlist_comp',1,'p_yield_expr_or_testlist_comp','parser.py',1629),
  ('atom_expr -> atom trailer_list_opt','atom_expr',2,'p_atom_expr','parser.py',1642),
  ('atom_expr -> AWAIT atom trailer_list_opt','atom_expr',3,'p_atom_expr','parser.py',1643),
  ('atom -> LPAREN yield_expr_or_testlist_comp_opt RPAREN','atom',3,'p_atom','parser.py',1692),
  ('atom -> LBRACKET testlist_comp_opt RBRACKET','atom',3,'p_atom','parser.py',1693),
  ('atom -> LBRACE dictorsetmaker_opt RBRACE','atom',3,'p_atom','parser.py',1694),
  ('atom -> NAME','atom',1,'p_atom','parser.py',1695),
  ('atom -> number','atom',1,'p_atom','parser.py',1696),
  ('atom -> string_literal_list','atom',1,'p_atom','parser.py',1697),
  ('atom -> ELLIPSIS','atom',1,'p_atom','parser.py',1698),
  ('atom -> NONE','atom',1,'p_atom','parser.py',1699),
  ('atom -> TRUE','atom',1,'p_atom','parser.py',1700),
  ('atom -> FALSE','atom',1,'p_atom','parser.py',1701),
  ('atom -> REGEXPATH','atom',1,'p_atom','parser.py',1702),
  ('atom -> DOLLAR_NAME','atom',1,'p_atom','parser.py',1703),
  ('atom -> DOLLAR_LBRACE test RBRACE','atom',3,'p_atom','parser.py',1704),
  ('atom -> DOLLAR_LPAREN subproc RPAREN','atom',3,'p_atom','parser.py',1705),
  ('atom -> DOLLAR_LBRACKET subproc RBRACKET','atom',3,'p_atom','parser.py',1706),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','parser.py',1801),
  ('string_literal_list -> string_literal','string_literal_list',1,'p_string_literal_list','parser.py',1807),
  ('string_literal_list -> string_literal_list string_literal','string_literal_list',2,'p_string_literal_list','parser.py',1808),
  ('number -> NUMBER','number',1,'p_number','parser.py',1815),
  ('testlist_comp -> test_or_star_expr comp_for','testlist_comp',2,'p_testlist_comp','parser.py',1819),
  ('testlist_comp -> test_or_star_expr comma_opt','testlist_comp',2,'p_testlist_comp','parser.py',1820),
  ('testlist_comp -> test_or_star_expr comma_test_or_star_expr_list comma_opt','testlist_comp',3,'p_testlist_comp','parser.py',1821),
  ('trailer -> LPAREN arglist_opt RPAREN','trailer',3,'p_trailer','parser.py',1854),
  ('trailer -> LBRACKET subscriptlist RBRACKET','trailer',3,'p_trailer','parser.py',1855),
  ('trailer -> PERIOD NAME','trailer',2,'p_trailer','parser.py',1856),
  ('trailer -> DOUBLE_QUESTION','trailer',1,'p_trailer','parser.py',1857),
  ('trailer -> QUESTION','trailer',1,'p_trailer','parser.py',1858),
  ('subscriptlist -> subscript comma_subscript_list_opt comma_opt','subscriptlist',3,'p_subscriptlist','parser.py',1875),
  ('comma_subscript -> COMMA subscript','comma_subscript',2,'p_comma_subscript','parser.py',1885),
  ('subscript -> test','subscript',1,'p_subscript','parser.py',1889),
  ('subscript -> test_opt COLON test_opt sliceop_opt','subscript',4,'p_subscript','parser.py',1890),
  ('sliceop -> COLON test_opt','sliceop',2,'p_sliceop','parser.py',1899),
  ('expr_or_star_expr -> expr','expr_or_star_expr',1,'p_expr_or_star_expr','parser.py',1903),
  ('expr_or_star_expr -> star_expr','expr_or_star_expr',1,'p_expr_or_star_expr','parser.py',1904),
  ('comma_expr_or_star_expr -> COMMA expr_or_star_expr','comma_expr_or_star_expr',2,'p_comma_expr_or_star_expr','parser.py',1909),
  ('exprlist -> expr_or_star_expr comma_expr_or_star_expr_list comma_opt','exprlist',3,'p_exprlist','parser.py',1913),
  ('exprlist -> expr_or_star_expr comma_opt','exprlist',2,'p_exprlist','parser.py',1914),
  ('testlist -> test comma_test_list COMMA','testlist',3,'p_testlist','parser.py',1930),
  ('testlist -> test comma_test_list','testlist',2,'p_testlist','parser.py',1931),
  ('testlist -> test COMMA','testlist',2,'p_testlist','parser.py',1932),
  ('testlist -> test','testlist',1,'p_testlist','parser.py',1933),
  ('item -> test COLON test','item',3,'p_item','parser.py',1954),
  ('item -> POW expr','item',2,'p_item','parser.py',1955),
  ('comma_item -> COMMA item','comma_item',2,'p_comma_item','parser.py',1971),
  ('dictorsetmaker -> item comp_for','dictorsetmaker',2,'p_dictorsetmaker','parser.py',1975),
  ('dictorsetmaker -> test_or_star_expr comp_for','dictorsetmaker',2,'p_dictorsetmaker','parser.py',1976),
  ('dictorsetmaker -> testlist','dictorsetmaker',1,'p_dictorsetmaker','parser.py',1977),
  ('dictorsetmaker -> test_or_star_expr comma_opt','dictorsetmaker',2,'p_dictorsetmaker','parser.py',1978),
  ('dictorsetmaker -> test_or_star_expr comma_test_or_star_expr_list comma_opt','dictorsetmaker',3,'p_dictorsetmaker','parser.py',1979),
  ('dictorsetmaker -> test COLON testlist','dictorsetmaker',3,'p_dictorsetmaker','parser.py',1980),
  ('dictorsetmaker -> item comma_item_list comma_opt','dictorsetmaker',3,'p_dictorsetmaker','parser.py',1981),
  ('dictorsetmaker -> test COLON test comma_item_list comma_opt','dictorsetmaker',5,'p_dictorsetmaker','parser.py',1982),
  ('classdef -> CLASS NAME func_call_opt COLON suite','classdef',5,'p_classdef','parser.py',2040),
  ('arglist -> argument comma_opt','arglist',2,'p_arglist','parser.py',2070),
  ('arglist -> argument comma_argument_list comma_opt','arglist',3,'p_arglist','parser.py',2071),
  ('comma_argument -> COMMA argument','comma_argument',2,'p_comma_argument','parser.py',2137),
  ('argument -> test_or_star_expr','argument',1,'p_argument','parser.py',2141),
  ('argument -> test comp_for','argument',2,'p_argument','parser.py',2142),
  ('argument -> test EQUALS test','argument',3,'p_argument','parser.py',2143),
  ('argument -> POW test','argument',2,'p_argument','parser.py',2144),
  ('argument -> TIMES test','argument',2,'p_argument','parser.py',2145),
  ('comp_iter -> comp_for','comp_iter',1,'p_comp_iter','parser.py',2187),
  ('comp_iter -> comp_if','comp_iter',1,'p_comp_iter','parser.py',2188),
  ('comp_for -> FOR exprlist IN or_test comp_iter_opt','comp_for',5,'p_comp_for','parser.py',2193),
  ('comp_if -> IF test_nocond comp_iter_opt','comp_if',3,'p_comp_if','parser.py',2210),
  ('yield_expr -> YIELD yield_arg_opt','yield_expr',2,'p_yield_expr','parser.py',2218),
  ('yield_arg -> FROM test','yield_arg',2,'p_yield_arg','parser.py',2233),
  ('yield_arg -> testlist','yield_arg',1,'p_yield_arg','parser.py',2234),
  ('pipe -> PIPE','pipe',1,'p_pipe','parser.py',2324),
  ('pipe -> WS PIPE','pipe',2,'p_pipe','parser.py',2325),
  ('pipe -> PIPE WS','pipe',2,'p_pipe','parser.py',2326),
  ('pipe -> WS PIPE WS','pipe',3,'p_pipe','parser.py',2327),
  ('subproc -> subproc_atoms','subproc',1,'p_subproc','parser.py',2335),
  ('subproc -> subproc_atoms WS','subproc',2,'p_subproc','parser.py',2336),
  ('subproc -> subproc AMPERSAND','subproc',2,'p_subproc','parser.py',2337),
  ('subproc -> subproc pipe subproc_atoms','subproc',3,'p_subproc','parser.py',2338),
  ('subproc -> subproc pipe subproc_atoms WS','subproc',4,'p_subproc','parser.py',2339),
  ('subproc_atoms -> subproc_atom','subproc_atoms',1,'p_subproc_atoms','parser.py',2361),
  ('subproc_atoms -> subproc_atoms WS subproc_atom','subproc_atoms',3,'p_subproc_atoms','parser.py',2362),
  ('subproc_atom -> subproc_arg','subproc_atom',1,'p_subproc_atom','parser.py',2372),
  ('subproc_atom -> string_literal','subproc_atom',1,'p_subproc_atom','parser.py',2373),
  ('subproc_atom -> REGEXPATH','subproc_atom',1,'p_subproc_atom','parser.py',2374),
  ('subproc_atom -> DOLLAR_NAME','subproc_atom',1,'p_subproc_atom','parser.py',2375),
  ('subproc_atom -> GT','subproc_atom',1,'p_subproc_atom','parser.py',2376),
  ('subproc_atom -> LT','subproc_atom',1,'p_subproc_atom','parser.py',2377),
  ('subproc_atom -> RSHIFT','subproc_atom',1,'p_subproc_atom','parser.py',2378),
  ('subproc_atom -> IOREDIRECT','subproc_atom',1,'p_subproc_atom','parser.py',2379),
  ('subproc_atom -> AT_LPAREN test RPAREN','subproc_atom',3,'p_subproc_atom','parser.py',2380),
  ('subproc_atom -> DOLLAR_LBRACE test RBRACE','subproc_atom',3,'p_subproc_atom','parser.py',2381),
  ('subproc_atom -> DOLLAR_LPAREN subproc RPAREN','subproc_atom',3,'p_subproc_atom','parser.py',2382),
  ('subproc_atom -> DOLLAR_LBRACKET subproc RBRACKET','subproc_atom',3,'p_subproc_atom','parser.py',2383),
  ('subproc_arg -> subproc_arg_part','subproc_arg',1,'p_subproc_arg','parser.py',2448),
  ('subproc_arg -> subproc_arg subproc_arg_part','subproc_arg',2,'p_subproc_arg','parser.py',2449),
  ('subproc_arg_part -> NAME','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2460),
  ('subproc_arg_part -> TILDE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2461),
  ('subproc_arg_part -> PERIOD','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2462),
  ('subproc_arg_part -> DIVIDE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2463),
  ('subproc_arg_part -> MINUS','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2464),
  ('subproc_arg_part -> PLUS','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2465),
  ('subproc_arg_part -> COLON','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2466),
  ('subproc_arg_part -> AT','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2467),
  ('subproc_arg_part -> EQUALS','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2468),
  ('subproc_arg_part -> TIMES','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2469),
  ('subproc_arg_part -> POW','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2470),
  ('subproc_arg_part -> MOD','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2471),
  ('subproc_arg_part -> XOR','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2472),
  ('subproc_arg_part -> DOUBLEDIV','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2473),
  ('subproc_arg_part -> ELLIPSIS','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2474),
  ('subproc_arg_part -> NONE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2475),
  ('subproc_arg_part -> TRUE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2476),
  ('subproc_arg_part -> FALSE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2477),
  ('subproc_arg_part -> NUMBER','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2478),
  ('subproc_arg_part -> STRING','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2479),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',2490),
]
