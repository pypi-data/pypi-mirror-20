
# parser_table.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'start_symbolsleftPIPEleftXORleftAMPERSANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEDOUBLEDIVMODleftPOWMINUS STRING NEWLINE INDENT DEDENT RSHIFTEQUAL MOD POWEQUAL LSHIFTEQUAL SEMI XOR DOUBLEDIV COLON DIVIDE TIMES LE LT PIPEEQUAL PLUS AWAIT GT LSHIFT MINUSEQUAL TIMESEQUAL PIPE AT PERIOD COMMA ASYNC MODEQUAL XOREQUAL RARROW AMPERSANDEQUAL TILDE DOUBLEDIVEQUAL DIVEQUAL NE EQUALS GE ATEQUAL RSHIFT POW PLUSEQUAL ELLIPSIS EQ NAME NUMBER WS AMPERSAND REGEXPATH IOREDIRECT LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE AT QUESTION DOUBLE_QUESTION AT_LPAREN DOLLAR_NAME DOLLAR_LPAREN DOLLAR_LBRACE DOLLAR_LBRACKET FALSE NONE TRUE AND AS ASSERT BREAK CLASS CONTINUE DEF DEL ELIF ELSE EXCEPT FINALLY FOR FROM GLOBAL IF IMPORT IN IS LAMBDA NONLOCAL NOT OR PASS RAISE RETURN TRY WHILE WITH YIELDampersand_shift_expr_list_opt : empty\n        | ampersand_shift_expr_listand_not_test_list_opt : empty\n        | and_not_test_listarglist_opt : empty\n        | arglistas_name_opt : empty\n        | as_namecolon_test_opt : empty\n        | colon_testcomma_dotted_as_name_list_opt : empty\n        | comma_dotted_as_name_listcomma_import_as_name_list_opt : empty\n        | comma_import_as_name_listcomma_name_list_opt : empty\n        | comma_name_listcomma_pow_tfpdef_opt : empty\n        | comma_pow_tfpdefcomma_pow_vfpdef_opt : empty\n        | comma_pow_vfpdefcomma_subscript_list_opt : empty\n        | comma_subscript_listcomma_test_opt : empty\n        | comma_testcomma_tfpdef_list_opt : empty\n        | comma_tfpdef_listcomma_vfpdef_list_opt : empty\n        | comma_vfpdef_listcomp_iter_opt : empty\n        | comp_itercomp_op_expr_list_opt : empty\n        | comp_op_expr_listdictorsetmaker_opt : empty\n        | dictorsetmakerelif_part_list_opt : empty\n        | elif_part_listequals_test_opt : empty\n        | equals_testequals_yield_expr_or_testlist_list_opt : empty\n        | equals_yield_expr_or_testlist_listfinally_part_opt : empty\n        | finally_partfunc_call_opt : empty\n        | func_callnewlines_opt : empty\n        | newlinesop_factor_list_opt : empty\n        | op_factor_listor_and_test_list_opt : empty\n        | or_and_test_listperiod_or_ellipsis_list_opt : empty\n        | period_or_ellipsis_listrarrow_test_opt : empty\n        | rarrow_testshift_arith_expr_list_opt : empty\n        | shift_arith_expr_listsliceop_opt : empty\n        | sliceoptest_comma_list_opt : empty\n        | test_comma_listtest_opt : empty\n        | testtestlist_comp_opt : empty\n        | testlist_comptestlist_opt : empty\n        | testlisttfpdef_opt : empty\n        | tfpdeftrailer_list_opt : empty\n        | trailer_listtypedargslist_opt : empty\n        | typedargslistvarargslist_opt : empty\n        | varargslistvfpdef_opt : empty\n        | vfpdefxor_and_expr_list_opt : empty\n        | xor_and_expr_listyield_arg_opt : empty\n        | yield_argyield_expr_or_testlist_comp_opt : empty\n        | yield_expr_or_testlist_compampersand_shift_expr_list : ampersand_shift_expr\n         | ampersand_shift_expr_list ampersand_shift_exprand_not_test_list : and_not_test\n         | and_not_test_list and_not_testattr_period_name_list : attr_period_name\n         | attr_period_name_list attr_period_namecomma_argument_list : comma_argument\n         | comma_argument_list comma_argumentcomma_dotted_as_name_list : comma_dotted_as_name\n         | comma_dotted_as_name_list comma_dotted_as_namecomma_expr_or_star_expr_list : comma_expr_or_star_expr\n         | comma_expr_or_star_expr_list comma_expr_or_star_exprcomma_import_as_name_list : comma_import_as_name\n         | comma_import_as_name_list comma_import_as_namecomma_item_list : comma_item\n         | comma_item_list comma_itemcomma_name_list : comma_name\n         | comma_name_list comma_namecomma_subscript_list : comma_subscript\n         | comma_subscript_list comma_subscriptcomma_test_list : comma_test\n         | comma_test_list comma_testcomma_test_or_star_expr_list : comma_test_or_star_expr\n         | comma_test_or_star_expr_list comma_test_or_star_exprcomma_tfpdef_list : comma_tfpdef\n         | comma_tfpdef_list comma_tfpdefcomma_vfpdef_list : comma_vfpdef\n         | comma_vfpdef_list comma_vfpdefcomma_with_item_list : comma_with_item\n         | comma_with_item_list comma_with_itemcomp_op_expr_list : comp_op_expr\n         | comp_op_expr_list comp_op_exprelif_part_list : elif_part\n         | elif_part_list elif_partequals_yield_expr_or_testlist_list : equals_yield_expr_or_testlist\n         | equals_yield_expr_or_testlist_list equals_yield_expr_or_testlistexcept_part_list : except_part\n         | except_part_list except_partop_factor_list : op_factor\n         | op_factor_list op_factoror_and_test_list : or_and_test\n         | or_and_test_list or_and_testperiod_name_list : period_name\n         | period_name_list period_nameperiod_or_ellipsis_list : period_or_ellipsis\n         | period_or_ellipsis_list period_or_ellipsispipe_xor_expr_list : pipe_xor_expr\n         | pipe_xor_expr_list pipe_xor_exprpm_term_list : pm_term\n         | pm_term_list pm_termsemi_small_stmt_list : semi_small_stmt\n         | semi_small_stmt_list semi_small_stmtshift_arith_expr_list : shift_arith_expr\n         | shift_arith_expr_list shift_arith_exprtest_comma_list : test_comma\n         | test_comma_list test_commatest_or_star_expr_list : test_or_star_expr\n         | test_or_star_expr_list test_or_star_exprtrailer_list : trailer\n         | trailer_list trailerxor_and_expr_list : xor_and_expr\n         | xor_and_expr_list xor_and_exprstart_symbols : single_input\n                         | file_input\n                         | eval_input\n                         | empty\n        single_input : compound_stmt NEWLINE\n        file_input : file_stmtsfile_stmts : newline_or_stmt\n                      | file_stmts newline_or_stmt\n        newline_or_stmt : NEWLINE\n                           | stmt\n        newlines : NEWLINE\n                    | newlines NEWLINE\n        eval_input : testlist newlines_opt\n        func_call : LPAREN arglist_opt RPARENattr_period_name : PERIOD NAMEattr_name : NAME\n                     | NAME attr_period_name_list\n        decorator : AT attr_name NEWLINE\n                     | AT attr_name func_call NEWLINE\n        decorators : decorator\n                      | decorators decorator\n        classdef_or_funcdef : classdef\n                               | funcdef\n                               | async_funcdef\n        decorated : decorators classdef_or_funcdefrarrow_test : RARROW testfuncdef : DEF NAME parameters rarrow_test_opt COLON suiteasync_funcdef : ASYNC funcdefparameters : LPAREN typedargslist_opt RPARENequals_test : EQUALS testtypedargslist : tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt\n                         | tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt COMMA POW vfpdef\n                         | tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt comma_tfpdef_list_opt\n                         | tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt comma_tfpdef_list COMMA POW tfpdef\n                         | tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt POW tfpdef\n                         | TIMES tfpdef_opt comma_tfpdef_list comma_pow_tfpdef_opt\n                         | TIMES tfpdef_opt comma_pow_tfpdef_opt\n                         | POW tfpdef\n        colon_test : COLON testtfpdef : NAME colon_test_optcomma_tfpdef : COMMA\n                        | COMMA tfpdef equals_test_opt\n        comma_pow_tfpdef : COMMA POW tfpdefvarargslist : vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt\n                       | vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt COMMA POW vfpdef\n                       | vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt comma_vfpdef_list_opt\n                       | vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt comma_vfpdef_list COMMA POW vfpdef\n                       | vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt POW vfpdef\n                       | TIMES vfpdef_opt comma_vfpdef_list comma_pow_vfpdef_opt\n                       | TIMES vfpdef_opt comma_pow_vfpdef_opt\n                       | POW vfpdef\n        vfpdef : NAMEcomma_vfpdef : COMMA\n                        | COMMA vfpdef equals_test_opt\n        comma_pow_vfpdef : COMMA POW vfpdefstmt : simple_stmt\n                | compound_stmt\n        stmt_list : stmt\n                     | stmt_list stmtsemi_opt : SEMI\n                    | empty\n        semi_small_stmt : SEMI small_stmtsimple_stmt : small_stmt semi_small_stmt_list semi_opt NEWLINE\n                       | small_stmt semi_opt NEWLINE\n        small_stmt : expr_stmt\n                      | del_stmt\n                      | pass_stmt\n                      | flow_stmt\n                      | import_stmt\n                      | global_stmt\n                      | nonlocal_stmt\n                      | assert_stmt\n        expr_stmt : testlist_star_expr augassign yield_expr_or_testlist\n                     | testlist_star_expr equals_yield_expr_or_testlist_list_opt\n                     | testlist equals_yield_expr_or_testlist_list_opt\n                     | test_comma_list_opt star_expr comma_test_list equals_yield_expr_or_testlist\n                     | test_comma_list_opt star_expr comma_opt test_comma_list_opt equals_yield_expr_or_testlist\n        test_comma : test COMMAcomma_opt : COMMA\n                     | empty\n        test_or_star_expr : test\n                             | star_expr\n        comma_test_or_star_expr : COMMA test_or_star_exprtestlist_star_expr : test_or_star_expr comma_test_or_star_expr_list comma_opt\n                              | test_or_star_expr comma_opt\n        augassign : PLUSEQUAL\n                     | MINUSEQUAL\n                     | TIMESEQUAL\n                     | ATEQUAL\n                     | DIVEQUAL\n                     | MODEQUAL\n                     | AMPERSANDEQUAL\n                     | PIPEEQUAL\n                     | XOREQUAL\n                     | LSHIFTEQUAL\n                     | RSHIFTEQUAL\n                     | POWEQUAL\n                     | DOUBLEDIVEQUAL\n        yield_expr_or_testlist : yield_expr\n                                  | testlist\n        equals_yield_expr_or_testlist : EQUALS yield_expr_or_testlistdel_stmt : DEL exprlistpass_stmt : PASSflow_stmt : break_stmt\n                     | continue_stmt\n                     | return_stmt\n                     | raise_stmt\n                     | yield_stmt\n        break_stmt : BREAKcontinue_stmt : CONTINUEreturn_stmt : RETURN testlist_optyield_stmt : yield_exprraise_stmt : RAISE\n                      | RAISE test\n                      | RAISE test FROM test\n        import_stmt : import_name\n                       | import_from\n        import_name : IMPORT dotted_as_names\n        import_from_pre : FROM period_or_ellipsis_list_opt dotted_name\n                           | FROM period_or_ellipsis_list\n        import_from_post : TIMES\n                            | LPAREN import_as_names RPAREN\n                            | import_as_names\n        import_from : import_from_pre IMPORT import_from_post\n        period_or_ellipsis : PERIOD\n                              | ELLIPSIS\n        as_name : AS NAMEimport_as_name : NAME as_name_optcomma_import_as_name : COMMA import_as_name\n        dotted_as_name : dotted_name as_name_optcomma_dotted_as_name : COMMA dotted_as_nameimport_as_names : import_as_name comma_import_as_name_list_opt comma_opt\n        dotted_as_names : dotted_as_name comma_dotted_as_name_list_optperiod_name : PERIOD NAMEdotted_name : NAME\n                       | NAME period_name_list\n        comma_name : COMMA NAMEglobal_stmt : GLOBAL NAME comma_name_list_optnonlocal_stmt : NONLOCAL NAME comma_name_list_optcomma_test : COMMA testassert_stmt : ASSERT test comma_test_optcompound_stmt : if_stmt\n                         | while_stmt\n                         | for_stmt\n                         | try_stmt\n                         | with_stmt\n                         | funcdef\n                         | classdef\n                         | decorated\n                         | async_stmt\n        elif_part : ELIF test COLON suiteelse_part : ELSE COLON suiteif_stmt : IF test COLON suite elif_part_list_opt\n                   | IF test COLON suite elif_part_list_opt else_part\n        while_stmt : WHILE test COLON suite\n                      | WHILE test COLON suite else_part\n        for_stmt : FOR exprlist IN testlist COLON suite\n                    | FOR exprlist IN testlist COLON suite else_part\n        async_for_stmt : ASYNC for_stmtexcept_part : except_clause COLON suitefinally_part : FINALLY COLON suitetry_stmt : TRY COLON suite except_part_list else_part finally_part_opt\n                    | TRY COLON suite except_part_list finally_part_opt\n                    | TRY COLON suite finally_part\n        with_stmt : WITH with_item COLON suite\n                     | WITH with_item comma_with_item_list COLON suite\n        async_with_stmt : ASYNC with_stmtas_expr : AS exprwith_item : test\n                     | test as_expr\n        comma_with_item : COMMA with_itemexcept_clause : EXCEPT\n                         | EXCEPT test as_name_opt\n        async_stmt : async_funcdef\n                      | async_with_stmt\n                      | async_for_stmt\n        suite : simple_stmt\n                 | NEWLINE INDENT stmt_list DEDENT\n        test : or_test\n                | or_test IF or_test ELSE test\n                | lambdef\n        test_nocond : or_test\n                       | lambdef_nocond\n        lambdef : LAMBDA varargslist_opt COLON testlambdef_nocond : LAMBDA varargslist_opt COLON test_nocondor_test : and_test or_and_test_list_optor_and_test : OR and_testand_test : not_test and_not_test_list_optand_not_test : AND not_testnot_test : NOT not_test\n                    | comparison\n        comparison : expr comp_op_expr_list_optcomp_op_expr : comp_op exprcomp_op : LT\n                   | GT\n                   | EQ\n                   | GE\n                   | LE\n                   | NE\n                   | IN\n                   | NOT IN\n                   | IS\n                   | IS NOT\n        star_expr : TIMES exprexpr : xor_expr\n                | xor_expr pipe_xor_expr_list\n        pipe_xor_expr : PIPE xor_exprxor_expr : and_expr xor_and_expr_list_optxor_and_expr : XOR and_exprand_expr : shift_expr ampersand_shift_expr_list_optampersand_shift_expr : AMPERSAND shift_exprshift_expr : arith_expr shift_arith_expr_list_optshift_arith_expr : LSHIFT arith_expr\n                            | RSHIFT arith_expr\n        arith_expr : term\n                      | term pm_term_list\n        pm_term : PLUS term\n                   | MINUS term\n        term : factor op_factor_list_optop_factor : TIMES factor\n                     | AT factor\n                     | DIVIDE factor\n                     | MOD factor\n                     | DOUBLEDIV factor\n        factor : PLUS factor\n                  | MINUS factor\n                  | TILDE factor\n                  | power\n        power : atom_expr\n                 | atom_expr POW factor\n        yield_expr_or_testlist_comp : yield_expr\n                                       | testlist_comp\n        atom_expr : atom trailer_list_opt\n                     | AWAIT atom trailer_list_opt\n        atom : LPAREN yield_expr_or_testlist_comp_opt RPAREN\n                | LBRACKET testlist_comp_opt RBRACKET\n                | LBRACE dictorsetmaker_opt RBRACE\n                | NAME\n                | number\n                | string_literal_list\n                | ELLIPSIS\n                | NONE\n                | TRUE\n                | FALSE\n                | REGEXPATH\n                | DOLLAR_NAME\n                | DOLLAR_LBRACE test RBRACE\n                | DOLLAR_LPAREN subproc RPAREN\n                | DOLLAR_LBRACKET subproc RBRACKET\n        string_literal : STRINGstring_literal_list : string_literal\n                               | string_literal_list string_literal\n        number : NUMBERtestlist_comp : test_or_star_expr comp_for\n                         | test_or_star_expr comma_opt\n                         | test_or_star_expr comma_test_or_star_expr_list comma_opt\n        trailer : LPAREN arglist_opt RPAREN\n                   | LBRACKET subscriptlist RBRACKET\n                   | PERIOD NAME\n                   | DOUBLE_QUESTION\n                   | QUESTION\n        subscriptlist : subscript comma_subscript_list_opt comma_optcomma_subscript : COMMA subscriptsubscript : test\n                     | test_opt COLON test_opt sliceop_opt\n        sliceop : COLON test_optexpr_or_star_expr : expr\n                             | star_expr\n        comma_expr_or_star_expr : COMMA expr_or_star_exprexprlist : expr_or_star_expr comma_expr_or_star_expr_list comma_opt\n                    | expr_or_star_expr comma_opt\n        testlist : test comma_test_list COMMA\n                    | test comma_test_list\n                    | test COMMA\n                    | test\n        item : test COLON test\n                | POW expr\n        comma_item : COMMA itemdictorsetmaker : item comp_for\n                          | test_or_star_expr comp_for\n                          | testlist\n                          | test_or_star_expr comma_opt\n                          | test_or_star_expr comma_test_or_star_expr_list comma_opt\n                          | test COLON testlist\n                          | item comma_item_list comma_opt\n                          | test COLON test comma_item_list comma_opt\n        classdef : CLASS NAME func_call_opt COLON suitearglist : argument comma_opt\n                       | argument comma_argument_list comma_opt\n            comma_argument : COMMA argumentargument : test_or_star_expr\n                    | test comp_for\n                    | test EQUALS test\n                    | POW test\n                    | TIMES test\n        comp_iter : comp_for\n                     | comp_if\n        comp_for : FOR exprlist IN or_test comp_iter_optcomp_if : IF test_nocond comp_iter_optyield_expr : YIELD yield_arg_optyield_arg : FROM test\n                     | testlist\n        pipe : PIPE\n                | WS PIPE\n                | PIPE WS\n                | WS PIPE WS\n        subproc : subproc_atoms\n                   | subproc_atoms WS\n                   | subproc AMPERSAND\n                   | subproc pipe subproc_atoms\n                   | subproc pipe subproc_atoms WS\n        subproc_atoms : subproc_atom\n                         | subproc_atoms WS subproc_atom\n        subproc_atom : subproc_arg\n                        | string_literal\n                        | REGEXPATH\n                        | DOLLAR_NAME\n                        | GT\n                        | LT\n                        | RSHIFT\n                        | IOREDIRECT\n                        | AT_LPAREN test RPAREN\n                        | DOLLAR_LBRACE test RBRACE\n                        | DOLLAR_LPAREN subproc RPAREN\n                        | DOLLAR_LBRACKET subproc RBRACKET\n        subproc_arg : subproc_arg_part\n                       | subproc_arg subproc_arg_part\n        subproc_arg_part : NAME\n                            | TILDE\n                            | PERIOD\n                            | DIVIDE\n                            | MINUS\n                            | PLUS\n                            | COLON\n                            | AT\n                            | EQUALS\n                            | TIMES\n                            | POW\n                            | MOD\n                            | XOR\n                            | DOUBLEDIV\n                            | ELLIPSIS\n                            | NONE\n                            | TRUE\n                            | FALSE\n                            | NUMBER\n                            | STRING\n        empty : '
    
_lr_action_items = {'MINUSEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,258,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'DEL':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[4,-287,4,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,4,4,-172,-303,-311,-167,-166,-168,-169,4,4,-321,-208,4,4,-309,-299,4,4,-119,-492,-308,-207,-492,-310,-300,4,-431,4,-202,4,-120,-492,-307,-42,-41,4,4,-297,-115,-36,-35,4,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,4,-295,]),'DOUBLE_QUESTION':([15,20,31,35,45,51,71,77,79,83,85,111,112,213,232,234,235,237,298,355,401,415,437,438,452,462,466,546,554,],[-389,-382,-390,-385,232,-388,-384,-394,-386,-387,-383,-397,-395,232,-404,-141,232,-405,-396,-393,-380,-381,-142,-403,-379,-392,-391,-402,-401,]),'DOLLAR_LBRACKET':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,119,126,135,146,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[6,-287,6,119,6,-492,-492,6,-389,-291,6,-320,-382,-492,-154,-318,-201,-290,6,-390,-492,-385,6,6,6,6,6,-492,6,-137,-388,6,6,-292,6,-359,-293,119,6,-153,-286,6,-384,6,-394,-386,-200,6,-387,-319,-383,-294,-349,-151,6,-289,6,-372,-288,6,-373,-397,-395,-492,119,119,6,6,-342,-339,-344,-341,-338,6,-346,-340,-343,6,6,-356,-135,-55,-56,-121,6,-363,-48,6,6,6,6,-47,-201,-152,-83,-354,6,-1,-2,-143,-78,6,-352,-77,-492,6,-371,-370,6,-377,6,-404,6,-141,-70,-405,-69,6,6,6,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,6,6,-360,6,-131,6,-224,6,-138,-396,-369,6,6,-348,-172,-303,-311,6,-350,-129,-167,-166,-168,-169,6,6,6,6,6,119,119,-393,-447,-347,-345,6,6,6,-357,-358,-136,-364,-122,-368,-367,-365,-366,6,-355,-84,6,6,-144,-353,-380,6,-378,6,-381,6,6,6,-142,-403,6,6,6,-379,-132,-362,-361,-392,-222,-391,-321,-208,6,6,-351,-130,6,6,-374,-448,-449,6,-309,6,-402,6,6,-401,6,6,-299,6,6,-119,6,-492,-308,-207,6,-492,6,119,-450,-310,6,6,6,-300,6,-431,6,-202,6,-120,-492,-307,-42,-41,6,6,6,6,-297,-115,-36,-35,6,6,-301,-203,-322,-304,-306,-305,-171,-298,-116,6,-296,-302,6,-295,6,]),'ELLIPSIS':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,65,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,290,291,292,294,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,464,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[35,-287,35,128,35,-492,-492,35,-389,-291,35,-320,-382,-492,-154,-318,-201,-290,35,-390,-492,-385,35,35,35,35,35,-492,35,-137,-388,35,35,-292,35,-359,-293,128,294,35,-153,-286,35,-384,35,-394,-386,-200,35,-387,-319,-383,-294,-349,-151,35,-289,35,-372,-288,35,-373,-397,-395,-492,-470,128,-479,128,-487,-486,-482,-474,-484,-475,-473,35,-491,-472,-489,-488,-483,-481,-485,35,-476,-477,-478,-480,-490,128,-342,-339,-344,-341,-338,35,-346,-340,-343,35,35,-356,-135,-55,-56,-121,35,-363,-48,35,35,35,35,-47,-201,-152,-83,-354,35,-1,-2,-143,-78,35,-352,-77,-492,35,-371,-370,35,-377,35,-404,35,-141,-70,-405,-69,35,35,35,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,35,35,-360,35,-131,35,-224,35,-127,294,-269,-270,-138,-396,-369,35,35,-348,-172,-303,-311,35,-350,-129,-167,-166,-168,-169,35,35,35,35,35,128,128,-393,-447,-471,-491,-347,-345,35,35,35,-357,-358,-136,-364,-122,-368,-367,-365,-366,35,-355,-84,35,35,-144,-353,-380,35,-378,35,-381,35,35,35,-142,-403,35,35,35,-379,-132,-362,-361,-392,-128,-222,-391,-321,-208,35,35,-351,-130,35,35,-374,-448,-449,35,-309,35,-402,35,35,-401,35,35,-299,35,35,-119,35,-492,-308,-207,35,-492,35,128,-450,-310,35,35,35,-300,35,-431,35,-202,35,-120,-492,-307,-42,-41,35,35,35,35,-297,-115,-36,-35,35,35,-301,-203,-322,-304,-306,-305,-171,-298,-116,35,-296,-302,35,-295,35,]),'DOUBLEDIVEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,270,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'POWEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,254,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'WITH':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,87,91,99,108,185,187,308,309,310,328,329,330,331,467,472,520,563,566,567,570,572,573,602,608,628,631,632,633,636,637,638,639,640,660,661,662,663,674,675,676,677,679,680,685,698,699,707,708,728,],[8,-287,8,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,8,-151,-289,-288,-201,-152,-172,-303,-311,-167,-166,-168,-169,-321,-208,-309,-299,8,-119,-492,-308,-207,-492,-310,-300,-431,8,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-295,]),'REGEXPATH':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,119,126,135,146,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[15,-287,15,129,15,-492,-492,15,-389,-291,15,-320,-382,-492,-154,-318,-201,-290,15,-390,-492,-385,15,15,15,15,15,-492,15,-137,-388,15,15,-292,15,-359,-293,129,15,-153,-286,15,-384,15,-394,-386,-200,15,-387,-319,-383,-294,-349,-151,15,-289,15,-372,-288,15,-373,-397,-395,-492,129,129,15,15,-342,-339,-344,-341,-338,15,-346,-340,-343,15,15,-356,-135,-55,-56,-121,15,-363,-48,15,15,15,15,-47,-201,-152,-83,-354,15,-1,-2,-143,-78,15,-352,-77,-492,15,-371,-370,15,-377,15,-404,15,-141,-70,-405,-69,15,15,15,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,15,15,-360,15,-131,15,-224,15,-138,-396,-369,15,15,-348,-172,-303,-311,15,-350,-129,-167,-166,-168,-169,15,15,15,15,15,129,129,-393,-447,-347,-345,15,15,15,-357,-358,-136,-364,-122,-368,-367,-365,-366,15,-355,-84,15,15,-144,-353,-380,15,-378,15,-381,15,15,15,-142,-403,15,15,15,-379,-132,-362,-361,-392,-222,-391,-321,-208,15,15,-351,-130,15,15,-374,-448,-449,15,-309,15,-402,15,15,-401,15,15,-299,15,15,-119,15,-492,-308,-207,15,-492,15,129,-450,-310,15,15,15,-300,15,-431,15,-202,15,-120,-492,-307,-42,-41,15,15,15,15,-297,-115,-36,-35,15,15,-301,-203,-322,-304,-306,-305,-171,-298,-116,15,-296,-302,15,-295,15,]),'POW':([6,7,12,13,15,20,22,31,32,35,38,44,45,48,51,57,61,64,71,77,79,83,85,88,90,103,106,107,110,111,112,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,225,226,227,229,230,232,233,234,235,237,238,243,244,246,247,279,281,283,298,299,312,313,319,320,337,350,354,355,357,359,360,361,363,371,372,373,374,375,376,377,378,379,387,388,393,399,400,401,406,413,415,422,423,437,438,443,444,452,456,457,458,462,466,476,477,479,484,485,488,504,515,516,539,546,554,562,574,575,576,577,578,579,580,585,590,591,606,607,612,618,642,643,644,649,650,652,653,664,683,686,687,688,689,690,691,694,711,712,713,719,722,726,732,740,743,],[130,-492,-492,-492,-389,-382,-492,-390,-492,-385,217,-492,-492,-492,-388,-335,-359,130,-384,-394,-386,-387,-383,315,-349,-325,-323,-372,341,-397,-395,-470,130,-479,130,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,130,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-123,-330,-50,-49,-377,-404,429,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-396,-369,-492,-196,-350,-129,-334,130,130,-393,-447,-471,-491,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,429,-144,-353,-380,-378,217,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-392,-391,-38,-492,-37,-351,-130,594,-374,-448,-449,217,-402,-401,429,-328,-492,-27,-109,-197,-28,-174,646,-492,-492,130,-450,-223,217,681,-492,-110,-184,-10,-9,-492,-324,-198,-183,-492,-26,-107,-25,-185,714,725,-108,-492,315,731,-186,737,744,745,]),'DOUBLEDIV':([6,13,15,20,31,35,45,51,64,71,77,79,83,85,107,110,111,112,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,176,179,213,222,223,230,232,234,235,237,238,298,299,350,354,355,357,359,360,374,375,376,377,378,379,401,406,415,437,438,452,462,466,504,515,516,546,554,606,607,],[145,180,-389,-382,-390,-385,-492,-388,145,-384,-394,-386,-387,-383,-372,-373,-397,-395,-470,145,-479,145,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,145,-121,180,-492,-371,-370,-377,-404,-141,-70,-405,-69,-396,-369,145,145,-393,-447,-471,-491,-364,-122,-368,-367,-365,-366,-380,-378,-381,-142,-403,-379,-392,-391,-374,-448,-449,-402,-401,145,-450,]),'XOR':([6,12,13,15,20,22,31,32,35,45,51,61,64,71,77,79,83,85,107,110,111,112,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,172,173,174,175,176,178,179,184,194,195,197,198,203,204,213,222,223,230,232,234,235,237,238,279,281,298,299,350,354,355,357,359,360,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,504,515,516,546,554,606,607,],[132,-492,-492,-389,-382,-492,-390,205,-385,-492,-388,-359,132,-384,-394,-386,-387,-383,-372,-373,-397,-395,-470,132,-479,132,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,132,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,205,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,132,132,-393,-447,-471,-491,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-374,-448,-449,-402,-401,132,-450,]),'WS':([118,120,121,122,123,124,125,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,288,349,350,351,353,357,359,360,510,511,512,513,514,515,517,606,],[-470,350,-479,-462,-461,-456,-459,-487,-486,-460,-482,-474,-484,-475,-473,-464,-463,-394,-472,-489,-488,-483,356,-481,-485,-465,-476,-477,-478,-480,-490,-458,356,356,-452,356,-453,516,-471,-491,-469,-457,-468,-466,606,607,-467,-455,]),'LE':([7,12,13,15,20,22,31,32,35,45,51,61,71,77,79,83,85,90,107,110,111,112,163,164,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,279,281,298,299,319,320,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,484,485,504,546,554,557,],[154,-492,-492,-389,-382,-492,-390,-492,-385,-492,-388,-359,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,154,-113,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,-350,-129,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-351,-130,-374,-402,-401,154,]),'RARROW':([487,654,],[587,-173,]),'LBRACKET':([0,1,4,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,135,146,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,355,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[36,-287,36,36,-492,-492,36,-389,-291,36,-320,-382,-492,-154,-318,-201,-290,36,-390,-492,-385,36,36,36,36,36,231,36,-137,-388,36,36,-292,36,-359,-293,36,-153,-286,36,-384,36,-394,-386,-200,36,-387,-319,-383,-294,-349,-151,36,-289,36,-372,-288,36,-373,-397,-395,-492,36,36,-342,-339,-344,-341,-338,36,-346,-340,-343,36,36,-356,-135,-55,-56,-121,36,-363,-48,36,36,36,36,-47,-201,-152,-83,-354,36,-1,-2,-143,-78,36,-352,-77,231,36,-371,-370,36,-377,36,-404,36,-141,231,-405,-69,36,36,36,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,36,36,-360,36,-131,36,-224,36,-138,-396,-369,36,36,-348,-172,-303,-311,36,-350,-129,-167,-166,-168,-169,36,36,36,36,36,-393,-347,-345,36,36,36,-357,-358,-136,-364,-122,-368,-367,-365,-366,36,-355,-84,36,36,-144,-353,-380,36,-378,36,-381,36,36,36,-142,-403,36,36,36,-379,-132,-362,-361,-392,-222,-391,-321,-208,36,36,-351,-130,36,36,-374,36,-309,36,-402,36,36,-401,36,36,-299,36,36,-119,36,-492,-308,-207,36,-492,36,-310,36,36,36,-300,36,-431,36,-202,36,-120,-492,-307,-42,-41,36,36,36,36,-297,-115,-36,-35,36,36,-301,-203,-322,-304,-306,-305,-171,-298,-116,36,-296,-302,36,-295,36,]),'RBRACKET':([7,12,13,15,20,21,22,31,32,35,36,44,45,48,51,57,61,71,77,79,83,85,90,103,106,107,110,111,112,118,120,121,122,123,124,125,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,208,209,210,211,212,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,285,287,298,299,306,319,320,337,349,350,353,355,359,360,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,403,404,405,406,415,422,423,424,426,427,428,437,438,443,444,452,456,457,458,460,461,462,466,484,485,504,510,511,512,513,514,517,535,546,547,548,549,550,551,554,574,606,612,619,620,621,622,623,664,665,669,670,671,672,700,701,703,704,705,706,717,718,720,730,741,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-492,-492,-388,-335,-359,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-470,-451,-479,-462,-461,-456,-459,-487,-486,-460,-482,-474,-484,-475,-473,-464,-463,-394,-472,-489,-488,-483,355,-481,-485,-465,-476,-477,-478,-480,-490,-458,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-64,401,-63,-225,-492,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-105,-223,-396,-369,-348,-350,-129,-334,510,-452,-453,-393,-471,-491,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-492,-398,-399,-378,-381,-124,-331,546,-492,-61,-408,-142,-403,-86,-333,-379,-132,-362,-361,-106,-227,-392,-391,-351,-130,-374,-469,-457,-468,-466,-454,-467,-400,-402,-492,-101,-492,-22,-21,-401,-328,-455,-223,-492,-62,-406,-102,-407,-324,-492,-409,-492,-57,-58,-441,-30,-440,-442,-29,-410,-326,-327,-492,-443,-329,]),'MODEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,259,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'NAME':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,29,31,32,35,36,37,38,40,41,43,45,46,49,51,52,53,56,59,60,61,63,64,65,66,68,69,70,71,72,77,79,80,81,82,83,84,85,86,88,90,91,93,96,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,189,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,236,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,289,290,291,292,293,294,296,298,299,300,304,306,308,309,310,314,315,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,380,386,387,388,392,393,398,399,400,401,402,406,413,415,416,421,429,435,437,438,439,441,446,452,456,457,458,462,464,465,466,467,472,475,478,484,485,488,489,497,500,501,503,504,515,516,519,520,529,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,578,585,587,593,594,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,646,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,681,682,685,691,694,698,699,702,707,708,714,716,719,722,724,725,728,731,732,735,737,740,743,744,745,],[20,-287,20,139,20,-492,-492,20,-389,-291,20,-320,-382,-492,-154,-318,-201,-290,20,202,-390,-492,-385,20,20,20,20,20,224,-492,20,-137,-388,20,20,-292,20,278,-359,-293,139,-492,20,-153,-286,20,-384,20,-394,-386,-200,20,307,-387,-319,-383,-294,313,-349,-151,326,336,20,-289,20,-372,-288,20,-373,-397,-395,-492,-470,139,-479,139,-487,-486,-482,-474,-484,-475,-473,20,-491,-472,-489,-488,-483,-481,-485,20,-476,-477,-478,-480,-490,139,-342,-339,-344,-341,-338,20,-346,-340,-343,20,20,-356,-135,-55,-56,-121,20,-363,-48,20,20,20,20,-47,-201,-152,381,-83,-354,20,-1,-2,-143,-78,20,-352,-77,-492,20,-371,-370,20,-377,20,-404,20,-141,-70,438,-405,-69,20,20,20,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,20,20,-360,20,-131,20,-224,20,336,-127,-52,-269,-51,-270,-138,-396,-369,20,20,-348,-172,-303,-311,313,313,20,-350,-129,-167,-166,-168,-169,20,20,20,20,20,139,139,-393,-447,-471,-491,-347,-345,20,20,20,-357,-358,-136,-364,-122,-368,-367,-365,-366,381,20,-355,-84,20,20,533,-144,-353,-380,20,-378,20,-381,20,545,20,20,-142,-403,20,20,20,-379,-132,-362,-361,-392,-128,-222,-391,-321,-208,20,20,-351,-130,590,597,336,601,20,20,-374,-448,-449,20,-309,381,20,-402,20,20,-401,20,20,-299,20,20,-119,20,-492,-308,-207,313,313,20,590,590,-492,20,139,-450,-310,20,20,20,-300,20,-431,20,-202,20,-120,-492,-307,-42,-41,20,313,20,20,20,-297,-115,-36,-35,20,20,-301,-203,-322,-304,-306,-305,313,313,-171,590,590,-298,-116,20,-296,-302,590,20,313,313,590,590,-295,313,313,20,313,590,590,313,590,]),'SEMI':([5,7,9,10,11,12,13,15,18,20,21,22,24,30,31,32,33,35,44,45,47,48,50,51,52,54,55,57,58,61,62,67,71,75,76,77,78,79,83,85,89,90,92,94,100,101,102,103,104,106,107,109,110,111,112,114,115,116,117,161,163,164,167,172,173,174,175,176,178,179,184,188,190,191,192,193,194,195,197,198,200,203,204,206,207,211,213,222,223,224,225,226,227,229,230,232,234,235,237,238,240,241,242,243,244,246,247,248,249,250,251,257,263,264,265,279,281,283,284,285,286,287,298,299,301,302,306,307,319,320,322,325,333,334,335,336,337,340,345,346,347,348,355,361,363,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,399,400,401,406,415,417,418,419,420,422,423,437,438,440,441,442,443,444,445,447,448,449,450,451,452,456,457,458,459,460,461,462,466,470,473,474,484,485,490,491,492,493,494,495,496,498,499,504,505,507,508,509,524,525,526,527,528,544,545,546,554,574,597,598,599,600,601,604,605,609,610,611,612,613,664,],[-252,-492,-249,-256,-251,-492,-492,-389,-492,-382,-226,-492,-260,-214,-390,-492,-248,-385,-492,-492,-225,-492,-254,-388,-492,-210,-213,-335,-492,-359,-492,-209,-384,-247,304,-394,-211,-386,-387,-383,-253,-349,-492,-261,-250,-216,-212,-325,-215,-323,-372,-257,-373,-397,-395,-246,-492,-411,-412,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-492,-255,-66,-65,-419,-83,-354,-1,-2,-492,-143,-78,-352,-77,-225,-492,-371,-370,-492,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-417,-103,-418,-85,-4,-332,-3,-80,-444,-446,-79,-218,-117,-39,-40,-360,-131,-224,-229,-105,-492,-223,-396,-369,304,-133,-348,-492,-350,-129,-219,-39,-492,-492,-262,-279,-334,-258,-492,-415,-93,-223,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-492,-268,-265,-492,-267,-418,-355,-84,-24,-285,-23,-144,-353,-380,-378,-381,-99,-282,-16,-15,-124,-331,-142,-403,-104,-416,-284,-86,-333,-445,-118,-245,-243,-244,-217,-379,-132,-362,-361,-228,-106,-227,-392,-391,-134,-206,-283,-351,-130,-274,-7,-8,-91,-12,-277,-11,-125,-280,-374,-220,-414,-94,-413,-272,-14,-492,-95,-13,-100,-281,-402,-401,-328,-271,-92,-275,-126,-278,-259,-221,-266,-96,-276,-223,-273,-324,]),'$end':([0,1,7,12,13,14,15,17,19,20,22,23,25,26,27,31,32,34,35,39,42,44,45,47,48,51,56,57,61,63,68,69,71,74,77,79,80,83,84,85,86,90,91,92,97,99,103,106,107,108,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,185,187,194,195,197,198,199,203,204,206,207,213,222,223,225,226,227,229,230,232,234,235,237,238,240,241,242,243,244,246,247,279,281,298,299,308,309,310,319,320,321,323,324,325,328,329,330,331,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,440,441,442,443,444,452,456,457,458,462,466,467,472,484,485,486,504,520,546,554,563,567,570,572,573,574,602,608,628,631,636,637,638,639,640,660,661,662,663,664,674,676,677,679,680,685,698,699,707,708,728,],[-492,-287,-492,-492,-492,-150,-389,-291,-320,-382,-492,-154,-318,-201,-290,-390,-492,0,-385,-147,-148,-492,-492,-419,-492,-388,-292,-335,-359,-293,-153,-286,-384,-146,-394,-386,-200,-387,-319,-383,-294,-349,-151,-492,-145,-289,-325,-323,-372,-288,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-201,-152,-83,-354,-1,-2,-149,-143,-78,-352,-77,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-417,-103,-418,-85,-4,-332,-3,-360,-131,-396,-369,-172,-303,-311,-350,-129,-46,-155,-157,-45,-167,-166,-168,-169,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-104,-416,-284,-86,-333,-379,-132,-362,-361,-392,-391,-321,-208,-351,-130,-156,-374,-309,-402,-401,-299,-119,-492,-308,-207,-328,-492,-310,-300,-431,-120,-492,-307,-42,-41,-297,-115,-36,-35,-324,-301,-322,-304,-306,-305,-171,-298,-116,-296,-302,-295,]),'COMMA':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,61,62,71,77,79,83,85,90,103,106,107,110,111,112,113,115,116,117,161,163,164,167,168,169,172,173,174,175,176,178,179,184,193,194,195,197,198,200,203,204,206,207,211,212,213,215,216,221,222,223,224,225,226,227,229,230,232,234,235,237,238,240,241,243,244,246,247,279,281,285,286,295,298,299,306,307,312,313,314,319,320,333,334,336,337,342,345,347,355,361,363,365,366,369,371,372,373,374,375,376,377,378,379,381,384,387,388,399,400,401,403,406,407,410,412,414,415,417,419,422,423,426,427,428,433,434,436,437,438,440,442,443,444,452,456,457,458,460,461,462,466,476,477,479,480,481,482,484,485,490,491,492,493,494,498,499,504,508,509,518,521,522,524,525,526,527,528,537,540,543,544,545,546,547,548,549,550,551,553,554,555,557,558,559,560,574,575,576,577,578,579,580,583,585,590,591,593,597,598,599,600,601,610,613,617,619,620,622,623,624,625,627,643,644,649,650,652,653,655,656,657,664,665,666,668,669,670,671,672,682,683,686,687,688,689,690,691,694,695,700,701,703,704,705,706,710,712,713,717,718,720,722,723,724,726,730,732,733,739,740,741,743,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,242,-492,-388,-335,-359,287,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,343,348,-411,-412,-336,-32,-113,-31,368,-313,-356,-135,-55,-56,-121,-363,-48,-47,386,-83,-354,-1,-2,392,-143,-78,-352,-77,-225,287,-492,287,413,386,-371,-370,421,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,441,-103,-85,-4,-332,-3,-360,-131,-105,287,465,-396,-369,-348,421,-492,-196,-492,-350,-129,-492,497,-279,-334,392,348,-93,-393,-337,-114,368,-111,-314,-357,-358,-136,-364,-122,-368,-367,-365,-366,-492,529,-355,-84,-144,-353,-380,287,-378,287,539,-97,-421,-381,-99,421,-124,-331,552,-61,-408,-225,-435,562,-142,-403,-104,-284,-86,-333,-379,-132,-362,-361,-106,-227,-392,-391,-38,578,-37,585,-76,-75,-351,-130,-274,-7,-8,-91,497,-125,-280,-374,-94,-413,-112,-315,-312,-272,529,612,-95,-13,-98,-422,618,-100,-281,-402,-492,-101,612,552,-21,-438,-401,-436,-348,-439,-89,562,-328,612,-27,-109,-197,578,-174,585,-197,-492,-492,-492,-271,-92,-275,-126,-278,-96,-273,539,-492,-62,-102,-407,-437,-90,-434,-492,-110,-184,-10,-9,691,694,-68,-67,-324,-492,-420,-284,-409,-492,-57,-58,-492,-198,-183,612,691,-107,-25,-185,-185,694,-441,-30,-440,-442,-29,-410,722,-108,-492,-326,-327,-492,-197,732,-492,-186,-443,-197,740,743,-185,-329,-185,]),'ASSERT':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[28,-287,28,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,28,28,-172,-303,-311,-167,-166,-168,-169,28,28,-321,-208,28,28,-309,-299,28,28,-119,-492,-308,-207,-492,-310,-300,28,-431,28,-202,28,-120,-492,-307,-42,-41,28,28,-297,-115,-36,-35,28,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,28,-295,]),'COLON':([6,7,12,13,15,20,22,31,32,35,44,45,48,51,57,61,64,71,73,77,79,83,85,88,90,103,106,107,110,111,112,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,161,163,164,167,168,169,172,173,174,175,176,178,179,184,193,194,195,197,198,203,204,206,207,213,221,222,223,225,226,227,229,230,231,232,234,235,237,238,239,240,241,243,244,246,247,278,279,281,283,298,299,311,312,313,314,316,317,319,320,337,338,350,354,355,357,359,360,361,363,365,366,369,371,372,373,374,375,376,377,378,379,386,387,388,399,400,401,406,415,422,423,425,427,428,437,438,440,441,442,443,444,452,453,454,455,456,457,458,462,466,476,477,479,480,481,482,483,484,485,487,491,492,504,515,516,518,521,522,541,546,547,552,554,564,568,569,571,574,575,576,577,578,579,580,581,582,583,584,585,586,588,589,590,597,606,607,612,614,619,620,629,635,642,643,644,645,647,654,664,668,678,682,683,684,697,709,710,719,721,722,723,729,732,736,742,],[150,-492,-492,-492,-389,-382,-492,-390,-492,-385,-492,-492,-492,-388,-335,-359,150,-384,300,-394,-386,-387,-383,-492,-349,-325,-323,-372,-373,-397,-395,-470,150,-479,150,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,150,-336,-32,-113,-31,367,-313,-356,-135,-55,-56,-121,-363,-48,-47,-419,-83,-354,-1,-2,-143,-78,-352,-77,-492,416,-371,-370,-123,-330,-50,-49,-377,-492,-404,-141,-70,-405,-69,439,-417,-103,-85,-4,-332,-3,-492,-360,-131,-224,-396,-369,475,-492,-196,-492,-74,-73,-350,-129,-334,501,150,150,-393,-447,-471,-491,-337,-114,519,-111,-314,-357,-358,-136,-364,-122,-368,-367,-365,-366,-418,-355,-84,-144,-353,-380,-378,-381,-124,-331,547,-61,-62,-142,-403,-104,-416,-284,-86,-333,-379,-43,565,-44,-132,-362,-361,-392,-391,-38,-492,-37,-492,-76,-75,-195,-351,-130,-492,-7,-8,-374,-448,-449,-112,-315,-312,616,-402,-492,-492,-401,630,634,-316,641,-328,-492,-27,-109,-197,-28,-174,-20,-194,-492,-19,-197,-54,648,-53,651,-271,150,-450,-223,-158,670,-62,673,-492,-188,-492,-110,-193,-170,-173,-324,616,-317,-492,-198,-199,716,-192,-492,-492,-190,-197,-28,735,-197,-189,-191,]),'DOLLAR_NAME':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,119,126,135,146,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[31,-287,31,123,31,-492,-492,31,-389,-291,31,-320,-382,-492,-154,-318,-201,-290,31,-390,-492,-385,31,31,31,31,31,-492,31,-137,-388,31,31,-292,31,-359,-293,123,31,-153,-286,31,-384,31,-394,-386,-200,31,-387,-319,-383,-294,-349,-151,31,-289,31,-372,-288,31,-373,-397,-395,-492,123,123,31,31,-342,-339,-344,-341,-338,31,-346,-340,-343,31,31,-356,-135,-55,-56,-121,31,-363,-48,31,31,31,31,-47,-201,-152,-83,-354,31,-1,-2,-143,-78,31,-352,-77,-492,31,-371,-370,31,-377,31,-404,31,-141,-70,-405,-69,31,31,31,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,31,31,-360,31,-131,31,-224,31,-138,-396,-369,31,31,-348,-172,-303,-311,31,-350,-129,-167,-166,-168,-169,31,31,31,31,31,123,123,-393,-447,-347,-345,31,31,31,-357,-358,-136,-364,-122,-368,-367,-365,-366,31,-355,-84,31,31,-144,-353,-380,31,-378,31,-381,31,31,31,-142,-403,31,31,31,-379,-132,-362,-361,-392,-222,-391,-321,-208,31,31,-351,-130,31,31,-374,-448,-449,31,-309,31,-402,31,31,-401,31,31,-299,31,31,-119,31,-492,-308,-207,31,-492,31,123,-450,-310,31,31,31,-300,31,-431,31,-202,31,-120,-492,-307,-42,-41,31,31,31,31,-297,-115,-36,-35,31,31,-301,-203,-322,-304,-306,-305,-171,-298,-116,31,-296,-302,31,-295,31,]),'TRUE':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[83,-287,83,141,83,-492,-492,83,-389,-291,83,-320,-382,-492,-154,-318,-201,-290,83,-390,-492,-385,83,83,83,83,83,-492,83,-137,-388,83,83,-292,83,-359,-293,141,83,-153,-286,83,-384,83,-394,-386,-200,83,-387,-319,-383,-294,-349,-151,83,-289,83,-372,-288,83,-373,-397,-395,-492,-470,141,-479,141,-487,-486,-482,-474,-484,-475,-473,83,-491,-472,-489,-488,-483,-481,-485,83,-476,-477,-478,-480,-490,141,-342,-339,-344,-341,-338,83,-346,-340,-343,83,83,-356,-135,-55,-56,-121,83,-363,-48,83,83,83,83,-47,-201,-152,-83,-354,83,-1,-2,-143,-78,83,-352,-77,-492,83,-371,-370,83,-377,83,-404,83,-141,-70,-405,-69,83,83,83,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,83,83,-360,83,-131,83,-224,83,-138,-396,-369,83,83,-348,-172,-303,-311,83,-350,-129,-167,-166,-168,-169,83,83,83,83,83,141,141,-393,-447,-471,-491,-347,-345,83,83,83,-357,-358,-136,-364,-122,-368,-367,-365,-366,83,-355,-84,83,83,-144,-353,-380,83,-378,83,-381,83,83,83,-142,-403,83,83,83,-379,-132,-362,-361,-392,-222,-391,-321,-208,83,83,-351,-130,83,83,-374,-448,-449,83,-309,83,-402,83,83,-401,83,83,-299,83,83,-119,83,-492,-308,-207,83,-492,83,141,-450,-310,83,83,83,-300,83,-431,83,-202,83,-120,-492,-307,-42,-41,83,83,83,83,-297,-115,-36,-35,83,83,-301,-203,-322,-304,-306,-305,-171,-298,-116,83,-296,-302,83,-295,83,]),'INDENT':([468,],[566,]),'GE':([7,12,13,15,20,22,31,32,35,45,51,61,71,77,79,83,85,90,107,110,111,112,163,164,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,279,281,298,299,319,320,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,484,485,504,546,554,557,],[157,-492,-492,-389,-382,-492,-390,-492,-385,-492,-388,-359,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,157,-113,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,-350,-129,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-351,-130,-374,-402,-401,157,]),'RSHIFT':([6,12,13,15,20,31,35,45,51,61,64,71,77,79,83,85,107,110,111,112,119,126,173,175,176,178,179,184,213,222,223,230,232,234,235,237,238,279,281,298,299,350,354,355,357,371,372,373,374,375,376,377,378,379,401,406,415,437,438,452,456,457,458,462,466,504,515,516,546,554,606,607,],[136,171,-492,-389,-382,-390,-385,-492,-388,-359,136,-384,-394,-386,-387,-383,-372,-373,-397,-395,136,136,-135,171,-121,-363,-48,-47,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,136,136,-393,-447,-357,-358,-136,-364,-122,-368,-367,-365,-366,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-374,-448,-449,-402,-401,136,-450,]),'RBRACE':([7,12,13,15,20,21,22,31,32,35,38,44,45,48,51,57,61,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,214,215,218,219,220,221,222,223,225,226,227,229,230,232,234,235,237,238,240,241,243,244,246,247,279,281,283,285,287,297,298,299,306,319,320,337,355,358,361,363,371,372,373,374,375,376,377,378,379,386,387,388,399,400,401,406,407,408,409,410,411,412,414,415,422,423,437,438,440,441,442,443,444,452,456,457,458,460,461,462,466,484,485,504,536,537,538,539,540,542,543,546,554,574,617,618,664,665,666,667,668,700,701,703,704,705,717,718,720,730,741,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-492,-492,-388,-335,-359,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-34,-492,415,-425,-33,-225,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-417,-103,-85,-4,-332,-3,-360,-131,-224,-105,-223,466,-396,-369,-348,-350,-129,-334,-393,517,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-418,-355,-84,-144,-353,-380,-378,-492,-424,-426,-492,-423,-97,-421,-381,-124,-331,-142,-403,-104,-416,-284,-86,-333,-379,-132,-362,-361,-106,-227,-392,-391,-351,-130,-374,-427,-98,-429,-223,-422,-428,-419,-402,-401,-328,-492,-418,-324,-492,-420,-430,-284,-441,-30,-440,-442,-29,-326,-327,-492,-443,-329,]),'AWAIT':([0,1,4,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,38,40,41,45,46,49,51,52,53,56,59,61,63,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,135,146,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,355,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[37,-287,37,37,-492,-492,37,-389,-291,37,-320,-382,-492,-154,-318,-201,-290,37,-390,-492,-385,37,37,37,37,-492,37,-137,-388,37,37,-292,37,-359,-293,37,-153,-286,37,-384,37,-394,-386,-200,37,-387,-319,-383,-294,-349,-151,37,-289,37,-372,-288,37,-373,-397,-395,-492,37,37,-342,-339,-344,-341,-338,37,-346,-340,-343,37,37,-356,-135,-55,-56,-121,37,-363,-48,37,37,37,37,-47,-201,-152,-83,-354,37,-1,-2,-143,-78,37,-352,-77,-492,37,-371,-370,37,-377,37,-404,37,-141,-70,-405,-69,37,37,37,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,37,37,-360,37,-131,37,-224,37,-138,-396,-369,37,37,-348,-172,-303,-311,37,-350,-129,-167,-166,-168,-169,37,37,37,37,37,-393,-347,-345,37,37,37,-357,-358,-136,-364,-122,-368,-367,-365,-366,37,-355,-84,37,37,-144,-353,-380,37,-378,37,-381,37,37,37,-142,-403,37,37,37,-379,-132,-362,-361,-392,-222,-391,-321,-208,37,37,-351,-130,37,37,-374,37,-309,37,-402,37,37,-401,37,37,-299,37,37,-119,37,-492,-308,-207,37,-492,37,-310,37,37,37,-300,37,-431,37,-202,37,-120,-492,-307,-42,-41,37,37,37,37,-297,-115,-36,-35,37,37,-301,-203,-322,-304,-306,-305,-171,-298,-116,37,-296,-302,37,-295,37,]),'IOREDIRECT':([6,64,119,126,350,354,357,515,516,606,607,],[147,147,147,147,147,147,-447,-448,-449,147,-450,]),'XOREQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,266,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'TILDE':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[40,-287,40,134,40,-492,-492,40,-389,-291,40,-320,-382,-492,-154,-318,-201,-290,40,-390,-492,-385,40,40,40,40,-492,40,-137,-388,40,40,-292,40,-359,-293,134,40,-153,-286,40,-384,40,-394,-386,-200,40,-387,-319,-383,-294,-349,-151,40,-289,40,-372,-288,40,-373,-397,-395,-492,-470,134,-479,134,-487,-486,-482,-474,-484,-475,-473,40,-491,-472,-489,-488,-483,-481,-485,40,-476,-477,-478,-480,-490,134,-342,-339,-344,-341,-338,40,-346,-340,-343,40,40,-356,-135,-55,-56,-121,40,-363,-48,40,40,40,40,-47,-201,-152,-83,-354,40,-1,-2,-143,-78,40,-352,-77,-492,40,-371,-370,40,-377,40,-404,40,-141,-70,-405,-69,40,40,40,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,40,40,-360,40,-131,40,-224,40,-138,-396,-369,40,40,-348,-172,-303,-311,40,-350,-129,-167,-166,-168,-169,40,40,40,40,40,134,134,-393,-447,-471,-491,-347,-345,40,40,40,-357,-358,-136,-364,-122,-368,-367,-365,-366,40,-355,-84,40,40,-144,-353,-380,40,-378,40,-381,40,40,40,-142,-403,40,40,40,-379,-132,-362,-361,-392,-222,-391,-321,-208,40,40,-351,-130,40,40,-374,-448,-449,40,-309,40,-402,40,40,-401,40,40,-299,40,40,-119,40,-492,-308,-207,40,-492,40,134,-450,-310,40,40,40,-300,40,-431,40,-202,40,-120,-492,-307,-42,-41,40,40,40,40,-297,-115,-36,-35,40,40,-301,-203,-322,-304,-306,-305,-171,-298,-116,40,-296,-302,40,-295,40,]),'OR':([7,12,13,15,20,22,31,32,35,44,45,48,51,57,61,71,77,79,83,85,90,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,225,227,230,232,234,235,237,238,243,244,246,247,279,281,298,299,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,462,466,484,485,504,546,554,557,],[-492,-492,-492,-389,-382,-492,-390,-492,-385,228,-492,-492,-388,-335,-359,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-123,228,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-396,-369,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-392,-391,-351,-130,-374,-402,-401,-492,]),'AT_LPAREN':([6,64,119,126,350,354,357,515,516,606,607,],[135,135,135,135,135,135,-447,-448,-449,135,-450,]),'PIPE':([12,13,15,20,22,31,32,35,45,51,61,71,77,79,83,85,90,107,110,111,112,118,120,121,122,123,124,125,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,279,281,288,298,299,319,320,349,350,351,353,355,356,359,360,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,484,485,504,510,511,512,513,514,517,546,554,606,],[-492,-492,-389,-382,-492,-390,-492,-385,-492,-388,-359,-384,-394,-386,-387,-383,318,-372,-373,-397,-395,-470,-451,-479,-462,-461,-456,-459,-487,-486,-460,-482,-474,-484,-475,-473,-464,-463,-394,-472,-489,-488,-483,357,-481,-485,-465,-476,-477,-478,-480,-490,-458,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,357,-396,-369,318,-129,357,-452,357,-453,-393,515,-471,-491,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-351,-130,-374,-469,-457,-468,-466,-454,-467,-402,-401,-455,]),'WHILE':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,308,309,310,328,329,330,331,467,472,520,563,566,567,570,572,573,602,608,628,631,632,633,636,637,638,639,640,660,661,662,663,674,675,676,677,679,680,685,698,699,707,708,728,],[46,-287,46,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,-172,-303,-311,-167,-166,-168,-169,-321,-208,-309,-299,46,-119,-492,-308,-207,-492,-310,-300,-431,46,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-295,]),'LT':([6,7,12,13,15,20,22,31,32,35,45,51,61,64,71,77,79,83,85,90,107,110,111,112,119,126,163,164,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,279,281,298,299,319,320,350,354,355,357,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,484,485,504,515,516,546,554,557,606,607,],[137,158,-492,-492,-389,-382,-492,-390,-492,-385,-492,-388,-359,137,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,137,137,158,-113,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,-350,-129,137,137,-393,-447,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-351,-130,-374,-448,-449,-402,-401,158,137,-450,]),'CONTINUE':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[50,-287,50,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,50,50,-172,-303,-311,-167,-166,-168,-169,50,50,-321,-208,50,50,-309,-299,50,50,-119,-492,-308,-207,-492,-310,-300,50,-431,50,-202,50,-120,-492,-307,-42,-41,50,50,-297,-115,-36,-35,50,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,50,-295,]),'FALSE':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[51,-287,51,140,51,-492,-492,51,-389,-291,51,-320,-382,-492,-154,-318,-201,-290,51,-390,-492,-385,51,51,51,51,51,-492,51,-137,-388,51,51,-292,51,-359,-293,140,51,-153,-286,51,-384,51,-394,-386,-200,51,-387,-319,-383,-294,-349,-151,51,-289,51,-372,-288,51,-373,-397,-395,-492,-470,140,-479,140,-487,-486,-482,-474,-484,-475,-473,51,-491,-472,-489,-488,-483,-481,-485,51,-476,-477,-478,-480,-490,140,-342,-339,-344,-341,-338,51,-346,-340,-343,51,51,-356,-135,-55,-56,-121,51,-363,-48,51,51,51,51,-47,-201,-152,-83,-354,51,-1,-2,-143,-78,51,-352,-77,-492,51,-371,-370,51,-377,51,-404,51,-141,-70,-405,-69,51,51,51,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,51,51,-360,51,-131,51,-224,51,-138,-396,-369,51,51,-348,-172,-303,-311,51,-350,-129,-167,-166,-168,-169,51,51,51,51,51,140,140,-393,-447,-471,-491,-347,-345,51,51,51,-357,-358,-136,-364,-122,-368,-367,-365,-366,51,-355,-84,51,51,-144,-353,-380,51,-378,51,-381,51,51,51,-142,-403,51,51,51,-379,-132,-362,-361,-392,-222,-391,-321,-208,51,51,-351,-130,51,51,-374,-448,-449,51,-309,51,-402,51,51,-401,51,51,-299,51,51,-119,51,-492,-308,-207,51,-492,51,140,-450,-310,51,51,51,-300,51,-431,51,-202,51,-120,-492,-307,-42,-41,51,51,51,51,-297,-115,-36,-35,51,51,-301,-203,-322,-304,-306,-305,-171,-298,-116,51,-296,-302,51,-295,51,]),'PLUSEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,260,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'YIELD':([0,1,14,17,19,23,25,26,27,56,59,63,68,69,80,84,86,91,99,108,185,187,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[52,-287,52,-291,-320,-154,-318,-201,-290,-292,52,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,52,52,52,52,-172,-303,-311,-167,-166,-168,-169,52,52,-321,-208,52,52,-309,-299,52,52,-119,-492,-308,-207,-492,-310,-300,52,-431,52,-202,52,-120,-492,-307,-42,-41,52,52,-297,-115,-36,-35,52,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,52,-295,]),'FOR':([0,1,7,12,13,14,15,17,19,20,21,22,23,25,26,27,31,32,35,44,45,48,51,56,57,61,63,68,69,71,77,79,80,83,84,85,86,87,90,91,99,103,106,107,108,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,185,187,194,195,197,198,203,204,206,207,211,212,213,215,216,221,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,298,299,306,308,309,310,319,320,328,329,330,331,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,414,415,422,423,433,437,438,443,444,452,456,457,458,462,466,467,472,484,485,504,520,543,546,554,563,566,567,570,572,573,574,602,608,628,631,632,633,636,637,638,639,640,660,661,662,663,664,665,674,675,676,677,679,680,685,698,699,707,708,717,718,720,728,741,],[53,-287,-492,-492,-492,53,-389,-291,-320,-382,-226,-492,-154,-318,-201,-290,-390,-492,-385,-492,-492,-492,-388,-292,-335,-359,-293,-153,-286,-384,-394,-386,-200,-387,-319,-383,-294,53,-349,-151,-289,-325,-323,-372,-288,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-201,-152,-83,-354,-1,-2,-143,-78,-352,-77,-225,402,-492,402,402,-225,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-396,-369,-348,-172,-303,-311,-350,-129,-167,-166,-168,-169,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-421,-381,-124,-331,402,-142,-403,-86,-333,-379,-132,-362,-361,-392,-391,-321,-208,-351,-130,-374,-309,-420,-402,-401,-299,53,-119,-492,-308,-207,-328,-492,-310,-300,-431,53,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,-324,402,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-326,-327,402,-295,-329,]),'TIMES':([0,1,3,4,6,7,12,13,14,15,17,19,20,22,23,25,26,27,31,32,35,36,38,42,44,45,48,49,51,53,56,57,59,61,63,64,66,68,69,71,77,79,80,83,84,85,86,88,90,91,99,103,106,107,108,110,111,112,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,161,163,164,167,172,173,174,175,176,178,179,184,185,186,187,189,194,195,197,198,203,204,206,207,213,222,223,225,226,227,229,230,232,233,234,235,237,238,242,243,244,246,247,279,281,283,287,296,298,299,300,304,308,309,310,312,313,319,320,328,329,330,331,337,348,350,354,355,357,359,360,361,363,367,371,372,373,374,375,376,377,378,379,387,388,393,399,400,401,402,406,415,422,423,437,438,439,443,444,452,456,457,458,462,465,466,467,472,476,477,479,484,485,488,501,504,515,516,519,520,546,554,562,563,565,566,567,570,572,573,574,575,576,577,578,579,580,590,591,602,606,607,608,612,628,630,631,632,633,634,636,637,638,639,640,641,642,643,644,648,649,650,652,653,660,661,662,663,664,673,674,675,676,677,679,680,683,685,686,687,688,689,690,691,698,699,707,708,711,712,713,716,719,726,728,],[81,-287,81,81,144,-492,-492,177,81,-389,-291,-320,-382,-492,-154,-318,-201,-290,-390,-492,-385,81,81,-59,-492,-492,-492,-137,-388,81,-292,-335,81,-359,-293,144,-60,-153,-286,-384,-394,-386,-200,-387,-319,-383,-294,314,-349,-151,-289,-325,-323,-372,-288,-373,-397,-395,-470,144,-479,144,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,144,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,177,-47,-201,-59,-152,383,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-123,-330,-50,-49,-377,-404,435,-141,-70,-405,-69,-222,-85,-4,-332,-3,-360,-131,-224,81,-138,-396,-369,81,81,-172,-303,-311,-492,-196,-350,-129,-167,-166,-168,-169,-334,81,144,144,-393,-447,-471,-491,-337,-114,81,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,435,-144,-353,-380,81,-378,-381,-124,-331,-142,-403,81,-86,-333,-379,-132,-362,-361,-392,-222,-391,-321,-208,-38,-492,-37,-351,-130,593,81,-374,-448,-449,81,-309,-402,-401,435,-299,81,81,-119,-492,-308,-207,-328,-492,-27,-109,-197,-28,-174,-492,-492,-492,144,-450,-310,-223,-300,81,-431,81,-202,81,-120,-492,-307,-42,-41,81,682,-492,-110,81,-184,-10,-9,-492,-297,-115,-36,-35,-324,81,-301,-203,-322,-304,-306,-305,-198,-171,-183,-492,-26,-107,-25,-185,-298,-116,-296,-302,724,-108,-492,81,314,-186,-295,]),'RPAREN':([7,12,13,15,20,21,22,31,32,35,44,45,48,51,52,57,59,61,71,77,79,83,85,90,103,106,107,110,111,112,118,120,121,122,123,124,125,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,144,145,147,148,149,150,151,152,153,161,163,164,167,172,173,174,175,176,178,179,184,193,194,195,197,198,203,204,206,207,211,212,213,222,223,225,226,227,229,230,232,233,234,235,237,238,240,241,243,244,246,247,248,249,250,251,273,274,275,276,277,279,281,283,285,287,288,298,299,306,313,319,320,337,350,351,352,353,355,359,360,361,363,371,372,373,374,375,376,377,378,379,381,384,386,387,388,393,399,400,401,403,404,405,406,415,422,423,430,431,432,433,434,436,437,438,440,441,442,443,444,445,452,456,457,458,460,461,462,466,476,479,484,485,488,491,492,504,510,511,512,513,514,517,523,524,525,526,527,528,530,535,546,553,554,555,557,558,559,560,561,562,574,580,590,591,592,593,595,596,597,606,610,611,612,613,624,625,626,627,649,650,652,653,655,656,657,658,664,665,686,687,688,689,690,691,692,693,694,695,696,700,701,703,704,705,711,712,713,715,717,718,720,724,726,727,730,733,734,738,739,740,741,743,746,747,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-492,-388,-492,-335,-492,-359,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-470,-451,-479,-462,-461,-456,-459,-487,-486,-460,-482,-474,-484,-475,-473,-464,-463,-394,-472,-489,-488,-483,-481,-485,-465,-476,-477,-478,-480,-490,-458,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-419,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-492,-371,-370,-123,-330,-50,-49,-377,-404,-492,-141,-70,-405,-69,-417,-103,-85,-4,-332,-3,-80,-444,-446,-79,-376,-82,452,-375,-81,-360,-131,-224,-105,-223,462,-396,-369,-348,-196,-350,-129,-334,-452,512,513,-453,-393,-471,-491,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-492,-492,-418,-355,-84,-492,-144,-353,-380,-492,-398,-399,-378,-381,-124,-331,554,-6,-5,-225,-435,-492,-142,-403,-104,-416,-284,-86,-333,-445,-379,-132,-362,-361,-106,-227,-392,-391,-38,-37,-351,-130,-492,-7,-8,-374,-469,-457,-468,-466,-454,-467,609,-272,-14,-492,-95,-13,614,-400,-402,-438,-401,-436,-348,-439,-89,-492,-432,-223,-328,-174,-492,-492,654,-492,-72,-71,-271,-455,-96,-276,-223,-273,-437,-90,-433,-434,-184,-10,-9,-492,-492,-68,-67,-182,-324,-492,-183,-492,-26,-107,-25,-185,-181,-18,-185,-492,-17,-441,-30,-440,-442,-29,-175,-108,-492,-180,-326,-327,-492,-492,-186,-187,-443,-492,-179,-177,-26,-185,-329,-185,-176,-178,]),'EXCEPT':([467,469,472,567,570,573,636,676,677,],[-321,569,-208,-119,569,-207,-120,-322,-304,]),'PLUS':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[72,-287,72,149,72,-492,-492,72,-389,-291,72,-320,-382,-492,-154,-318,-201,-290,72,-390,-492,-385,72,72,72,72,-492,72,-137,-388,72,72,-292,72,282,-293,149,72,-153,-286,72,-384,72,-394,-386,-200,72,-387,-319,-383,-294,-349,-151,72,-289,72,-372,-288,72,-373,-397,-395,-492,-470,149,-479,149,-487,-486,-482,-474,-484,-475,-473,72,-491,-472,-489,-488,-483,-481,-485,72,-476,-477,-478,-480,-490,149,-342,-339,-344,-341,-338,72,-346,-340,-343,72,72,-356,-135,-55,-56,-121,72,-363,-48,72,72,72,72,-47,-201,-152,-83,-354,72,-1,-2,-143,-78,72,-352,-77,-492,72,-371,-370,72,-377,72,-404,72,-141,-70,-405,-69,72,72,72,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,72,72,282,72,-131,72,-224,72,-138,-396,-369,72,72,-348,-172,-303,-311,72,-350,-129,-167,-166,-168,-169,72,72,72,72,72,149,149,-393,-447,-471,-491,-347,-345,72,72,72,-357,-358,-136,-364,-122,-368,-367,-365,-366,72,-355,-84,72,72,-144,-353,-380,72,-378,72,-381,72,72,72,-142,-403,72,72,72,-379,-132,-362,-361,-392,-222,-391,-321,-208,72,72,-351,-130,72,72,-374,-448,-449,72,-309,72,-402,72,72,-401,72,72,-299,72,72,-119,72,-492,-308,-207,72,-492,72,149,-450,-310,72,72,72,-300,72,-431,72,-202,72,-120,-492,-307,-42,-41,72,72,72,72,-297,-115,-36,-35,72,72,-301,-203,-322,-304,-306,-305,-171,-298,-116,72,-296,-302,72,-295,72,]),'LBRACE':([0,1,4,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,135,146,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,355,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[38,-287,38,38,-492,-492,38,-389,-291,38,-320,-382,-492,-154,-318,-201,-290,38,-390,-492,-385,38,38,38,38,38,-492,38,-137,-388,38,38,-292,38,-359,-293,38,-153,-286,38,-384,38,-394,-386,-200,38,-387,-319,-383,-294,-349,-151,38,-289,38,-372,-288,38,-373,-397,-395,-492,38,38,-342,-339,-344,-341,-338,38,-346,-340,-343,38,38,-356,-135,-55,-56,-121,38,-363,-48,38,38,38,38,-47,-201,-152,-83,-354,38,-1,-2,-143,-78,38,-352,-77,-492,38,-371,-370,38,-377,38,-404,38,-141,-70,-405,-69,38,38,38,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,38,38,-360,38,-131,38,-224,38,-138,-396,-369,38,38,-348,-172,-303,-311,38,-350,-129,-167,-166,-168,-169,38,38,38,38,38,-393,-347,-345,38,38,38,-357,-358,-136,-364,-122,-368,-367,-365,-366,38,-355,-84,38,38,-144,-353,-380,38,-378,38,-381,38,38,38,-142,-403,38,38,38,-379,-132,-362,-361,-392,-222,-391,-321,-208,38,38,-351,-130,38,38,-374,38,-309,38,-402,38,38,-401,38,38,-299,38,38,-119,38,-492,-308,-207,38,-492,38,-310,38,38,38,-300,38,-431,38,-202,38,-120,-492,-307,-42,-41,38,38,38,38,-297,-115,-36,-35,38,38,-301,-203,-322,-304,-306,-305,-171,-298,-116,38,-296,-302,38,-295,38,]),'QUESTION':([15,20,31,35,45,51,71,77,79,83,85,111,112,213,232,234,235,237,298,355,401,415,437,438,452,462,466,546,554,],[-389,-382,-390,-385,237,-388,-384,-394,-386,-387,-383,-397,-395,237,-404,-141,237,-405,-396,-393,-380,-381,-142,-403,-379,-392,-391,-402,-401,]),'ELSE':([7,12,13,15,20,22,31,32,35,44,45,48,51,57,61,71,77,79,83,85,90,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,298,299,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,462,466,467,472,484,485,502,504,546,554,563,567,570,573,602,636,660,661,662,663,674,676,677,699,728,],[-492,-492,-492,-389,-382,-492,-390,-492,-385,-492,-492,-492,-388,-335,-359,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-396,-369,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-392,-391,-321,-208,-351,-130,603,-374,-402,-401,629,-119,629,-207,-492,-120,629,-115,-36,-35,629,-322,-304,-116,-295,]),'NUMBER':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[111,-287,111,152,111,-492,-492,111,-389,-291,111,-320,-382,-492,-154,-318,-201,-290,111,-390,-492,-385,111,111,111,111,111,-492,111,-137,-388,111,111,-292,111,-359,-293,152,111,-153,-286,111,-384,111,-394,-386,-200,111,-387,-319,-383,-294,-349,-151,111,-289,111,-372,-288,111,-373,-397,-395,-492,-470,152,-479,152,-487,-486,-482,-474,-484,-475,-473,111,-491,-472,-489,-488,-483,-481,-485,111,-476,-477,-478,-480,-490,152,-342,-339,-344,-341,-338,111,-346,-340,-343,111,111,-356,-135,-55,-56,-121,111,-363,-48,111,111,111,111,-47,-201,-152,-83,-354,111,-1,-2,-143,-78,111,-352,-77,-492,111,-371,-370,111,-377,111,-404,111,-141,-70,-405,-69,111,111,111,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,111,111,-360,111,-131,111,-224,111,-138,-396,-369,111,111,-348,-172,-303,-311,111,-350,-129,-167,-166,-168,-169,111,111,111,111,111,152,152,-393,-447,-471,-491,-347,-345,111,111,111,-357,-358,-136,-364,-122,-368,-367,-365,-366,111,-355,-84,111,111,-144,-353,-380,111,-378,111,-381,111,111,111,-142,-403,111,111,111,-379,-132,-362,-361,-392,-222,-391,-321,-208,111,111,-351,-130,111,111,-374,-448,-449,111,-309,111,-402,111,111,-401,111,111,-299,111,111,-119,111,-492,-308,-207,111,-492,111,152,-450,-310,111,111,111,-300,111,-431,111,-202,111,-120,-492,-307,-42,-41,111,111,111,111,-297,-115,-36,-35,111,111,-301,-203,-322,-304,-306,-305,-171,-298,-116,111,-296,-302,111,-295,111,]),'LPAREN':([0,1,4,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,135,146,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,189,194,195,196,197,198,201,202,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,278,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,326,328,329,330,331,339,341,343,344,348,355,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,396,397,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,519,520,532,533,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[59,-287,59,59,-492,-492,59,-389,-291,59,-320,-382,-492,-154,-318,-201,-290,59,-390,-492,-385,59,59,59,59,59,233,59,-137,-388,59,59,-292,59,-359,-293,59,-153,-286,59,-384,59,-394,-386,-200,59,-387,-319,-383,-294,-349,-151,59,-289,59,-372,-288,59,-373,-397,-395,-492,59,59,-342,-339,-344,-341,-338,59,-346,-340,-343,59,59,-356,-135,-55,-56,-121,59,-363,-48,59,59,59,59,-47,-201,-152,380,-83,-354,59,-1,-2,393,-160,-143,-78,59,-352,-77,233,59,-371,-370,59,-377,59,-404,59,-141,233,-405,-69,59,59,59,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,59,59,393,-360,59,-131,59,-224,59,-138,-396,-369,59,59,-348,-172,-303,-311,59,-350,-129,488,-167,-166,-168,-169,59,59,59,59,59,-393,-347,-345,59,59,59,-357,-358,-136,-364,-122,-368,-367,-365,-366,59,-355,-84,59,59,-87,-161,-144,-353,-380,59,-378,59,-381,59,59,59,-142,-403,59,59,59,-379,-132,-362,-361,-392,-222,-391,-321,-208,59,59,-351,-130,59,59,-374,59,-309,-88,-159,59,-402,59,59,-401,59,59,-299,59,59,-119,59,-492,-308,-207,59,-492,59,-310,59,59,59,-300,59,-431,59,-202,59,-120,-492,-307,-42,-41,59,59,59,59,-297,-115,-36,-35,59,59,-301,-203,-322,-304,-306,-305,-171,-298,-116,59,-296,-302,59,-295,59,]),'CLASS':([0,1,2,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,95,99,108,185,187,308,309,310,327,328,329,330,331,394,467,472,520,531,563,566,567,570,572,573,602,608,628,631,632,633,636,637,638,639,640,660,661,662,663,674,675,676,677,679,680,685,698,699,707,708,728,],[60,-287,-164,60,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,60,-289,-288,-201,-152,-172,-303,-311,-165,-167,-166,-168,-169,-162,-321,-208,-309,-163,-299,60,-119,-492,-308,-207,-492,-310,-300,-431,60,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-295,]),'GT':([6,7,12,13,15,20,22,31,32,35,45,51,61,64,71,77,79,83,85,90,107,110,111,112,119,126,163,164,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,279,281,298,299,319,320,350,354,355,357,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,484,485,504,515,516,546,554,557,606,607,],[122,155,-492,-492,-389,-382,-492,-390,-492,-385,-492,-388,-359,122,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,122,122,155,-113,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,-350,-129,122,122,-393,-447,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-351,-130,-374,-448,-449,-402,-401,155,122,-450,]),'AMPERSAND':([12,13,15,20,22,31,35,45,51,61,71,77,79,83,85,107,110,111,112,118,120,121,122,123,124,125,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,143,144,145,147,148,149,150,151,152,153,172,173,174,175,176,178,179,184,194,198,213,222,223,230,232,234,235,237,238,279,281,288,298,299,349,350,351,353,355,359,360,371,372,373,374,375,376,377,378,379,387,388,401,406,415,437,438,452,456,457,458,462,466,504,510,511,512,513,514,517,546,554,606,],[-492,-492,-389,-382,196,-390,-385,-492,-388,-359,-384,-394,-386,-387,-383,-372,-373,-397,-395,-470,-451,-479,-462,-461,-456,-459,-487,-486,-460,-482,-474,-484,-475,-473,-464,-463,-394,-472,-489,-488,-483,353,-481,-485,-465,-476,-477,-478,-480,-490,-458,-356,-135,-55,-56,-121,-363,-48,-47,-83,196,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,353,-396,-369,353,-452,353,-453,-393,-471,-491,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-374,-469,-457,-468,-466,-454,-467,-402,-401,-455,]),'RETURN':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[18,-287,18,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,18,18,-172,-303,-311,-167,-166,-168,-169,18,18,-321,-208,18,18,-309,-299,18,18,-119,-492,-308,-207,-492,-310,-300,18,-431,18,-202,18,-120,-492,-307,-42,-41,18,18,-297,-115,-36,-35,18,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,18,-295,]),'AS':([7,12,13,15,20,22,31,32,35,44,45,48,51,57,61,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,169,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,298,299,319,320,333,336,337,355,361,363,371,372,373,374,375,376,377,378,379,381,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,462,466,484,485,498,499,504,546,554,574,600,601,635,664,],[-492,-492,-492,-389,-382,-492,-390,-492,-385,-492,-492,-492,-388,-335,-359,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,370,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-396,-369,-350,-129,489,-279,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,489,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-392,-391,-351,-130,-125,-280,-374,-402,-401,-328,-126,-278,489,-324,]),'AT':([0,1,2,6,13,14,15,17,19,20,23,25,26,27,31,35,45,51,56,63,64,68,69,71,77,79,80,83,84,85,86,91,95,99,107,108,110,111,112,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,176,179,185,187,213,222,223,230,232,234,235,237,238,298,299,308,309,310,327,328,329,330,331,350,354,355,357,359,360,374,375,376,377,378,379,394,401,406,415,437,438,452,462,466,467,472,504,515,516,520,531,546,554,563,566,567,570,572,573,602,606,607,608,628,631,632,633,636,637,638,639,640,660,661,662,663,674,675,676,677,679,680,685,698,699,707,708,728,],[29,-287,-164,121,182,29,-389,-291,-320,-382,-154,-318,-201,-290,-390,-385,-492,-388,-292,-293,121,-153,-286,-384,-394,-386,-200,-387,-319,-383,-294,-151,29,-289,-372,-288,-373,-397,-395,-470,121,-479,121,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,121,-121,182,-201,-152,-492,-371,-370,-377,-404,-141,-70,-405,-69,-396,-369,-172,-303,-311,-165,-167,-166,-168,-169,121,121,-393,-447,-471,-491,-364,-122,-368,-367,-365,-366,-162,-380,-378,-381,-142,-403,-379,-392,-391,-321,-208,-374,-448,-449,-309,-163,-402,-401,-299,29,-119,-492,-308,-207,-492,121,-450,-310,-300,-431,29,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-295,]),'DOLLAR_LPAREN':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,119,126,135,146,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[64,-287,64,126,64,-492,-492,64,-389,-291,64,-320,-382,-492,-154,-318,-201,-290,64,-390,-492,-385,64,64,64,64,64,-492,64,-137,-388,64,64,-292,64,-359,-293,126,64,-153,-286,64,-384,64,-394,-386,-200,64,-387,-319,-383,-294,-349,-151,64,-289,64,-372,-288,64,-373,-397,-395,-492,126,126,64,64,-342,-339,-344,-341,-338,64,-346,-340,-343,64,64,-356,-135,-55,-56,-121,64,-363,-48,64,64,64,64,-47,-201,-152,-83,-354,64,-1,-2,-143,-78,64,-352,-77,-492,64,-371,-370,64,-377,64,-404,64,-141,-70,-405,-69,64,64,64,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,64,64,-360,64,-131,64,-224,64,-138,-396,-369,64,64,-348,-172,-303,-311,64,-350,-129,-167,-166,-168,-169,64,64,64,64,64,126,126,-393,-447,-347,-345,64,64,64,-357,-358,-136,-364,-122,-368,-367,-365,-366,64,-355,-84,64,64,-144,-353,-380,64,-378,64,-381,64,64,64,-142,-403,64,64,64,-379,-132,-362,-361,-392,-222,-391,-321,-208,64,64,-351,-130,64,64,-374,-448,-449,64,-309,64,-402,64,64,-401,64,64,-299,64,64,-119,64,-492,-308,-207,64,-492,64,126,-450,-310,64,64,64,-300,64,-431,64,-202,64,-120,-492,-307,-42,-41,64,64,64,64,-297,-115,-36,-35,64,64,-301,-203,-322,-304,-306,-305,-171,-298,-116,64,-296,-302,64,-295,64,]),'ELIF':([467,472,573,602,661,662,676,699,728,],[-321,-208,-207,659,-115,659,-322,-116,-295,]),'EQ':([7,12,13,15,20,22,31,32,35,45,51,61,71,77,79,83,85,90,107,110,111,112,163,164,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,279,281,298,299,319,320,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,484,485,504,546,554,557,],[162,-492,-492,-389,-382,-492,-390,-492,-385,-492,-388,-359,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,162,-113,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,-350,-129,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-351,-130,-374,-402,-401,162,]),'NE':([7,12,13,15,20,22,31,32,35,45,51,61,71,77,79,83,85,90,107,110,111,112,163,164,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,279,281,298,299,319,320,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,484,485,504,546,554,557,],[166,-492,-492,-389,-382,-492,-390,-492,-385,-492,-388,-359,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,166,-113,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,-350,-129,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-351,-130,-374,-402,-401,166,]),'NEWLINE':([0,1,5,7,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,35,44,45,47,48,50,51,52,54,55,56,57,58,61,62,63,67,68,69,71,75,76,77,78,79,80,83,84,85,86,89,90,91,92,94,99,100,101,102,103,104,106,107,108,109,110,111,112,114,115,116,117,161,163,164,167,172,173,174,175,176,178,179,184,185,187,188,190,191,192,193,194,195,197,198,200,201,202,203,204,206,207,211,213,222,223,224,225,226,227,229,230,232,234,235,237,238,240,241,242,243,244,246,247,248,249,250,251,257,263,264,265,279,281,283,284,285,286,287,298,299,300,301,302,303,304,305,306,307,308,309,310,319,320,321,322,323,325,328,329,330,331,333,334,335,336,337,340,345,346,347,348,355,361,363,367,371,372,373,374,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,395,396,397,399,400,401,406,415,417,418,419,420,422,423,437,438,439,440,441,442,443,444,445,447,448,449,450,451,452,456,457,458,459,460,461,462,466,467,470,471,472,473,474,484,485,486,490,491,492,493,494,495,496,498,499,501,504,505,507,508,509,519,520,524,525,526,527,528,532,533,544,545,546,554,563,565,567,570,572,573,574,597,598,599,600,601,602,604,605,608,609,610,611,612,613,614,628,630,631,634,636,637,638,639,640,641,648,660,661,662,663,664,673,674,676,677,679,680,685,698,699,707,708,716,728,],[68,-287,-252,-492,-249,-256,-251,-492,-492,68,-389,-291,-492,-320,-382,-226,-492,-154,-260,-318,199,-290,-214,-390,-492,-248,-385,-492,-492,-225,-492,-254,-388,-492,-210,-213,-292,-335,-492,-359,-492,-293,-209,-153,-286,-384,-247,-492,-394,-211,-386,-200,-387,-319,-383,-294,-253,-349,-151,323,-261,-289,-250,-216,-212,-325,-215,-323,-372,-288,-257,-373,-397,-395,-246,-492,-411,-412,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-201,-152,-492,-255,-66,-65,-419,-83,-354,-1,-2,-492,394,-160,-143,-78,-352,-77,-225,-492,-371,-370,-492,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-417,-103,-418,-85,-4,-332,-3,-80,-444,-446,-79,-218,-117,-39,-40,-360,-131,-224,-229,-105,-492,-223,-396,-369,468,-492,-133,472,-204,-205,-348,-492,-172,-303,-311,-350,-129,486,-219,-155,-39,-167,-166,-168,-169,-492,-492,-262,-279,-334,-258,-492,-415,-93,-223,-393,-337,-114,468,-357,-358,-136,-364,-122,-368,-367,-365,-366,-492,-268,-265,-492,-267,-418,-355,-84,-24,-285,-23,531,-87,-161,-144,-353,-380,-378,-381,-99,-282,-16,-15,-124,-331,-142,-403,468,-104,-416,-284,-86,-333,-445,-118,-245,-243,-244,-217,-379,-132,-362,-361,-228,-106,-227,-392,-391,-321,-134,573,-208,-206,-283,-351,-130,-156,-274,-7,-8,-91,-12,-277,-11,-125,-280,468,-374,-220,-414,-94,-413,468,-309,-272,-14,-492,-95,-13,-88,-159,-100,-281,-402,-401,-299,468,-119,-492,-308,-207,-328,-271,-92,-275,-126,-278,-492,-259,-221,-310,-266,-96,-276,-223,-273,-158,-300,468,-431,468,-120,-492,-307,-42,-41,468,468,-297,-115,-36,-35,-324,468,-301,-322,-304,-306,-305,-171,-298,-116,-296,-302,468,-295,]),'ASYNC':([0,1,2,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,95,99,108,185,187,308,309,310,327,328,329,330,331,394,467,472,520,531,563,566,567,570,572,573,602,608,628,631,632,633,636,637,638,639,640,660,661,662,663,674,675,676,677,679,680,685,698,699,707,708,728,],[87,-287,-164,87,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,332,-289,-288,-201,-152,-172,-303,-311,-165,-167,-166,-168,-169,-162,-321,-208,-309,-163,-299,87,-119,-492,-308,-207,-492,-310,-300,-431,87,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-295,]),'LSHIFT':([12,13,15,20,31,35,45,51,61,71,77,79,83,85,107,110,111,112,173,175,176,178,179,184,213,222,223,230,232,234,235,237,238,279,281,298,299,355,371,372,373,374,375,376,377,378,379,401,406,415,437,438,452,456,457,458,462,466,504,546,554,],[170,-492,-389,-382,-390,-385,-492,-388,-359,-384,-394,-386,-387,-383,-372,-373,-397,-395,-135,170,-121,-363,-48,-47,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,-393,-357,-358,-136,-364,-122,-368,-367,-365,-366,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-374,-402,-401,]),'IS':([7,12,13,15,20,22,31,32,35,45,51,61,71,77,79,83,85,90,107,110,111,112,163,164,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,279,281,298,299,319,320,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,484,485,504,546,554,557,],[160,-492,-492,-389,-382,-492,-390,-492,-385,-492,-388,-359,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,160,-113,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,-360,-131,-396,-369,-350,-129,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-351,-130,-374,-402,-401,160,]),'TRY':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,308,309,310,328,329,330,331,467,472,520,563,566,567,570,572,573,602,608,628,631,632,633,636,637,638,639,640,660,661,662,663,674,675,676,677,679,680,685,698,699,707,708,728,],[73,-287,73,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,-172,-303,-311,-167,-166,-168,-169,-321,-208,-309,-299,73,-119,-492,-308,-207,-492,-310,-300,-431,73,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-295,]),'IN':([7,12,13,15,20,22,31,32,35,45,51,61,71,77,79,83,85,90,107,110,111,112,115,116,117,163,164,165,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,253,279,281,283,298,299,306,319,320,345,346,347,348,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,452,456,457,458,462,466,484,485,504,507,508,509,534,546,554,557,],[156,-492,-492,-389,-382,-492,-390,-492,-385,-492,-388,-359,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,-492,-411,-412,156,-113,364,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,446,-360,-131,-224,-396,-369,-348,-350,-129,-492,-415,-93,-223,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-379,-132,-362,-361,-392,-391,-351,-130,-374,-414,-94,-413,615,-402,-401,156,]),'PASS':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[75,-287,75,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,75,75,-172,-303,-311,-167,-166,-168,-169,75,75,-321,-208,75,75,-309,-299,75,75,-119,-492,-308,-207,-492,-310,-300,75,-431,75,-202,75,-120,-492,-307,-42,-41,75,75,-297,-115,-36,-35,75,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,75,-295,]),'GLOBAL':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[43,-287,43,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,43,43,-172,-303,-311,-167,-166,-168,-169,43,43,-321,-208,43,43,-309,-299,43,43,-119,-492,-308,-207,-492,-310,-300,43,-431,43,-202,43,-120,-492,-307,-42,-41,43,43,-297,-115,-36,-35,43,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,43,-295,]),'NONE':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[79,-287,79,127,79,-492,-492,79,-389,-291,79,-320,-382,-492,-154,-318,-201,-290,79,-390,-492,-385,79,79,79,79,79,-492,79,-137,-388,79,79,-292,79,-359,-293,127,79,-153,-286,79,-384,79,-394,-386,-200,79,-387,-319,-383,-294,-349,-151,79,-289,79,-372,-288,79,-373,-397,-395,-492,-470,127,-479,127,-487,-486,-482,-474,-484,-475,-473,79,-491,-472,-489,-488,-483,-481,-485,79,-476,-477,-478,-480,-490,127,-342,-339,-344,-341,-338,79,-346,-340,-343,79,79,-356,-135,-55,-56,-121,79,-363,-48,79,79,79,79,-47,-201,-152,-83,-354,79,-1,-2,-143,-78,79,-352,-77,-492,79,-371,-370,79,-377,79,-404,79,-141,-70,-405,-69,79,79,79,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,79,79,-360,79,-131,79,-224,79,-138,-396,-369,79,79,-348,-172,-303,-311,79,-350,-129,-167,-166,-168,-169,79,79,79,79,79,127,127,-393,-447,-471,-491,-347,-345,79,79,79,-357,-358,-136,-364,-122,-368,-367,-365,-366,79,-355,-84,79,79,-144,-353,-380,79,-378,79,-381,79,79,79,-142,-403,79,79,79,-379,-132,-362,-361,-392,-222,-391,-321,-208,79,79,-351,-130,79,79,-374,-448,-449,79,-309,79,-402,79,79,-401,79,79,-299,79,79,-119,79,-492,-308,-207,79,-492,79,127,-450,-310,79,79,79,-300,79,-431,79,-202,79,-120,-492,-307,-42,-41,79,79,79,79,-297,-115,-36,-35,79,79,-301,-203,-322,-304,-306,-305,-171,-298,-116,79,-296,-302,79,-295,79,]),'NONLOCAL':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[82,-287,82,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,82,82,-172,-303,-311,-167,-166,-168,-169,82,82,-321,-208,82,82,-309,-299,82,82,-119,-492,-308,-207,-492,-310,-300,82,-431,82,-202,82,-120,-492,-307,-42,-41,82,82,-297,-115,-36,-35,82,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,82,-295,]),'FINALLY':([467,469,472,567,570,573,636,637,676,677,707,],[-321,571,-208,-119,571,-207,-120,571,-322,-304,-296,]),'DOLLAR_LBRACE':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,119,126,135,146,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[70,-287,70,146,70,-492,-492,70,-389,-291,70,-320,-382,-492,-154,-318,-201,-290,70,-390,-492,-385,70,70,70,70,70,-492,70,-137,-388,70,70,-292,70,-359,-293,146,70,-153,-286,70,-384,70,-394,-386,-200,70,-387,-319,-383,-294,-349,-151,70,-289,70,-372,-288,70,-373,-397,-395,-492,146,146,70,70,-342,-339,-344,-341,-338,70,-346,-340,-343,70,70,-356,-135,-55,-56,-121,70,-363,-48,70,70,70,70,-47,-201,-152,-83,-354,70,-1,-2,-143,-78,70,-352,-77,-492,70,-371,-370,70,-377,70,-404,70,-141,-70,-405,-69,70,70,70,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,70,70,-360,70,-131,70,-224,70,-138,-396,-369,70,70,-348,-172,-303,-311,70,-350,-129,-167,-166,-168,-169,70,70,70,70,70,146,146,-393,-447,-347,-345,70,70,70,-357,-358,-136,-364,-122,-368,-367,-365,-366,70,-355,-84,70,70,-144,-353,-380,70,-378,70,-381,70,70,70,-142,-403,70,70,70,-379,-132,-362,-361,-392,-222,-391,-321,-208,70,70,-351,-130,70,70,-374,-448,-449,70,-309,70,-402,70,70,-401,70,70,-299,70,70,-119,70,-492,-308,-207,70,-492,70,146,-450,-310,70,70,70,-300,70,-431,70,-202,70,-120,-492,-307,-42,-41,70,70,70,70,-297,-115,-36,-35,70,70,-301,-203,-322,-304,-306,-305,-171,-298,-116,70,-296,-302,70,-295,70,]),'PERIOD':([6,15,20,31,35,45,51,64,65,71,77,79,83,85,111,112,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,202,213,232,234,235,237,290,291,292,294,298,336,350,354,355,357,359,360,396,397,401,415,437,438,452,462,464,466,498,499,515,516,532,533,546,554,600,601,606,607,],[131,-389,-382,-390,-385,236,-388,131,292,-384,-394,-386,-387,-383,-397,-395,-470,131,-479,131,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,131,398,236,-404,-141,236,-405,-127,292,-269,-270,-396,500,131,131,-393,-447,-471,-491,-87,398,-380,-381,-142,-403,-379,-392,-128,-391,-125,500,-448,-449,-88,-159,-402,-401,-126,-278,131,-450,]),'MINUS':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[41,-287,41,148,41,-492,-492,41,-389,-291,41,-320,-382,-492,-154,-318,-201,-290,41,-390,-492,-385,41,41,41,41,-492,41,-137,-388,41,41,-292,41,280,-293,148,41,-153,-286,41,-384,41,-394,-386,-200,41,-387,-319,-383,-294,-349,-151,41,-289,41,-372,-288,41,-373,-397,-395,-492,-470,148,-479,148,-487,-486,-482,-474,-484,-475,-473,41,-491,-472,-489,-488,-483,-481,-485,41,-476,-477,-478,-480,-490,148,-342,-339,-344,-341,-338,41,-346,-340,-343,41,41,-356,-135,-55,-56,-121,41,-363,-48,41,41,41,41,-47,-201,-152,-83,-354,41,-1,-2,-143,-78,41,-352,-77,-492,41,-371,-370,41,-377,41,-404,41,-141,-70,-405,-69,41,41,41,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,41,41,280,41,-131,41,-224,41,-138,-396,-369,41,41,-348,-172,-303,-311,41,-350,-129,-167,-166,-168,-169,41,41,41,41,41,148,148,-393,-447,-471,-491,-347,-345,41,41,41,-357,-358,-136,-364,-122,-368,-367,-365,-366,41,-355,-84,41,41,-144,-353,-380,41,-378,41,-381,41,41,41,-142,-403,41,41,41,-379,-132,-362,-361,-392,-222,-391,-321,-208,41,41,-351,-130,41,41,-374,-448,-449,41,-309,41,-402,41,41,-401,41,41,-299,41,41,-119,41,-492,-308,-207,41,-492,41,148,-450,-310,41,41,41,-300,41,-431,41,-202,41,-120,-492,-307,-42,-41,41,41,41,41,-297,-115,-36,-35,41,41,-301,-203,-322,-304,-306,-305,-171,-298,-116,41,-296,-302,41,-295,41,]),'EQUALS':([6,7,12,13,15,20,21,22,31,32,35,44,45,47,48,49,51,52,57,58,61,62,64,66,71,77,79,83,85,90,92,103,106,107,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,161,163,164,167,172,173,174,175,176,178,179,184,186,188,193,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,240,241,242,243,244,246,247,248,249,250,251,263,265,279,281,283,284,285,286,287,296,298,299,306,312,313,319,320,337,342,343,344,350,354,355,357,359,360,361,363,371,372,373,374,375,376,377,378,379,386,387,388,399,400,401,406,415,422,423,433,437,438,440,441,442,443,444,445,447,448,449,450,452,456,457,458,459,460,461,462,465,466,484,485,504,506,515,516,546,554,574,590,591,606,607,643,649,650,652,664,686,713,],[151,-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-137,-388,-492,-335,271,-359,-492,151,-60,-384,-394,-386,-387,-383,-349,271,-325,-323,-372,-373,-397,-395,-492,-470,151,-479,151,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,151,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-59,271,-419,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-417,-103,-418,-85,-4,-332,-3,-80,-444,-446,-79,-117,271,-360,-131,-224,-229,-105,-492,-223,-138,-396,-369,-348,478,-196,-350,-129,-334,271,-223,-492,151,151,-393,-447,-471,-491,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-418,-355,-84,-144,-353,-380,-378,-381,-124,-331,556,-142,-403,-104,-416,-284,-86,-333,-445,-118,-245,-243,-244,-379,-132,-362,-361,-228,-106,-227,-392,-222,-391,-351,-130,-374,271,-448,-449,-402,-401,-328,-492,478,151,-450,478,-184,-10,-9,-324,-183,478,]),'RSHIFTEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,256,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'LAMBDA':([0,1,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,38,45,46,49,51,52,56,59,61,63,66,68,69,70,71,77,79,80,83,84,85,86,90,91,99,105,107,108,109,110,111,112,113,135,146,172,173,174,175,176,178,179,184,185,187,194,195,197,198,203,204,206,207,213,222,223,230,231,232,233,234,235,237,238,242,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,281,283,287,296,298,299,300,304,306,308,309,310,319,320,328,329,330,331,343,344,355,367,368,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,608,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[88,-287,88,-492,-492,88,-389,-291,88,-320,-382,-492,-154,-318,-201,-290,88,-390,-492,-385,88,88,-492,88,-137,-388,88,-292,88,-359,-293,88,-153,-286,88,-384,-394,-386,-200,-387,-319,-383,-294,-349,-151,-289,88,-372,-288,88,-373,-397,-395,-492,88,88,-356,-135,-55,-56,-121,-363,-48,-47,-201,-152,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,88,-404,88,-141,-70,-405,-69,88,88,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,88,88,-360,-131,-224,88,-138,-396,-369,88,88,-348,-172,-303,-311,-350,-129,-167,-166,-168,-169,88,88,-393,88,88,-357,-358,-136,-364,-122,-368,-367,-365,-366,88,-355,-84,88,88,-144,-353,-380,-378,88,-381,88,88,88,-142,-403,88,88,88,-379,-132,-362,-361,-392,-222,-391,-321,-208,88,88,-351,-130,88,88,-374,88,-309,88,-402,88,88,-401,88,88,-299,88,88,-119,88,-492,-308,-207,88,-492,88,-310,88,88,-300,88,-431,88,-202,88,-120,-492,-307,-42,-41,88,88,88,88,-297,-115,-36,-35,88,88,-301,-203,-322,-304,-306,-305,-171,-298,-116,719,-296,-302,88,-295,719,]),'BREAK':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[89,-287,89,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,89,89,-172,-303,-311,-167,-166,-168,-169,89,89,-321,-208,89,89,-309,-299,89,89,-119,-492,-308,-207,-492,-310,-300,89,-431,89,-202,89,-120,-492,-307,-42,-41,89,89,-297,-115,-36,-35,89,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,89,-295,]),'AND':([7,12,13,15,20,22,31,32,35,45,48,51,57,61,71,77,79,83,85,90,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,213,222,223,230,232,234,235,237,238,243,244,279,281,298,299,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,437,438,443,444,452,456,457,458,462,466,484,485,504,546,554,557,],[-492,-492,-492,-389,-382,-492,-390,-492,-385,-492,245,-388,-335,-359,-384,-394,-386,-387,-383,-349,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-377,-404,-141,-70,-405,-69,-85,245,-360,-131,-396,-369,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-142,-403,-86,-333,-379,-132,-362,-361,-392,-391,-351,-130,-374,-402,-401,-492,]),'MOD':([6,13,15,20,31,35,45,51,64,71,77,79,83,85,107,110,111,112,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,176,179,213,222,223,230,232,234,235,237,238,298,299,350,354,355,357,359,360,374,375,376,377,378,379,401,406,415,437,438,452,462,466,504,515,516,546,554,606,607,],[142,181,-389,-382,-390,-385,-492,-388,142,-384,-394,-386,-387,-383,-372,-373,-397,-395,-470,142,-479,142,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,142,-121,181,-492,-371,-370,-377,-404,-141,-70,-405,-69,-396,-369,142,142,-393,-447,-471,-491,-364,-122,-368,-367,-365,-366,-380,-378,-381,-142,-403,-379,-392,-391,-374,-448,-449,-402,-401,142,-450,]),'NOT':([0,1,7,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,38,45,46,49,51,52,56,59,61,63,66,68,69,70,71,77,79,80,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,135,146,160,163,164,172,173,174,175,176,178,179,184,185,187,194,195,197,198,203,204,206,207,213,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,281,283,287,296,298,299,300,304,306,308,309,310,319,320,328,329,330,331,339,343,344,355,361,363,367,368,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,519,520,539,546,547,552,554,556,557,562,563,565,566,567,569,570,572,573,587,602,603,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[98,-287,165,98,-492,-492,98,-389,-291,98,-320,-382,-492,-154,-318,-201,-290,98,-390,-492,-385,98,98,-492,98,-137,-388,98,-292,98,-359,-293,98,-153,-286,98,-384,-394,-386,-200,-387,-319,-383,-294,-349,-151,98,-289,98,-372,-288,98,-373,-397,-395,-492,98,98,362,165,-113,-356,-135,-55,-56,-121,-363,-48,-47,-201,-152,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,98,-377,98,-404,98,-141,-70,-405,-69,98,98,98,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,98,98,-360,-131,-224,98,-138,-396,-369,98,98,-348,-172,-303,-311,-350,-129,-167,-166,-168,-169,98,98,98,-393,-337,-114,98,98,-357,-358,-136,-364,-122,-368,-367,-365,-366,98,-355,-84,98,98,-144,-353,-380,-378,98,-381,98,98,98,-142,-403,98,98,98,-379,-132,-362,-361,-392,-222,-391,-321,-208,98,98,-351,-130,98,98,-374,98,-309,98,-402,98,98,-401,98,165,98,-299,98,98,-119,98,-492,-308,-207,98,-492,98,-310,98,98,98,-300,98,-431,98,-202,98,-120,-492,-307,-42,-41,98,98,98,98,-297,-115,-36,-35,98,98,-301,-203,-322,-304,-306,-305,-171,-298,-116,98,-296,-302,98,-295,98,]),'ATEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,255,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'PIPEEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,261,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'AMPERSANDEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,262,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'DEF':([0,1,2,14,17,19,23,25,26,27,56,63,68,69,80,84,86,87,91,95,99,108,185,187,308,309,310,327,328,329,330,331,332,394,467,472,520,531,563,566,567,570,572,573,602,608,628,631,632,633,636,637,638,639,640,660,661,662,663,674,675,676,677,679,680,685,698,699,707,708,728,],[93,-287,-164,93,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,93,-151,93,-289,-288,-201,-152,-172,-303,-311,-165,-167,-166,-168,-169,93,-162,-321,-208,-309,-163,-299,93,-119,-492,-308,-207,-492,-310,-300,-431,93,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-295,]),'LSHIFTEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,269,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'IMPORT':([0,1,14,16,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,290,291,292,294,300,304,308,309,310,328,329,330,331,336,367,439,463,464,467,472,498,499,501,519,520,563,565,566,567,570,572,573,600,601,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[96,-287,96,189,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,-127,-264,-269,-270,96,96,-172,-303,-311,-167,-166,-168,-169,-279,96,96,-263,-128,-321,-208,-125,-280,96,96,-309,-299,96,96,-119,-492,-308,-207,-126,-278,-492,-310,-300,96,-431,96,-202,96,-120,-492,-307,-42,-41,96,96,-297,-115,-36,-35,96,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,96,-295,]),'DIVIDE':([6,13,15,20,31,35,45,51,64,71,77,79,83,85,107,110,111,112,118,119,121,126,127,128,130,131,132,133,134,138,139,140,141,142,144,145,148,149,150,151,152,153,176,179,213,222,223,230,232,234,235,237,238,298,299,350,354,355,357,359,360,374,375,376,377,378,379,401,406,415,437,438,452,462,466,504,515,516,546,554,606,607,],[133,183,-389,-382,-390,-385,-492,-388,133,-384,-394,-386,-387,-383,-372,-373,-397,-395,-470,133,-479,133,-487,-486,-482,-474,-484,-475,-473,-491,-472,-489,-488,-483,-481,-485,-476,-477,-478,-480,-490,133,-121,183,-492,-371,-370,-377,-404,-141,-70,-405,-69,-396,-369,133,133,-393,-447,-471,-491,-364,-122,-368,-367,-365,-366,-380,-378,-381,-142,-403,-379,-392,-391,-374,-448,-449,-402,-401,133,-450,]),'IF':([0,1,7,12,13,14,15,17,19,20,22,23,25,26,27,31,32,35,44,45,48,51,56,57,61,63,68,69,71,77,79,80,83,84,85,86,90,91,99,106,107,108,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,185,187,194,195,197,198,203,204,206,207,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,298,299,308,309,310,319,320,328,329,330,331,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,462,466,467,472,484,485,504,520,546,554,557,563,566,567,570,572,573,602,608,628,631,632,633,636,637,638,639,640,660,661,662,663,665,674,675,676,677,679,680,685,698,699,707,708,717,718,720,728,741,],[105,-287,-492,-492,-492,105,-389,-291,-320,-382,-492,-154,-318,-201,-290,-390,-492,-385,-492,-492,-492,-388,-292,-335,-359,-293,-153,-286,-384,-394,-386,-200,-387,-319,-383,-294,-349,-151,-289,339,-372,-288,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-201,-152,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-396,-369,-172,-303,-311,-350,-129,-167,-166,-168,-169,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-392,-391,-321,-208,-351,-130,-374,-309,-402,-401,-492,-299,105,-119,-492,-308,-207,-492,-310,-300,-431,105,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,702,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-326,-327,702,-295,-329,]),'TIMESEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,268,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'FROM':([0,1,7,12,13,14,15,17,19,20,22,23,25,26,27,31,32,35,44,45,48,51,52,56,57,61,63,68,69,71,77,79,80,83,84,85,86,90,91,99,103,106,107,108,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,185,187,194,195,197,198,203,204,206,207,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,298,299,300,304,308,309,310,319,320,328,329,330,331,337,340,355,361,363,367,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,439,443,444,452,456,457,458,462,466,467,472,484,485,501,504,519,520,546,554,563,565,566,567,570,572,573,574,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,664,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[65,-287,-492,-492,-492,65,-389,-291,-320,-382,-492,-154,-318,-201,-290,-390,-492,-385,-492,-492,-492,-388,252,-292,-335,-359,-293,-153,-286,-384,-394,-386,-200,-387,-319,-383,-294,-349,-151,-289,-325,-323,-372,-288,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-201,-152,-83,-354,-1,-2,-143,-78,-352,-77,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-396,-369,65,65,-172,-303,-311,-350,-129,-167,-166,-168,-169,-334,503,-393,-337,-114,65,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,65,-86,-333,-379,-132,-362,-361,-392,-391,-321,-208,-351,-130,65,-374,65,-309,-402,-401,-299,65,65,-119,-492,-308,-207,-328,-492,-310,-300,65,-431,65,-202,65,-120,-492,-307,-42,-41,65,65,-297,-115,-36,-35,-324,65,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,65,-295,]),'RAISE':([0,1,14,17,19,23,25,26,27,56,63,68,69,80,84,86,91,99,108,185,187,300,304,308,309,310,328,329,330,331,367,439,467,472,501,519,520,563,565,566,567,570,572,573,602,608,628,630,631,632,633,634,636,637,638,639,640,641,648,660,661,662,663,673,674,675,676,677,679,680,685,698,699,707,708,716,728,],[109,-287,109,-291,-320,-154,-318,-201,-290,-292,-293,-153,-286,-200,-319,-294,-151,-289,-288,-201,-152,109,109,-172,-303,-311,-167,-166,-168,-169,109,109,-321,-208,109,109,-309,-299,109,109,-119,-492,-308,-207,-492,-310,-300,109,-431,109,-202,109,-120,-492,-307,-42,-41,109,109,-297,-115,-36,-35,109,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,109,-295,]),'DIVEQUAL':([7,12,13,15,20,21,22,31,32,35,44,45,47,48,51,57,58,61,62,71,77,79,83,85,90,103,106,107,110,111,112,161,163,164,167,172,173,174,175,176,178,179,184,194,195,197,198,203,204,206,207,211,213,222,223,225,226,227,229,230,232,234,235,237,238,243,244,246,247,279,281,283,284,285,286,287,298,299,306,319,320,337,355,361,363,371,372,373,374,375,376,377,378,379,387,388,399,400,401,406,415,422,423,437,438,443,444,452,456,457,458,459,460,461,462,466,484,485,504,546,554,574,664,],[-492,-492,-492,-389,-382,-226,-492,-390,-492,-385,-492,-492,-225,-492,-388,-335,267,-359,-492,-384,-394,-386,-387,-383,-349,-325,-323,-372,-373,-397,-395,-336,-32,-113,-31,-356,-135,-55,-56,-121,-363,-48,-47,-83,-354,-1,-2,-143,-78,-352,-77,-225,-492,-371,-370,-123,-330,-50,-49,-377,-404,-141,-70,-405,-69,-85,-4,-332,-3,-360,-131,-224,-229,-105,-492,-223,-396,-369,-348,-350,-129,-334,-393,-337,-114,-357,-358,-136,-364,-122,-368,-367,-365,-366,-355,-84,-144,-353,-380,-378,-381,-124,-331,-142,-403,-86,-333,-379,-132,-362,-361,-228,-106,-227,-392,-391,-351,-130,-374,-402,-401,-328,-324,]),'DEDENT':([1,17,19,25,27,56,63,69,80,84,86,99,108,185,308,309,310,328,329,330,331,467,472,520,563,567,570,572,573,602,608,628,631,632,633,636,637,638,639,640,660,661,662,663,674,675,676,677,679,680,685,698,699,707,708,728,],[-287,-291,-320,-318,-290,-292,-293,-286,-200,-319,-294,-289,-288,-201,-172,-303,-311,-167,-166,-168,-169,-321,-208,-309,-299,-119,-492,-308,-207,-492,-310,-300,-431,676,-202,-120,-492,-307,-42,-41,-297,-115,-36,-35,-301,-203,-322,-304,-306,-305,-171,-298,-116,-296,-302,-295,]),'STRING':([0,1,4,6,8,12,13,14,15,17,18,19,20,22,23,25,26,27,28,31,32,35,36,37,38,40,41,45,46,49,51,52,53,56,59,61,63,64,66,68,69,70,71,72,77,79,80,81,83,84,85,86,90,91,98,99,105,107,108,109,110,111,112,113,118,119,121,126,127,128,130,131,132,133,134,135,138,139,140,141,142,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,162,166,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,194,195,196,197,198,203,204,205,206,207,213,217,222,223,228,230,231,232,233,234,235,237,238,242,245,252,254,255,256,258,259,260,261,262,266,267,268,269,270,271,272,279,280,281,282,283,287,296,298,299,300,304,306,308,309,310,318,319,320,328,329,330,331,339,341,343,344,348,350,354,355,357,359,360,362,364,367,368,370,371,372,373,374,375,376,377,378,379,386,387,388,392,393,399,400,401,402,406,413,415,416,429,435,437,438,439,441,446,452,456,457,458,462,465,466,467,472,475,478,484,485,501,503,504,515,516,519,520,539,546,547,552,554,556,562,563,565,566,567,569,570,572,573,587,602,603,606,607,608,615,616,618,628,630,631,632,633,634,636,637,638,639,640,641,648,651,659,660,661,662,663,670,673,674,675,676,677,679,680,685,698,699,702,707,708,716,728,735,],[77,-287,77,138,77,-492,-492,77,-389,-291,77,-320,-382,-492,-154,-318,-201,-290,77,-390,-492,-385,77,77,77,77,77,-492,77,-137,-388,77,77,-292,77,-359,-293,138,77,-153,-286,77,77,77,-394,-386,-200,77,-387,-319,-383,-294,-349,-151,77,-289,77,-372,-288,77,-373,-397,-395,-492,-470,138,-479,138,-487,-486,-482,-474,-484,-475,-473,77,-491,-472,-489,-488,-483,-481,-485,77,-476,-477,-478,-480,-490,360,-342,-339,-344,-341,-338,77,-346,-340,-343,77,77,-356,-135,-55,-56,-121,77,-363,-48,77,77,77,77,-47,-201,-152,-83,-354,77,-1,-2,-143,-78,77,-352,-77,-492,77,-371,-370,77,-377,77,-404,77,-141,-70,-405,-69,77,77,77,-241,-233,-240,-231,-235,-230,-237,-236,-238,-234,-232,-239,-242,77,77,-360,77,-131,77,-224,77,-138,-396,-369,77,77,-348,-172,-303,-311,77,-350,-129,-167,-166,-168,-169,77,77,77,77,77,138,138,-393,-447,-471,-491,-347,-345,77,77,77,-357,-358,-136,-364,-122,-368,-367,-365,-366,77,-355,-84,77,77,-144,-353,-380,77,-378,77,-381,77,77,77,-142,-403,77,77,77,-379,-132,-362,-361,-392,-222,-391,-321,-208,77,77,-351,-130,77,77,-374,-448,-449,77,-309,77,-402,77,77,-401,77,77,-299,77,77,-119,77,-492,-308,-207,77,-492,77,138,-450,-310,77,77,77,-300,77,-431,77,-202,77,-120,-492,-307,-42,-41,77,77,77,77,-297,-115,-36,-35,77,77,-301,-203,-322,-304,-306,-305,-171,-298,-116,77,-296,-302,77,-295,77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'op_factor':([13,179,],[176,375,]),'test_opt':([231,547,552,670,],[425,619,425,706,]),'stmt_list':([566,],[632,]),'comma_item_list':([216,543,],[410,617,]),'except_clause':([469,570,],[568,568,]),'expr':([0,4,8,14,18,28,36,38,46,52,53,59,66,70,81,98,105,109,135,146,159,217,228,231,233,242,245,252,271,272,287,300,304,339,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[7,116,7,7,7,7,7,7,7,7,116,7,7,7,306,7,7,7,7,7,361,414,7,7,7,7,7,7,7,7,7,7,7,7,7,7,116,7,7,522,7,7,7,116,7,7,7,557,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'semi_small_stmt':([76,301,],[302,470,]),'ampersand_shift_expr':([22,198,],[194,388,]),'comma_test_opt':([200,],[390,]),'equals_yield_expr_or_testlist_list':([58,92,188,],[265,265,265,]),'varargslist':([88,719,],[316,316,]),'factor':([0,4,8,14,18,28,36,38,40,41,46,52,53,59,66,70,72,81,98,105,109,135,146,159,170,171,177,180,181,182,183,196,205,217,228,231,233,242,245,252,271,272,280,282,287,300,304,318,339,341,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[13,13,13,13,13,13,13,13,222,223,13,13,13,13,13,13,299,13,13,13,13,13,13,13,13,13,374,376,377,378,379,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,504,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'newlines':([92,],[321,]),'funcdef':([0,14,87,95,332,566,632,],[17,17,308,328,308,17,17,]),'comma_dotted_as_name_list':([334,],[494,]),'newlines_opt':([92,],[324,]),'async_for_stmt':([0,14,566,632,],[19,19,19,19,]),'exprlist':([4,53,402,],[114,253,534,]),'continue_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'xor_and_expr':([32,204,],[203,399,]),'import_from_post':([189,],[382,]),'comp_op_expr_list':([7,557,],[163,163,]),'stmt':([0,14,566,632,],[23,23,633,675,]),'import_name':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'yield_expr_or_testlist_comp_opt':([59,],[275,]),'compound_stmt':([0,14,566,632,],[26,185,185,185,]),'dictorsetmaker_opt':([38,],[218,]),'yield_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'except_part':([469,570,],[567,636,]),'yield_expr':([0,14,59,271,272,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[10,10,276,449,449,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'lambdef':([0,8,14,18,28,36,38,46,52,59,66,70,105,109,135,146,231,233,242,252,271,272,287,300,304,343,344,367,368,386,392,393,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,616,618,630,632,634,641,648,651,659,670,673,716,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'global_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'sliceop_opt':([619,],[669,]),'subproc_atom':([6,64,119,126,350,354,606,],[124,124,124,124,511,124,511,]),'comp_op':([7,163,557,],[159,159,159,]),'xor_expr':([0,4,8,14,18,28,36,38,46,52,53,59,66,70,81,98,105,109,135,146,159,217,228,231,233,242,245,252,271,272,287,300,304,318,339,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,484,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'start_symbols':([0,],[34,]),'func_call_opt':([278,],[454,]),'elif_part_list_opt':([602,],[660,]),'and_not_test':([48,244,],[243,443,]),'comma_subscript_list_opt':([426,],[549,]),'period_name_list':([336,],[499,]),'comma_argument_list':([436,],[560,]),'comma_test_or_star_expr':([62,212,215,286,403,407,],[285,285,285,460,460,460,]),'test_comma':([0,14,66,300,304,344,367,439,501,519,565,566,630,632,634,641,648,673,716,],[49,49,296,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'semi_opt':([76,301,],[303,471,]),'del_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'import_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'if_stmt':([0,14,566,632,],[69,69,69,69,]),'comma_dotted_as_name_list_opt':([334,],[495,]),'testlist_star_expr':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'augassign':([58,],[272,]),'subscriptlist':([231,],[424,]),'yield_expr_or_testlist':([271,272,],[448,451,]),'comp_iter_opt':([665,720,],[704,730,]),'expr_or_star_expr':([4,53,348,402,],[115,115,509,115,]),'term':([0,4,8,14,18,28,36,38,46,52,53,59,66,70,81,98,105,109,135,146,159,170,171,196,205,217,228,231,233,242,245,252,271,272,280,282,287,300,304,318,339,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,457,458,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'comma_pow_vfpdef':([480,583,],[581,581,]),'decorated':([0,14,566,632,],[63,63,63,63,]),'comma_tfpdef_list':([653,655,733,],[688,695,739,]),'item':([38,413,539,618,],[216,540,540,540,]),'rarrow_test_opt':([487,],[588,]),'comma_with_item_list':([168,],[365,]),'expr_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'op_factor_list':([13,],[179,]),'and_not_test_list':([48,],[244,]),'comma_subscript':([426,550,],[548,622,]),'trailer_list_opt':([45,213,],[230,406,]),'comma_with_item':([168,365,],[366,518,]),'pass_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'pm_term':([61,279,],[281,456,]),'trailer':([45,213,235,],[234,234,437,]),'period_name':([336,499,],[498,600,]),'simple_stmt':([0,14,300,367,439,501,519,565,566,630,632,634,641,648,673,716,],[80,80,467,467,467,467,467,467,80,467,80,467,467,467,467,467,]),'comma_test':([47,113,193,200,221,240,342,543,],[241,241,241,389,241,440,440,241,]),'shift_arith_expr_list_opt':([12,],[172,]),'comma_test_or_star_expr_list':([62,212,215,],[286,403,407,]),'import_as_name':([189,380,529,],[384,384,613,]),'subproc_arg_part':([6,64,119,126,153,350,354,606,],[118,118,118,118,359,118,118,118,]),'subproc_atoms':([6,64,119,126,354,],[120,120,120,120,514,]),'comma_import_as_name_list':([384,],[525,]),'attr_period_name':([202,397,],[396,532,]),'varargslist_opt':([88,719,],[311,729,]),'period_or_ellipsis_list_opt':([65,],[289,]),'finally_part':([469,570,637,],[572,639,639,]),'yield_expr_or_testlist_comp':([59,],[274,]),'comma_pow_tfpdef':([655,695,],[693,693,]),'try_stmt':([0,14,566,632,],[99,99,99,99,]),'pm_term_list':([61,],[279,]),'comma_name':([224,307,419,],[417,417,544,]),'dotted_as_name':([96,497,],[334,599,]),'flow_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'arglist':([233,393,],[431,431,]),'test_or_star_expr':([0,14,36,38,59,233,287,300,304,367,393,439,501,519,562,565,566,630,632,634,641,648,673,716,],[62,62,212,215,212,434,461,62,62,62,434,62,62,62,434,62,62,62,62,62,62,62,62,62,]),'or_test':([0,8,14,18,28,36,38,46,52,59,66,70,105,109,135,146,231,233,242,252,271,272,287,300,304,339,343,344,367,368,386,392,393,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,502,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,665,106,106,106,106,106,106,106,106,106,106,106,717,106,717,]),'comp_op_expr_list_opt':([7,557,],[161,161,]),'equals_yield_expr_or_testlist':([58,92,188,265,342,506,],[263,263,263,447,505,605,]),'or_and_test_list_opt':([44,],[226,]),'or_and_test_list':([44,],[227,]),'import_as_names':([189,380,],[385,523,]),'dotted_as_names':([96,],[335,]),'while_stmt':([0,14,566,632,],[1,1,1,1,]),'typedargslist_opt':([488,],[592,]),'equals_test':([312,591,643,713,],[476,476,476,476,]),'decorator':([0,14,95,566,632,],[2,2,327,2,2,]),'dotted_name':([96,289,497,],[333,463,333,]),'test_comma_list_opt':([0,14,300,304,344,367,439,501,519,565,566,630,632,634,641,648,673,716,],[3,3,3,3,506,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'comma_pow_vfpdef_opt':([480,583,],[582,645,]),'yield_arg':([52,],[248,]),'ampersand_shift_expr_list_opt':([22,],[195,]),'comma_argument':([436,560,],[559,625,]),'yield_arg_opt':([52,],[249,]),'attr_period_name_list':([202,],[397,]),'comparison':([0,8,14,18,28,36,38,46,52,59,66,70,98,105,109,135,146,228,231,233,242,245,252,271,272,287,300,304,339,343,344,367,368,386,392,393,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'with_item':([8,368,],[168,521,]),'atom_expr':([0,4,8,14,18,28,36,38,40,41,46,52,53,59,66,70,72,81,98,105,109,135,146,159,170,171,177,180,181,182,183,196,205,217,228,231,233,242,245,252,271,272,280,282,287,300,304,318,339,341,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'comma_expr_or_star_expr':([115,345,],[347,508,]),'and_not_test_list_opt':([48,],[246,]),'raise_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'arith_expr':([0,4,8,14,18,28,36,38,46,52,53,59,66,70,81,98,105,109,135,146,159,170,171,196,205,217,228,231,233,242,245,252,271,272,287,300,304,318,339,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,371,372,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'subscript':([231,552,],[426,623,]),'file_stmts':([0,],[14,]),'comma_expr_or_star_expr_list':([115,],[345,]),'import_from_pre':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'comma_name_list_opt':([224,307,],[418,474,]),'comma_tfpdef_list_opt':([653,733,],[687,738,]),'star_expr':([0,3,4,14,36,38,53,59,233,287,300,304,348,367,393,402,439,501,519,562,565,566,630,632,634,641,648,673,716,],[21,113,117,21,21,21,117,21,21,21,21,21,117,21,21,117,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'comma_pow_tfpdef_opt':([655,695,],[692,715,]),'testlist':([0,14,18,38,52,271,272,300,304,367,416,439,446,501,519,565,566,630,632,634,641,648,673,716,],[92,188,191,219,250,450,450,188,188,188,542,188,564,188,188,188,188,188,188,188,188,188,188,188,]),'shift_expr':([0,4,8,14,18,28,36,38,46,52,53,59,66,70,81,98,105,109,135,146,159,196,205,217,228,231,233,242,245,252,271,272,287,300,304,318,339,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,387,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'comp_iter':([665,720,],[701,701,]),'async_funcdef':([0,14,95,566,632,],[25,25,330,25,25,]),'with_stmt':([0,14,87,566,632,],[27,27,310,27,27,]),'lambdef_nocond':([702,735,],[718,718,]),'equals_yield_expr_or_testlist_list_opt':([58,92,188,],[257,322,322,]),'finally_part_opt':([570,637,],[638,679,]),'comma_test_list':([47,113,193,221,543,],[240,342,240,240,240,]),'and_expr':([0,4,8,14,18,28,36,38,46,52,53,59,66,70,81,98,105,109,135,146,159,205,217,228,231,233,242,245,252,271,272,287,300,304,318,339,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,400,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'break_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'atom':([0,4,8,14,18,28,36,37,38,40,41,46,52,53,59,66,70,72,81,98,105,109,135,146,159,170,171,177,180,181,182,183,196,205,217,228,231,233,242,245,252,271,272,280,282,287,300,304,318,339,341,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[45,45,45,45,45,45,45,213,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'comma_import_as_name_list_opt':([384,],[526,]),'func_call':([201,278,],[395,455,]),'sliceop':([619,],[672,]),'comp_op_expr':([7,163,557,],[164,363,164,]),'classdef':([0,14,95,566,632,],[56,56,329,56,56,]),'eval_input':([0,],[39,]),'classdef_or_funcdef':([95,],[331,]),'empty':([0,7,12,13,14,18,22,32,36,38,44,45,48,52,58,59,62,65,76,88,92,113,115,188,200,212,213,215,224,231,233,278,286,300,301,304,307,312,314,333,334,344,345,367,381,384,393,403,407,410,426,436,439,477,480,487,488,501,519,526,547,549,552,557,560,565,566,570,575,583,590,591,593,602,617,619,630,632,634,635,637,641,643,648,653,655,665,670,673,682,687,695,710,713,716,719,720,724,733,],[42,167,174,184,186,192,197,207,210,220,229,238,247,251,264,277,283,293,305,317,325,283,283,264,391,283,238,283,420,427,432,453,283,186,305,186,420,479,482,491,496,186,283,186,491,528,432,283,283,283,551,283,186,576,584,589,596,186,186,283,427,283,427,167,283,186,186,640,283,584,652,479,657,663,283,671,186,186,186,491,640,186,479,186,690,696,705,427,186,482,283,696,576,479,186,317,705,657,690,]),'and_test':([0,8,14,18,28,36,38,46,52,59,66,70,105,109,135,146,228,231,233,242,252,271,272,287,300,304,339,343,344,367,368,386,392,393,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,423,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'comma_subscript_list':([426,],[550,]),'comma_opt':([62,113,115,212,215,286,345,403,407,410,436,526,549,560,575,617,687,],[284,344,346,405,409,459,507,535,536,538,561,611,621,626,642,667,711,]),'pipe_xor_expr':([90,319,],[320,485,]),'test':([0,8,14,18,28,36,38,46,52,59,66,70,105,109,135,146,231,233,242,252,271,272,287,300,304,343,344,367,368,386,392,393,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,616,618,630,632,634,641,648,651,659,670,673,716,],[47,169,47,193,200,211,221,239,193,211,295,297,338,340,352,358,428,433,442,445,193,193,211,47,47,442,295,47,169,442,442,433,541,543,553,558,47,442,193,574,580,47,604,47,541,620,428,624,433,47,47,635,647,664,666,668,47,47,47,47,47,686,697,620,47,47,]),'not_test':([0,8,14,18,28,36,38,46,52,59,66,70,98,105,109,135,146,228,231,233,242,245,252,271,272,287,300,304,339,343,344,367,368,386,392,393,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[48,48,48,48,48,48,48,48,48,48,48,48,337,48,48,48,48,48,48,48,48,444,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'semi_small_stmt_list':([76,],[301,]),'testlist_comp':([36,59,],[208,273,]),'import_from':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'colon_test_opt':([590,],[649,]),'xor_and_expr_list':([32,],[204,]),'test_comma_list':([0,14,300,304,344,367,439,501,519,565,566,630,632,634,641,648,673,716,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'async_stmt':([0,14,566,632,],[86,86,86,86,]),'op_factor_list_opt':([13,],[178,]),'trailer_list':([45,213,],[235,235,]),'comp_for':([212,215,216,433,665,720,],[404,408,411,555,703,703,]),'attr_name':([29,],[201,]),'test_nocond':([702,735,],[720,741,]),'comma_import_as_name':([384,525,],[527,610,]),'as_name_opt':([333,381,635,],[490,524,678,]),'period_or_ellipsis':([65,291,],[290,464,]),'as_name':([333,381,635,],[492,492,492,]),'comma_dotted_as_name':([334,494,],[493,598,]),'elif_part':([602,662,],[661,699,]),'string_literal':([0,4,6,8,14,18,28,36,37,38,40,41,46,52,53,59,64,66,70,71,72,81,98,105,109,119,126,135,146,159,170,171,177,180,181,182,183,196,205,217,228,231,233,242,245,252,271,272,280,282,287,300,304,318,339,341,343,344,348,350,354,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,606,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[112,112,125,112,112,112,112,112,112,112,112,112,112,112,112,112,125,112,112,298,112,112,112,112,112,125,125,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,125,125,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,125,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'xor_and_expr_list_opt':([32,],[206,]),'pipe':([143,288,349,351,],[354,354,354,354,]),'testlist_opt':([18,],[190,]),'comma_vfpdef_list_opt':([477,710,],[575,721,]),'comma_name_list':([224,307,],[419,419,]),'shift_arith_expr_list':([12,],[175,]),'parameters':([326,],[487,]),'file_input':([0,],[74,]),'or_and_test':([44,227,],[225,422,]),'shift_arith_expr':([12,175,],[173,373,]),'small_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[76,76,76,473,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'tfpdef':([488,593,594,691,694,714,724,725,740,743,745,],[591,656,658,713,713,727,656,734,713,713,747,]),'subproc':([6,64,119,126,],[143,288,349,351,]),'as_expr':([169,],[369,]),'dictorsetmaker':([38,],[214,]),'except_part_list':([469,],[570,]),'async_with_stmt':([0,14,566,632,],[84,84,84,84,]),'vfpdef':([88,314,315,578,585,646,681,682,719,722,731,732,737,744,],[312,481,483,643,643,684,709,481,312,643,736,643,742,746,]),'comma_vfpdef_list':([477,480,710,],[579,583,723,]),'subproc_arg':([6,64,119,126,350,354,606,],[153,153,153,153,153,153,153,]),'tfpdef_opt':([593,724,],[655,733,]),'comp_if':([665,720,],[700,700,]),'else_part':([563,570,660,674,],[628,637,698,708,]),'comma_item':([216,410,543,617,],[412,537,412,537,]),'newline_or_stmt':([0,14,],[91,187,]),'colon_test':([590,],[650,]),'equals_test_opt':([312,591,643,713,],[477,653,683,726,]),'period_or_ellipsis_list':([65,],[291,]),'number':([0,4,8,14,18,28,36,37,38,40,41,46,52,53,59,66,70,72,81,98,105,109,135,146,159,170,171,177,180,181,182,183,196,205,217,228,231,233,242,245,252,271,272,280,282,287,300,304,318,339,341,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'decorators':([0,14,566,632,],[95,95,95,95,]),'single_input':([0,],[97,]),'string_literal_list':([0,4,8,14,18,28,36,37,38,40,41,46,52,53,59,66,70,72,81,98,105,109,135,146,159,170,171,177,180,181,182,183,196,205,217,228,231,233,242,245,252,271,272,280,282,287,300,304,318,339,341,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'elif_part_list':([602,],[662,]),'ampersand_shift_expr_list':([22,],[198,]),'return_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'assert_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'testlist_comp_opt':([36,],[209,]),'nonlocal_stmt':([0,14,300,304,367,439,501,519,565,566,630,632,634,641,648,673,716,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'vfpdef_opt':([314,682,],[480,710,]),'power':([0,4,8,14,18,28,36,38,40,41,46,52,53,59,66,70,72,81,98,105,109,135,146,159,170,171,177,180,181,182,183,196,205,217,228,231,233,242,245,252,271,272,280,282,287,300,304,318,339,341,343,344,348,367,368,370,386,392,393,402,413,416,429,435,439,441,446,475,478,501,503,519,539,547,552,556,562,565,566,569,587,603,615,616,618,630,632,634,641,648,651,659,670,673,702,716,735,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'arglist_opt':([233,393,],[430,530,]),'for_stmt':([0,14,87,566,632,],[108,108,309,108,108,]),'suite':([300,367,439,501,519,565,630,634,641,648,673,716,],[469,520,563,602,608,631,674,677,680,685,707,728,]),'rarrow_test':([487,],[586,]),'comma_vfpdef':([477,480,579,583,710,723,],[577,577,644,644,577,644,]),'pipe_xor_expr_list':([90,],[319,]),'argument':([233,393,562,],[436,436,627,]),'typedargslist':([488,],[595,]),'comma_tfpdef':([653,655,688,695,733,739,],[689,689,712,712,689,712,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start_symbols","S'",1,None,None,None),
  ('ampersand_shift_expr_list_opt -> empty','ampersand_shift_expr_list_opt',1,'p_ampersand_shift_expr_list_opt','parser.py',285),
  ('ampersand_shift_expr_list_opt -> ampersand_shift_expr_list','ampersand_shift_expr_list_opt',1,'p_ampersand_shift_expr_list_opt','parser.py',286),
  ('and_not_test_list_opt -> empty','and_not_test_list_opt',1,'p_and_not_test_list_opt','parser.py',285),
  ('and_not_test_list_opt -> and_not_test_list','and_not_test_list_opt',1,'p_and_not_test_list_opt','parser.py',286),
  ('arglist_opt -> empty','arglist_opt',1,'p_arglist_opt','parser.py',285),
  ('arglist_opt -> arglist','arglist_opt',1,'p_arglist_opt','parser.py',286),
  ('as_name_opt -> empty','as_name_opt',1,'p_as_name_opt','parser.py',285),
  ('as_name_opt -> as_name','as_name_opt',1,'p_as_name_opt','parser.py',286),
  ('colon_test_opt -> empty','colon_test_opt',1,'p_colon_test_opt','parser.py',285),
  ('colon_test_opt -> colon_test','colon_test_opt',1,'p_colon_test_opt','parser.py',286),
  ('comma_dotted_as_name_list_opt -> empty','comma_dotted_as_name_list_opt',1,'p_comma_dotted_as_name_list_opt','parser.py',285),
  ('comma_dotted_as_name_list_opt -> comma_dotted_as_name_list','comma_dotted_as_name_list_opt',1,'p_comma_dotted_as_name_list_opt','parser.py',286),
  ('comma_import_as_name_list_opt -> empty','comma_import_as_name_list_opt',1,'p_comma_import_as_name_list_opt','parser.py',285),
  ('comma_import_as_name_list_opt -> comma_import_as_name_list','comma_import_as_name_list_opt',1,'p_comma_import_as_name_list_opt','parser.py',286),
  ('comma_name_list_opt -> empty','comma_name_list_opt',1,'p_comma_name_list_opt','parser.py',285),
  ('comma_name_list_opt -> comma_name_list','comma_name_list_opt',1,'p_comma_name_list_opt','parser.py',286),
  ('comma_pow_tfpdef_opt -> empty','comma_pow_tfpdef_opt',1,'p_comma_pow_tfpdef_opt','parser.py',285),
  ('comma_pow_tfpdef_opt -> comma_pow_tfpdef','comma_pow_tfpdef_opt',1,'p_comma_pow_tfpdef_opt','parser.py',286),
  ('comma_pow_vfpdef_opt -> empty','comma_pow_vfpdef_opt',1,'p_comma_pow_vfpdef_opt','parser.py',285),
  ('comma_pow_vfpdef_opt -> comma_pow_vfpdef','comma_pow_vfpdef_opt',1,'p_comma_pow_vfpdef_opt','parser.py',286),
  ('comma_subscript_list_opt -> empty','comma_subscript_list_opt',1,'p_comma_subscript_list_opt','parser.py',285),
  ('comma_subscript_list_opt -> comma_subscript_list','comma_subscript_list_opt',1,'p_comma_subscript_list_opt','parser.py',286),
  ('comma_test_opt -> empty','comma_test_opt',1,'p_comma_test_opt','parser.py',285),
  ('comma_test_opt -> comma_test','comma_test_opt',1,'p_comma_test_opt','parser.py',286),
  ('comma_tfpdef_list_opt -> empty','comma_tfpdef_list_opt',1,'p_comma_tfpdef_list_opt','parser.py',285),
  ('comma_tfpdef_list_opt -> comma_tfpdef_list','comma_tfpdef_list_opt',1,'p_comma_tfpdef_list_opt','parser.py',286),
  ('comma_vfpdef_list_opt -> empty','comma_vfpdef_list_opt',1,'p_comma_vfpdef_list_opt','parser.py',285),
  ('comma_vfpdef_list_opt -> comma_vfpdef_list','comma_vfpdef_list_opt',1,'p_comma_vfpdef_list_opt','parser.py',286),
  ('comp_iter_opt -> empty','comp_iter_opt',1,'p_comp_iter_opt','parser.py',285),
  ('comp_iter_opt -> comp_iter','comp_iter_opt',1,'p_comp_iter_opt','parser.py',286),
  ('comp_op_expr_list_opt -> empty','comp_op_expr_list_opt',1,'p_comp_op_expr_list_opt','parser.py',285),
  ('comp_op_expr_list_opt -> comp_op_expr_list','comp_op_expr_list_opt',1,'p_comp_op_expr_list_opt','parser.py',286),
  ('dictorsetmaker_opt -> empty','dictorsetmaker_opt',1,'p_dictorsetmaker_opt','parser.py',285),
  ('dictorsetmaker_opt -> dictorsetmaker','dictorsetmaker_opt',1,'p_dictorsetmaker_opt','parser.py',286),
  ('elif_part_list_opt -> empty','elif_part_list_opt',1,'p_elif_part_list_opt','parser.py',285),
  ('elif_part_list_opt -> elif_part_list','elif_part_list_opt',1,'p_elif_part_list_opt','parser.py',286),
  ('equals_test_opt -> empty','equals_test_opt',1,'p_equals_test_opt','parser.py',285),
  ('equals_test_opt -> equals_test','equals_test_opt',1,'p_equals_test_opt','parser.py',286),
  ('equals_yield_expr_or_testlist_list_opt -> empty','equals_yield_expr_or_testlist_list_opt',1,'p_equals_yield_expr_or_testlist_list_opt','parser.py',285),
  ('equals_yield_expr_or_testlist_list_opt -> equals_yield_expr_or_testlist_list','equals_yield_expr_or_testlist_list_opt',1,'p_equals_yield_expr_or_testlist_list_opt','parser.py',286),
  ('finally_part_opt -> empty','finally_part_opt',1,'p_finally_part_opt','parser.py',285),
  ('finally_part_opt -> finally_part','finally_part_opt',1,'p_finally_part_opt','parser.py',286),
  ('func_call_opt -> empty','func_call_opt',1,'p_func_call_opt','parser.py',285),
  ('func_call_opt -> func_call','func_call_opt',1,'p_func_call_opt','parser.py',286),
  ('newlines_opt -> empty','newlines_opt',1,'p_newlines_opt','parser.py',285),
  ('newlines_opt -> newlines','newlines_opt',1,'p_newlines_opt','parser.py',286),
  ('op_factor_list_opt -> empty','op_factor_list_opt',1,'p_op_factor_list_opt','parser.py',285),
  ('op_factor_list_opt -> op_factor_list','op_factor_list_opt',1,'p_op_factor_list_opt','parser.py',286),
  ('or_and_test_list_opt -> empty','or_and_test_list_opt',1,'p_or_and_test_list_opt','parser.py',285),
  ('or_and_test_list_opt -> or_and_test_list','or_and_test_list_opt',1,'p_or_and_test_list_opt','parser.py',286),
  ('period_or_ellipsis_list_opt -> empty','period_or_ellipsis_list_opt',1,'p_period_or_ellipsis_list_opt','parser.py',285),
  ('period_or_ellipsis_list_opt -> period_or_ellipsis_list','period_or_ellipsis_list_opt',1,'p_period_or_ellipsis_list_opt','parser.py',286),
  ('rarrow_test_opt -> empty','rarrow_test_opt',1,'p_rarrow_test_opt','parser.py',285),
  ('rarrow_test_opt -> rarrow_test','rarrow_test_opt',1,'p_rarrow_test_opt','parser.py',286),
  ('shift_arith_expr_list_opt -> empty','shift_arith_expr_list_opt',1,'p_shift_arith_expr_list_opt','parser.py',285),
  ('shift_arith_expr_list_opt -> shift_arith_expr_list','shift_arith_expr_list_opt',1,'p_shift_arith_expr_list_opt','parser.py',286),
  ('sliceop_opt -> empty','sliceop_opt',1,'p_sliceop_opt','parser.py',285),
  ('sliceop_opt -> sliceop','sliceop_opt',1,'p_sliceop_opt','parser.py',286),
  ('test_comma_list_opt -> empty','test_comma_list_opt',1,'p_test_comma_list_opt','parser.py',285),
  ('test_comma_list_opt -> test_comma_list','test_comma_list_opt',1,'p_test_comma_list_opt','parser.py',286),
  ('test_opt -> empty','test_opt',1,'p_test_opt','parser.py',285),
  ('test_opt -> test','test_opt',1,'p_test_opt','parser.py',286),
  ('testlist_comp_opt -> empty','testlist_comp_opt',1,'p_testlist_comp_opt','parser.py',285),
  ('testlist_comp_opt -> testlist_comp','testlist_comp_opt',1,'p_testlist_comp_opt','parser.py',286),
  ('testlist_opt -> empty','testlist_opt',1,'p_testlist_opt','parser.py',285),
  ('testlist_opt -> testlist','testlist_opt',1,'p_testlist_opt','parser.py',286),
  ('tfpdef_opt -> empty','tfpdef_opt',1,'p_tfpdef_opt','parser.py',285),
  ('tfpdef_opt -> tfpdef','tfpdef_opt',1,'p_tfpdef_opt','parser.py',286),
  ('trailer_list_opt -> empty','trailer_list_opt',1,'p_trailer_list_opt','parser.py',285),
  ('trailer_list_opt -> trailer_list','trailer_list_opt',1,'p_trailer_list_opt','parser.py',286),
  ('typedargslist_opt -> empty','typedargslist_opt',1,'p_typedargslist_opt','parser.py',285),
  ('typedargslist_opt -> typedargslist','typedargslist_opt',1,'p_typedargslist_opt','parser.py',286),
  ('varargslist_opt -> empty','varargslist_opt',1,'p_varargslist_opt','parser.py',285),
  ('varargslist_opt -> varargslist','varargslist_opt',1,'p_varargslist_opt','parser.py',286),
  ('vfpdef_opt -> empty','vfpdef_opt',1,'p_vfpdef_opt','parser.py',285),
  ('vfpdef_opt -> vfpdef','vfpdef_opt',1,'p_vfpdef_opt','parser.py',286),
  ('xor_and_expr_list_opt -> empty','xor_and_expr_list_opt',1,'p_xor_and_expr_list_opt','parser.py',285),
  ('xor_and_expr_list_opt -> xor_and_expr_list','xor_and_expr_list_opt',1,'p_xor_and_expr_list_opt','parser.py',286),
  ('yield_arg_opt -> empty','yield_arg_opt',1,'p_yield_arg_opt','parser.py',285),
  ('yield_arg_opt -> yield_arg','yield_arg_opt',1,'p_yield_arg_opt','parser.py',286),
  ('yield_expr_or_testlist_comp_opt -> empty','yield_expr_or_testlist_comp_opt',1,'p_yield_expr_or_testlist_comp_opt','parser.py',285),
  ('yield_expr_or_testlist_comp_opt -> yield_expr_or_testlist_comp','yield_expr_or_testlist_comp_opt',1,'p_yield_expr_or_testlist_comp_opt','parser.py',286),
  ('ampersand_shift_expr_list -> ampersand_shift_expr','ampersand_shift_expr_list',1,'p_ampersand_shift_expr_list','parser.py',298),
  ('ampersand_shift_expr_list -> ampersand_shift_expr_list ampersand_shift_expr','ampersand_shift_expr_list',2,'p_ampersand_shift_expr_list','parser.py',299),
  ('and_not_test_list -> and_not_test','and_not_test_list',1,'p_and_not_test_list','parser.py',298),
  ('and_not_test_list -> and_not_test_list and_not_test','and_not_test_list',2,'p_and_not_test_list','parser.py',299),
  ('attr_period_name_list -> attr_period_name','attr_period_name_list',1,'p_attr_period_name_list','parser.py',298),
  ('attr_period_name_list -> attr_period_name_list attr_period_name','attr_period_name_list',2,'p_attr_period_name_list','parser.py',299),
  ('comma_argument_list -> comma_argument','comma_argument_list',1,'p_comma_argument_list','parser.py',298),
  ('comma_argument_list -> comma_argument_list comma_argument','comma_argument_list',2,'p_comma_argument_list','parser.py',299),
  ('comma_dotted_as_name_list -> comma_dotted_as_name','comma_dotted_as_name_list',1,'p_comma_dotted_as_name_list','parser.py',298),
  ('comma_dotted_as_name_list -> comma_dotted_as_name_list comma_dotted_as_name','comma_dotted_as_name_list',2,'p_comma_dotted_as_name_list','parser.py',299),
  ('comma_expr_or_star_expr_list -> comma_expr_or_star_expr','comma_expr_or_star_expr_list',1,'p_comma_expr_or_star_expr_list','parser.py',298),
  ('comma_expr_or_star_expr_list -> comma_expr_or_star_expr_list comma_expr_or_star_expr','comma_expr_or_star_expr_list',2,'p_comma_expr_or_star_expr_list','parser.py',299),
  ('comma_import_as_name_list -> comma_import_as_name','comma_import_as_name_list',1,'p_comma_import_as_name_list','parser.py',298),
  ('comma_import_as_name_list -> comma_import_as_name_list comma_import_as_name','comma_import_as_name_list',2,'p_comma_import_as_name_list','parser.py',299),
  ('comma_item_list -> comma_item','comma_item_list',1,'p_comma_item_list','parser.py',298),
  ('comma_item_list -> comma_item_list comma_item','comma_item_list',2,'p_comma_item_list','parser.py',299),
  ('comma_name_list -> comma_name','comma_name_list',1,'p_comma_name_list','parser.py',298),
  ('comma_name_list -> comma_name_list comma_name','comma_name_list',2,'p_comma_name_list','parser.py',299),
  ('comma_subscript_list -> comma_subscript','comma_subscript_list',1,'p_comma_subscript_list','parser.py',298),
  ('comma_subscript_list -> comma_subscript_list comma_subscript','comma_subscript_list',2,'p_comma_subscript_list','parser.py',299),
  ('comma_test_list -> comma_test','comma_test_list',1,'p_comma_test_list','parser.py',298),
  ('comma_test_list -> comma_test_list comma_test','comma_test_list',2,'p_comma_test_list','parser.py',299),
  ('comma_test_or_star_expr_list -> comma_test_or_star_expr','comma_test_or_star_expr_list',1,'p_comma_test_or_star_expr_list','parser.py',298),
  ('comma_test_or_star_expr_list -> comma_test_or_star_expr_list comma_test_or_star_expr','comma_test_or_star_expr_list',2,'p_comma_test_or_star_expr_list','parser.py',299),
  ('comma_tfpdef_list -> comma_tfpdef','comma_tfpdef_list',1,'p_comma_tfpdef_list','parser.py',298),
  ('comma_tfpdef_list -> comma_tfpdef_list comma_tfpdef','comma_tfpdef_list',2,'p_comma_tfpdef_list','parser.py',299),
  ('comma_vfpdef_list -> comma_vfpdef','comma_vfpdef_list',1,'p_comma_vfpdef_list','parser.py',298),
  ('comma_vfpdef_list -> comma_vfpdef_list comma_vfpdef','comma_vfpdef_list',2,'p_comma_vfpdef_list','parser.py',299),
  ('comma_with_item_list -> comma_with_item','comma_with_item_list',1,'p_comma_with_item_list','parser.py',298),
  ('comma_with_item_list -> comma_with_item_list comma_with_item','comma_with_item_list',2,'p_comma_with_item_list','parser.py',299),
  ('comp_op_expr_list -> comp_op_expr','comp_op_expr_list',1,'p_comp_op_expr_list','parser.py',298),
  ('comp_op_expr_list -> comp_op_expr_list comp_op_expr','comp_op_expr_list',2,'p_comp_op_expr_list','parser.py',299),
  ('elif_part_list -> elif_part','elif_part_list',1,'p_elif_part_list','parser.py',298),
  ('elif_part_list -> elif_part_list elif_part','elif_part_list',2,'p_elif_part_list','parser.py',299),
  ('equals_yield_expr_or_testlist_list -> equals_yield_expr_or_testlist','equals_yield_expr_or_testlist_list',1,'p_equals_yield_expr_or_testlist_list','parser.py',298),
  ('equals_yield_expr_or_testlist_list -> equals_yield_expr_or_testlist_list equals_yield_expr_or_testlist','equals_yield_expr_or_testlist_list',2,'p_equals_yield_expr_or_testlist_list','parser.py',299),
  ('except_part_list -> except_part','except_part_list',1,'p_except_part_list','parser.py',298),
  ('except_part_list -> except_part_list except_part','except_part_list',2,'p_except_part_list','parser.py',299),
  ('op_factor_list -> op_factor','op_factor_list',1,'p_op_factor_list','parser.py',298),
  ('op_factor_list -> op_factor_list op_factor','op_factor_list',2,'p_op_factor_list','parser.py',299),
  ('or_and_test_list -> or_and_test','or_and_test_list',1,'p_or_and_test_list','parser.py',298),
  ('or_and_test_list -> or_and_test_list or_and_test','or_and_test_list',2,'p_or_and_test_list','parser.py',299),
  ('period_name_list -> period_name','period_name_list',1,'p_period_name_list','parser.py',298),
  ('period_name_list -> period_name_list period_name','period_name_list',2,'p_period_name_list','parser.py',299),
  ('period_or_ellipsis_list -> period_or_ellipsis','period_or_ellipsis_list',1,'p_period_or_ellipsis_list','parser.py',298),
  ('period_or_ellipsis_list -> period_or_ellipsis_list period_or_ellipsis','period_or_ellipsis_list',2,'p_period_or_ellipsis_list','parser.py',299),
  ('pipe_xor_expr_list -> pipe_xor_expr','pipe_xor_expr_list',1,'p_pipe_xor_expr_list','parser.py',298),
  ('pipe_xor_expr_list -> pipe_xor_expr_list pipe_xor_expr','pipe_xor_expr_list',2,'p_pipe_xor_expr_list','parser.py',299),
  ('pm_term_list -> pm_term','pm_term_list',1,'p_pm_term_list','parser.py',298),
  ('pm_term_list -> pm_term_list pm_term','pm_term_list',2,'p_pm_term_list','parser.py',299),
  ('semi_small_stmt_list -> semi_small_stmt','semi_small_stmt_list',1,'p_semi_small_stmt_list','parser.py',298),
  ('semi_small_stmt_list -> semi_small_stmt_list semi_small_stmt','semi_small_stmt_list',2,'p_semi_small_stmt_list','parser.py',299),
  ('shift_arith_expr_list -> shift_arith_expr','shift_arith_expr_list',1,'p_shift_arith_expr_list','parser.py',298),
  ('shift_arith_expr_list -> shift_arith_expr_list shift_arith_expr','shift_arith_expr_list',2,'p_shift_arith_expr_list','parser.py',299),
  ('test_comma_list -> test_comma','test_comma_list',1,'p_test_comma_list','parser.py',298),
  ('test_comma_list -> test_comma_list test_comma','test_comma_list',2,'p_test_comma_list','parser.py',299),
  ('test_or_star_expr_list -> test_or_star_expr','test_or_star_expr_list',1,'p_test_or_star_expr_list','parser.py',298),
  ('test_or_star_expr_list -> test_or_star_expr_list test_or_star_expr','test_or_star_expr_list',2,'p_test_or_star_expr_list','parser.py',299),
  ('trailer_list -> trailer','trailer_list',1,'p_trailer_list','parser.py',298),
  ('trailer_list -> trailer_list trailer','trailer_list',2,'p_trailer_list','parser.py',299),
  ('xor_and_expr_list -> xor_and_expr','xor_and_expr_list',1,'p_xor_and_expr_list','parser.py',298),
  ('xor_and_expr_list -> xor_and_expr_list xor_and_expr','xor_and_expr_list',2,'p_xor_and_expr_list','parser.py',299),
  ('start_symbols -> single_input','start_symbols',1,'p_start_symbols','parser.py',350),
  ('start_symbols -> file_input','start_symbols',1,'p_start_symbols','parser.py',351),
  ('start_symbols -> eval_input','start_symbols',1,'p_start_symbols','parser.py',352),
  ('start_symbols -> empty','start_symbols',1,'p_start_symbols','parser.py',353),
  ('single_input -> compound_stmt NEWLINE','single_input',2,'p_single_input','parser.py',358),
  ('file_input -> file_stmts','file_input',1,'p_file_input','parser.py',365),
  ('file_stmts -> newline_or_stmt','file_stmts',1,'p_file_stmts','parser.py',369),
  ('file_stmts -> file_stmts newline_or_stmt','file_stmts',2,'p_file_stmts','parser.py',370),
  ('newline_or_stmt -> NEWLINE','newline_or_stmt',1,'p_newline_or_stmt','parser.py',382),
  ('newline_or_stmt -> stmt','newline_or_stmt',1,'p_newline_or_stmt','parser.py',383),
  ('newlines -> NEWLINE','newlines',1,'p_newlines','parser.py',388),
  ('newlines -> newlines NEWLINE','newlines',2,'p_newlines','parser.py',389),
  ('eval_input -> testlist newlines_opt','eval_input',2,'p_eval_input','parser.py',394),
  ('func_call -> LPAREN arglist_opt RPAREN','func_call',3,'p_func_call','parser.py',399),
  ('attr_period_name -> PERIOD NAME','attr_period_name',2,'p_attr_period_name','parser.py',403),
  ('attr_name -> NAME','attr_name',1,'p_attr_name','parser.py',407),
  ('attr_name -> NAME attr_period_name_list','attr_name',2,'p_attr_name','parser.py',408),
  ('decorator -> AT attr_name NEWLINE','decorator',3,'p_decorator','parser.py',433),
  ('decorator -> AT attr_name func_call NEWLINE','decorator',4,'p_decorator','parser.py',434),
  ('decorators -> decorator','decorators',1,'p_decorators','parser.py',456),
  ('decorators -> decorators decorator','decorators',2,'p_decorators','parser.py',457),
  ('classdef_or_funcdef -> classdef','classdef_or_funcdef',1,'p_classdef_or_funcdef','parser.py',462),
  ('classdef_or_funcdef -> funcdef','classdef_or_funcdef',1,'p_classdef_or_funcdef','parser.py',463),
  ('classdef_or_funcdef -> async_funcdef','classdef_or_funcdef',1,'p_classdef_or_funcdef','parser.py',464),
  ('decorated -> decorators classdef_or_funcdef','decorated',2,'p_decorated','parser.py',476),
  ('rarrow_test -> RARROW test','rarrow_test',2,'p_rarrow_test','parser.py',482),
  ('funcdef -> DEF NAME parameters rarrow_test_opt COLON suite','funcdef',6,'p_funcdef','parser.py',486),
  ('async_funcdef -> ASYNC funcdef','async_funcdef',2,'p_async_funcdef','parser.py',497),
  ('parameters -> LPAREN typedargslist_opt RPAREN','parameters',3,'p_parameters','parser.py',502),
  ('equals_test -> EQUALS test','equals_test',2,'p_equals_test','parser.py',514),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt','typedargslist',4,'p_typedargslist','parser.py',518),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt COMMA POW vfpdef','typedargslist',9,'p_typedargslist','parser.py',519),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt comma_tfpdef_list_opt','typedargslist',7,'p_typedargslist','parser.py',520),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt TIMES tfpdef_opt comma_tfpdef_list COMMA POW tfpdef','typedargslist',10,'p_typedargslist','parser.py',521),
  ('typedargslist -> tfpdef equals_test_opt comma_tfpdef_list_opt comma_opt POW tfpdef','typedargslist',6,'p_typedargslist','parser.py',522),
  ('typedargslist -> TIMES tfpdef_opt comma_tfpdef_list comma_pow_tfpdef_opt','typedargslist',4,'p_typedargslist','parser.py',523),
  ('typedargslist -> TIMES tfpdef_opt comma_pow_tfpdef_opt','typedargslist',3,'p_typedargslist','parser.py',524),
  ('typedargslist -> POW tfpdef','typedargslist',2,'p_typedargslist','parser.py',525),
  ('colon_test -> COLON test','colon_test',2,'p_colon_test','parser.py',579),
  ('tfpdef -> NAME colon_test_opt','tfpdef',2,'p_tfpdef','parser.py',583),
  ('comma_tfpdef -> COMMA','comma_tfpdef',1,'p_comma_tfpdef','parser.py',587),
  ('comma_tfpdef -> COMMA tfpdef equals_test_opt','comma_tfpdef',3,'p_comma_tfpdef','parser.py',588),
  ('comma_pow_tfpdef -> COMMA POW tfpdef','comma_pow_tfpdef',3,'p_comma_pow_tfpdef','parser.py',596),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt','varargslist',4,'p_varargslist','parser.py',641),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt COMMA POW vfpdef','varargslist',9,'p_varargslist','parser.py',642),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt comma_vfpdef_list_opt','varargslist',7,'p_varargslist','parser.py',643),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt TIMES vfpdef_opt comma_vfpdef_list COMMA POW vfpdef','varargslist',10,'p_varargslist','parser.py',644),
  ('varargslist -> vfpdef equals_test_opt comma_vfpdef_list_opt comma_opt POW vfpdef','varargslist',6,'p_varargslist','parser.py',645),
  ('varargslist -> TIMES vfpdef_opt comma_vfpdef_list comma_pow_vfpdef_opt','varargslist',4,'p_varargslist','parser.py',646),
  ('varargslist -> TIMES vfpdef_opt comma_pow_vfpdef_opt','varargslist',3,'p_varargslist','parser.py',647),
  ('varargslist -> POW vfpdef','varargslist',2,'p_varargslist','parser.py',648),
  ('vfpdef -> NAME','vfpdef',1,'p_vfpdef','parser.py',702),
  ('comma_vfpdef -> COMMA','comma_vfpdef',1,'p_comma_vfpdef','parser.py',706),
  ('comma_vfpdef -> COMMA vfpdef equals_test_opt','comma_vfpdef',3,'p_comma_vfpdef','parser.py',707),
  ('comma_pow_vfpdef -> COMMA POW vfpdef','comma_pow_vfpdef',3,'p_comma_pow_vfpdef','parser.py',715),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','parser.py',719),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','parser.py',720),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','parser.py',725),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','parser.py',726),
  ('semi_opt -> SEMI','semi_opt',1,'p_semi_opt','parser.py',733),
  ('semi_opt -> empty','semi_opt',1,'p_semi_opt','parser.py',734),
  ('semi_small_stmt -> SEMI small_stmt','semi_small_stmt',2,'p_semi_small_stmt','parser.py',740),
  ('simple_stmt -> small_stmt semi_small_stmt_list semi_opt NEWLINE','simple_stmt',4,'p_simple_stmt','parser.py',744),
  ('simple_stmt -> small_stmt semi_opt NEWLINE','simple_stmt',3,'p_simple_stmt','parser.py',745),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt','parser.py',754),
  ('small_stmt -> del_stmt','small_stmt',1,'p_small_stmt','parser.py',755),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt','parser.py',756),
  ('small_stmt -> flow_stmt','small_stmt',1,'p_small_stmt','parser.py',757),
  ('small_stmt -> import_stmt','small_stmt',1,'p_small_stmt','parser.py',758),
  ('small_stmt -> global_stmt','small_stmt',1,'p_small_stmt','parser.py',759),
  ('small_stmt -> nonlocal_stmt','small_stmt',1,'p_small_stmt','parser.py',760),
  ('small_stmt -> assert_stmt','small_stmt',1,'p_small_stmt','parser.py',761),
  ('expr_stmt -> testlist_star_expr augassign yield_expr_or_testlist','expr_stmt',3,'p_expr_stmt','parser.py',782),
  ('expr_stmt -> testlist_star_expr equals_yield_expr_or_testlist_list_opt','expr_stmt',2,'p_expr_stmt','parser.py',783),
  ('expr_stmt -> testlist equals_yield_expr_or_testlist_list_opt','expr_stmt',2,'p_expr_stmt','parser.py',784),
  ('expr_stmt -> test_comma_list_opt star_expr comma_test_list equals_yield_expr_or_testlist','expr_stmt',4,'p_expr_stmt','parser.py',785),
  ('expr_stmt -> test_comma_list_opt star_expr comma_opt test_comma_list_opt equals_yield_expr_or_testlist','expr_stmt',5,'p_expr_stmt','parser.py',786),
  ('test_comma -> test COMMA','test_comma',2,'p_test_comma','parser.py',837),
  ('comma_opt -> COMMA','comma_opt',1,'p_comma_opt','parser.py',841),
  ('comma_opt -> empty','comma_opt',1,'p_comma_opt','parser.py',842),
  ('test_or_star_expr -> test','test_or_star_expr',1,'p_test_or_star_expr','parser.py',848),
  ('test_or_star_expr -> star_expr','test_or_star_expr',1,'p_test_or_star_expr','parser.py',849),
  ('comma_test_or_star_expr -> COMMA test_or_star_expr','comma_test_or_star_expr',2,'p_comma_test_or_star_expr','parser.py',854),
  ('testlist_star_expr -> test_or_star_expr comma_test_or_star_expr_list comma_opt','testlist_star_expr',3,'p_testlist_star_expr','parser.py',858),
  ('testlist_star_expr -> test_or_star_expr comma_opt','testlist_star_expr',2,'p_testlist_star_expr','parser.py',859),
  ('augassign -> PLUSEQUAL','augassign',1,'p_augassign','parser.py',877),
  ('augassign -> MINUSEQUAL','augassign',1,'p_augassign','parser.py',878),
  ('augassign -> TIMESEQUAL','augassign',1,'p_augassign','parser.py',879),
  ('augassign -> ATEQUAL','augassign',1,'p_augassign','parser.py',880),
  ('augassign -> DIVEQUAL','augassign',1,'p_augassign','parser.py',881),
  ('augassign -> MODEQUAL','augassign',1,'p_augassign','parser.py',882),
  ('augassign -> AMPERSANDEQUAL','augassign',1,'p_augassign','parser.py',883),
  ('augassign -> PIPEEQUAL','augassign',1,'p_augassign','parser.py',884),
  ('augassign -> XOREQUAL','augassign',1,'p_augassign','parser.py',885),
  ('augassign -> LSHIFTEQUAL','augassign',1,'p_augassign','parser.py',886),
  ('augassign -> RSHIFTEQUAL','augassign',1,'p_augassign','parser.py',887),
  ('augassign -> POWEQUAL','augassign',1,'p_augassign','parser.py',888),
  ('augassign -> DOUBLEDIVEQUAL','augassign',1,'p_augassign','parser.py',889),
  ('yield_expr_or_testlist -> yield_expr','yield_expr_or_testlist',1,'p_yield_expr_or_testlist','parser.py',894),
  ('yield_expr_or_testlist -> testlist','yield_expr_or_testlist',1,'p_yield_expr_or_testlist','parser.py',895),
  ('equals_yield_expr_or_testlist -> EQUALS yield_expr_or_testlist','equals_yield_expr_or_testlist',2,'p_equals_yield_expr_or_testlist','parser.py',900),
  ('del_stmt -> DEL exprlist','del_stmt',2,'p_del_stmt','parser.py',908),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','parser.py',916),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','parser.py',920),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','parser.py',921),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','parser.py',922),
  ('flow_stmt -> raise_stmt','flow_stmt',1,'p_flow_stmt','parser.py',923),
  ('flow_stmt -> yield_stmt','flow_stmt',1,'p_flow_stmt','parser.py',924),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser.py',929),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','parser.py',933),
  ('return_stmt -> RETURN testlist_opt','return_stmt',2,'p_return_stmt','parser.py',937),
  ('yield_stmt -> yield_expr','yield_stmt',1,'p_yield_stmt','parser.py',941),
  ('raise_stmt -> RAISE','raise_stmt',1,'p_raise_stmt','parser.py',945),
  ('raise_stmt -> RAISE test','raise_stmt',2,'p_raise_stmt','parser.py',946),
  ('raise_stmt -> RAISE test FROM test','raise_stmt',4,'p_raise_stmt','parser.py',947),
  ('import_stmt -> import_name','import_stmt',1,'p_import_stmt','parser.py',967),
  ('import_stmt -> import_from','import_stmt',1,'p_import_stmt','parser.py',968),
  ('import_name -> IMPORT dotted_as_names','import_name',2,'p_import_name','parser.py',973),
  ('import_from_pre -> FROM period_or_ellipsis_list_opt dotted_name','import_from_pre',3,'p_import_from_pre','parser.py',978),
  ('import_from_pre -> FROM period_or_ellipsis_list','import_from_pre',2,'p_import_from_pre','parser.py',979),
  ('import_from_post -> TIMES','import_from_post',1,'p_import_from_post','parser.py',991),
  ('import_from_post -> LPAREN import_as_names RPAREN','import_from_post',3,'p_import_from_post','parser.py',992),
  ('import_from_post -> import_as_names','import_from_post',1,'p_import_from_post','parser.py',993),
  ('import_from -> import_from_pre IMPORT import_from_post','import_from',3,'p_import_from','parser.py',1006),
  ('period_or_ellipsis -> PERIOD','period_or_ellipsis',1,'p_period_or_ellipsis','parser.py',1021),
  ('period_or_ellipsis -> ELLIPSIS','period_or_ellipsis',1,'p_period_or_ellipsis','parser.py',1022),
  ('as_name -> AS NAME','as_name',2,'p_as_name','parser.py',1027),
  ('import_as_name -> NAME as_name_opt','import_as_name',2,'p_import_as_name','parser.py',1031),
  ('comma_import_as_name -> COMMA import_as_name','comma_import_as_name',2,'p_comma_import_as_name','parser.py',1035),
  ('dotted_as_name -> dotted_name as_name_opt','dotted_as_name',2,'p_dotted_as_name','parser.py',1040),
  ('comma_dotted_as_name -> COMMA dotted_as_name','comma_dotted_as_name',2,'p_comma_dotted_as_name','parser.py',1045),
  ('import_as_names -> import_as_name comma_import_as_name_list_opt comma_opt','import_as_names',3,'p_import_as_names','parser.py',1049),
  ('dotted_as_names -> dotted_as_name comma_dotted_as_name_list_opt','dotted_as_names',2,'p_dotted_as_names','parser.py',1058),
  ('period_name -> PERIOD NAME','period_name',2,'p_period_name','parser.py',1066),
  ('dotted_name -> NAME','dotted_name',1,'p_dotted_name','parser.py',1070),
  ('dotted_name -> NAME period_name_list','dotted_name',2,'p_dotted_name','parser.py',1071),
  ('comma_name -> COMMA NAME','comma_name',2,'p_comma_name','parser.py',1076),
  ('global_stmt -> GLOBAL NAME comma_name_list_opt','global_stmt',3,'p_global_stmt','parser.py',1080),
  ('nonlocal_stmt -> NONLOCAL NAME comma_name_list_opt','nonlocal_stmt',3,'p_nonlocal_stmt','parser.py',1088),
  ('comma_test -> COMMA test','comma_test',2,'p_comma_test','parser.py',1098),
  ('assert_stmt -> ASSERT test comma_test_opt','assert_stmt',3,'p_assert_stmt','parser.py',1102),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1115),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1116),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1117),
  ('compound_stmt -> try_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1118),
  ('compound_stmt -> with_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1119),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','parser.py',1120),
  ('compound_stmt -> classdef','compound_stmt',1,'p_compound_stmt','parser.py',1121),
  ('compound_stmt -> decorated','compound_stmt',1,'p_compound_stmt','parser.py',1122),
  ('compound_stmt -> async_stmt','compound_stmt',1,'p_compound_stmt','parser.py',1123),
  ('elif_part -> ELIF test COLON suite','elif_part',4,'p_elif_part','parser.py',1128),
  ('else_part -> ELSE COLON suite','else_part',3,'p_else_part','parser.py',1136),
  ('if_stmt -> IF test COLON suite elif_part_list_opt','if_stmt',5,'p_if_stmt','parser.py',1140),
  ('if_stmt -> IF test COLON suite elif_part_list_opt else_part','if_stmt',6,'p_if_stmt','parser.py',1141),
  ('while_stmt -> WHILE test COLON suite','while_stmt',4,'p_while_stmt','parser.py',1159),
  ('while_stmt -> WHILE test COLON suite else_part','while_stmt',5,'p_while_stmt','parser.py',1160),
  ('for_stmt -> FOR exprlist IN testlist COLON suite','for_stmt',6,'p_for_stmt','parser.py',1170),
  ('for_stmt -> FOR exprlist IN testlist COLON suite else_part','for_stmt',7,'p_for_stmt','parser.py',1171),
  ('async_for_stmt -> ASYNC for_stmt','async_for_stmt',2,'p_async_for_stmt','parser.py',1193),
  ('except_part -> except_clause COLON suite','except_part',3,'p_except_part','parser.py',1198),
  ('finally_part -> FINALLY COLON suite','finally_part',3,'p_finally_part','parser.py',1204),
  ('try_stmt -> TRY COLON suite except_part_list else_part finally_part_opt','try_stmt',6,'p_try_stmt','parser.py',1208),
  ('try_stmt -> TRY COLON suite except_part_list finally_part_opt','try_stmt',5,'p_try_stmt','parser.py',1209),
  ('try_stmt -> TRY COLON suite finally_part','try_stmt',4,'p_try_stmt','parser.py',1210),
  ('with_stmt -> WITH with_item COLON suite','with_stmt',4,'p_with_stmt','parser.py',1231),
  ('with_stmt -> WITH with_item comma_with_item_list COLON suite','with_stmt',5,'p_with_stmt','parser.py',1232),
  ('async_with_stmt -> ASYNC with_stmt','async_with_stmt',2,'p_async_with_stmt','parser.py',1246),
  ('as_expr -> AS expr','as_expr',2,'p_as_expr','parser.py',1251),
  ('with_item -> test','with_item',1,'p_with_item','parser.py',1257),
  ('with_item -> test as_expr','with_item',2,'p_with_item','parser.py',1258),
  ('comma_with_item -> COMMA with_item','comma_with_item',2,'p_comma_with_item','parser.py',1264),
  ('except_clause -> EXCEPT','except_clause',1,'p_except_clause','parser.py',1268),
  ('except_clause -> EXCEPT test as_name_opt','except_clause',3,'p_except_clause','parser.py',1269),
  ('async_stmt -> async_funcdef','async_stmt',1,'p_async_stmt','parser.py',1284),
  ('async_stmt -> async_with_stmt','async_stmt',1,'p_async_stmt','parser.py',1285),
  ('async_stmt -> async_for_stmt','async_stmt',1,'p_async_stmt','parser.py',1286),
  ('suite -> simple_stmt','suite',1,'p_suite','parser.py',1291),
  ('suite -> NEWLINE INDENT stmt_list DEDENT','suite',4,'p_suite','parser.py',1292),
  ('test -> or_test','test',1,'p_test','parser.py',1297),
  ('test -> or_test IF or_test ELSE test','test',5,'p_test','parser.py',1298),
  ('test -> lambdef','test',1,'p_test','parser.py',1299),
  ('test_nocond -> or_test','test_nocond',1,'p_test_nocond','parser.py',1312),
  ('test_nocond -> lambdef_nocond','test_nocond',1,'p_test_nocond','parser.py',1313),
  ('lambdef -> LAMBDA varargslist_opt COLON test','lambdef',4,'p_lambdef','parser.py',1318),
  ('lambdef_nocond -> LAMBDA varargslist_opt COLON test_nocond','lambdef_nocond',4,'p_lambdef_nocond','parser.py',1336),
  ('or_test -> and_test or_and_test_list_opt','or_test',2,'p_or_test','parser.py',1340),
  ('or_and_test -> OR and_test','or_and_test',2,'p_or_and_test','parser.py',1357),
  ('and_test -> not_test and_not_test_list_opt','and_test',2,'p_and_test','parser.py',1361),
  ('and_not_test -> AND not_test','and_not_test',2,'p_and_not_test','parser.py',1378),
  ('not_test -> NOT not_test','not_test',2,'p_not_test','parser.py',1382),
  ('not_test -> comparison','not_test',1,'p_not_test','parser.py',1383),
  ('comparison -> expr comp_op_expr_list_opt','comparison',2,'p_comparison','parser.py',1395),
  ('comp_op_expr -> comp_op expr','comp_op_expr',2,'p_comp_op_expr','parser.py',1408),
  ('comp_op -> LT','comp_op',1,'p_comp_op','parser.py',1425),
  ('comp_op -> GT','comp_op',1,'p_comp_op','parser.py',1426),
  ('comp_op -> EQ','comp_op',1,'p_comp_op','parser.py',1427),
  ('comp_op -> GE','comp_op',1,'p_comp_op','parser.py',1428),
  ('comp_op -> LE','comp_op',1,'p_comp_op','parser.py',1429),
  ('comp_op -> NE','comp_op',1,'p_comp_op','parser.py',1430),
  ('comp_op -> IN','comp_op',1,'p_comp_op','parser.py',1431),
  ('comp_op -> NOT IN','comp_op',2,'p_comp_op','parser.py',1432),
  ('comp_op -> IS','comp_op',1,'p_comp_op','parser.py',1433),
  ('comp_op -> IS NOT','comp_op',2,'p_comp_op','parser.py',1434),
  ('star_expr -> TIMES expr','star_expr',2,'p_star_expr','parser.py',1440),
  ('expr -> xor_expr','expr',1,'p_expr','parser.py',1464),
  ('expr -> xor_expr pipe_xor_expr_list','expr',2,'p_expr','parser.py',1465),
  ('pipe_xor_expr -> PIPE xor_expr','pipe_xor_expr',2,'p_pipe_xor_expr','parser.py',1470),
  ('xor_expr -> and_expr xor_and_expr_list_opt','xor_expr',2,'p_xor_expr','parser.py',1478),
  ('xor_and_expr -> XOR and_expr','xor_and_expr',2,'p_xor_and_expr','parser.py',1482),
  ('and_expr -> shift_expr ampersand_shift_expr_list_opt','and_expr',2,'p_and_expr','parser.py',1490),
  ('ampersand_shift_expr -> AMPERSAND shift_expr','ampersand_shift_expr',2,'p_ampersand_shift_expr','parser.py',1494),
  ('shift_expr -> arith_expr shift_arith_expr_list_opt','shift_expr',2,'p_shift_expr','parser.py',1502),
  ('shift_arith_expr -> LSHIFT arith_expr','shift_arith_expr',2,'p_shift_arith_expr','parser.py',1506),
  ('shift_arith_expr -> RSHIFT arith_expr','shift_arith_expr',2,'p_shift_arith_expr','parser.py',1507),
  ('arith_expr -> term','arith_expr',1,'p_arith_expr','parser.py',1517),
  ('arith_expr -> term pm_term_list','arith_expr',2,'p_arith_expr','parser.py',1518),
  ('pm_term -> PLUS term','pm_term',2,'p_pm_term','parser.py',1551),
  ('pm_term -> MINUS term','pm_term',2,'p_pm_term','parser.py',1552),
  ('term -> factor op_factor_list_opt','term',2,'p_term','parser.py',1558),
  ('op_factor -> TIMES factor','op_factor',2,'p_op_factor','parser.py',1580),
  ('op_factor -> AT factor','op_factor',2,'p_op_factor','parser.py',1581),
  ('op_factor -> DIVIDE factor','op_factor',2,'p_op_factor','parser.py',1582),
  ('op_factor -> MOD factor','op_factor',2,'p_op_factor','parser.py',1583),
  ('op_factor -> DOUBLEDIV factor','op_factor',2,'p_op_factor','parser.py',1584),
  ('factor -> PLUS factor','factor',2,'p_factor','parser.py',1595),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',1596),
  ('factor -> TILDE factor','factor',2,'p_factor','parser.py',1597),
  ('factor -> power','factor',1,'p_factor','parser.py',1598),
  ('power -> atom_expr','power',1,'p_power','parser.py',1611),
  ('power -> atom_expr POW factor','power',3,'p_power','parser.py',1612),
  ('yield_expr_or_testlist_comp -> yield_expr','yield_expr_or_testlist_comp',1,'p_yield_expr_or_testlist_comp','parser.py',1628),
  ('yield_expr_or_testlist_comp -> testlist_comp','yield_expr_or_testlist_comp',1,'p_yield_expr_or_testlist_comp','parser.py',1629),
  ('atom_expr -> atom trailer_list_opt','atom_expr',2,'p_atom_expr','parser.py',1642),
  ('atom_expr -> AWAIT atom trailer_list_opt','atom_expr',3,'p_atom_expr','parser.py',1643),
  ('atom -> LPAREN yield_expr_or_testlist_comp_opt RPAREN','atom',3,'p_atom','parser.py',1692),
  ('atom -> LBRACKET testlist_comp_opt RBRACKET','atom',3,'p_atom','parser.py',1693),
  ('atom -> LBRACE dictorsetmaker_opt RBRACE','atom',3,'p_atom','parser.py',1694),
  ('atom -> NAME','atom',1,'p_atom','parser.py',1695),
  ('atom -> number','atom',1,'p_atom','parser.py',1696),
  ('atom -> string_literal_list','atom',1,'p_atom','parser.py',1697),
  ('atom -> ELLIPSIS','atom',1,'p_atom','parser.py',1698),
  ('atom -> NONE','atom',1,'p_atom','parser.py',1699),
  ('atom -> TRUE','atom',1,'p_atom','parser.py',1700),
  ('atom -> FALSE','atom',1,'p_atom','parser.py',1701),
  ('atom -> REGEXPATH','atom',1,'p_atom','parser.py',1702),
  ('atom -> DOLLAR_NAME','atom',1,'p_atom','parser.py',1703),
  ('atom -> DOLLAR_LBRACE test RBRACE','atom',3,'p_atom','parser.py',1704),
  ('atom -> DOLLAR_LPAREN subproc RPAREN','atom',3,'p_atom','parser.py',1705),
  ('atom -> DOLLAR_LBRACKET subproc RBRACKET','atom',3,'p_atom','parser.py',1706),
  ('string_literal -> STRING','string_literal',1,'p_string_literal','parser.py',1801),
  ('string_literal_list -> string_literal','string_literal_list',1,'p_string_literal_list','parser.py',1807),
  ('string_literal_list -> string_literal_list string_literal','string_literal_list',2,'p_string_literal_list','parser.py',1808),
  ('number -> NUMBER','number',1,'p_number','parser.py',1815),
  ('testlist_comp -> test_or_star_expr comp_for','testlist_comp',2,'p_testlist_comp','parser.py',1819),
  ('testlist_comp -> test_or_star_expr comma_opt','testlist_comp',2,'p_testlist_comp','parser.py',1820),
  ('testlist_comp -> test_or_star_expr comma_test_or_star_expr_list comma_opt','testlist_comp',3,'p_testlist_comp','parser.py',1821),
  ('trailer -> LPAREN arglist_opt RPAREN','trailer',3,'p_trailer','parser.py',1854),
  ('trailer -> LBRACKET subscriptlist RBRACKET','trailer',3,'p_trailer','parser.py',1855),
  ('trailer -> PERIOD NAME','trailer',2,'p_trailer','parser.py',1856),
  ('trailer -> DOUBLE_QUESTION','trailer',1,'p_trailer','parser.py',1857),
  ('trailer -> QUESTION','trailer',1,'p_trailer','parser.py',1858),
  ('subscriptlist -> subscript comma_subscript_list_opt comma_opt','subscriptlist',3,'p_subscriptlist','parser.py',1875),
  ('comma_subscript -> COMMA subscript','comma_subscript',2,'p_comma_subscript','parser.py',1885),
  ('subscript -> test','subscript',1,'p_subscript','parser.py',1889),
  ('subscript -> test_opt COLON test_opt sliceop_opt','subscript',4,'p_subscript','parser.py',1890),
  ('sliceop -> COLON test_opt','sliceop',2,'p_sliceop','parser.py',1899),
  ('expr_or_star_expr -> expr','expr_or_star_expr',1,'p_expr_or_star_expr','parser.py',1903),
  ('expr_or_star_expr -> star_expr','expr_or_star_expr',1,'p_expr_or_star_expr','parser.py',1904),
  ('comma_expr_or_star_expr -> COMMA expr_or_star_expr','comma_expr_or_star_expr',2,'p_comma_expr_or_star_expr','parser.py',1909),
  ('exprlist -> expr_or_star_expr comma_expr_or_star_expr_list comma_opt','exprlist',3,'p_exprlist','parser.py',1913),
  ('exprlist -> expr_or_star_expr comma_opt','exprlist',2,'p_exprlist','parser.py',1914),
  ('testlist -> test comma_test_list COMMA','testlist',3,'p_testlist','parser.py',1930),
  ('testlist -> test comma_test_list','testlist',2,'p_testlist','parser.py',1931),
  ('testlist -> test COMMA','testlist',2,'p_testlist','parser.py',1932),
  ('testlist -> test','testlist',1,'p_testlist','parser.py',1933),
  ('item -> test COLON test','item',3,'p_item','parser.py',1954),
  ('item -> POW expr','item',2,'p_item','parser.py',1955),
  ('comma_item -> COMMA item','comma_item',2,'p_comma_item','parser.py',1971),
  ('dictorsetmaker -> item comp_for','dictorsetmaker',2,'p_dictorsetmaker','parser.py',1975),
  ('dictorsetmaker -> test_or_star_expr comp_for','dictorsetmaker',2,'p_dictorsetmaker','parser.py',1976),
  ('dictorsetmaker -> testlist','dictorsetmaker',1,'p_dictorsetmaker','parser.py',1977),
  ('dictorsetmaker -> test_or_star_expr comma_opt','dictorsetmaker',2,'p_dictorsetmaker','parser.py',1978),
  ('dictorsetmaker -> test_or_star_expr comma_test_or_star_expr_list comma_opt','dictorsetmaker',3,'p_dictorsetmaker','parser.py',1979),
  ('dictorsetmaker -> test COLON testlist','dictorsetmaker',3,'p_dictorsetmaker','parser.py',1980),
  ('dictorsetmaker -> item comma_item_list comma_opt','dictorsetmaker',3,'p_dictorsetmaker','parser.py',1981),
  ('dictorsetmaker -> test COLON test comma_item_list comma_opt','dictorsetmaker',5,'p_dictorsetmaker','parser.py',1982),
  ('classdef -> CLASS NAME func_call_opt COLON suite','classdef',5,'p_classdef','parser.py',2040),
  ('arglist -> argument comma_opt','arglist',2,'p_arglist','parser.py',2070),
  ('arglist -> argument comma_argument_list comma_opt','arglist',3,'p_arglist','parser.py',2071),
  ('comma_argument -> COMMA argument','comma_argument',2,'p_comma_argument','parser.py',2137),
  ('argument -> test_or_star_expr','argument',1,'p_argument','parser.py',2141),
  ('argument -> test comp_for','argument',2,'p_argument','parser.py',2142),
  ('argument -> test EQUALS test','argument',3,'p_argument','parser.py',2143),
  ('argument -> POW test','argument',2,'p_argument','parser.py',2144),
  ('argument -> TIMES test','argument',2,'p_argument','parser.py',2145),
  ('comp_iter -> comp_for','comp_iter',1,'p_comp_iter','parser.py',2187),
  ('comp_iter -> comp_if','comp_iter',1,'p_comp_iter','parser.py',2188),
  ('comp_for -> FOR exprlist IN or_test comp_iter_opt','comp_for',5,'p_comp_for','parser.py',2193),
  ('comp_if -> IF test_nocond comp_iter_opt','comp_if',3,'p_comp_if','parser.py',2210),
  ('yield_expr -> YIELD yield_arg_opt','yield_expr',2,'p_yield_expr','parser.py',2218),
  ('yield_arg -> FROM test','yield_arg',2,'p_yield_arg','parser.py',2233),
  ('yield_arg -> testlist','yield_arg',1,'p_yield_arg','parser.py',2234),
  ('pipe -> PIPE','pipe',1,'p_pipe','parser.py',2324),
  ('pipe -> WS PIPE','pipe',2,'p_pipe','parser.py',2325),
  ('pipe -> PIPE WS','pipe',2,'p_pipe','parser.py',2326),
  ('pipe -> WS PIPE WS','pipe',3,'p_pipe','parser.py',2327),
  ('subproc -> subproc_atoms','subproc',1,'p_subproc','parser.py',2335),
  ('subproc -> subproc_atoms WS','subproc',2,'p_subproc','parser.py',2336),
  ('subproc -> subproc AMPERSAND','subproc',2,'p_subproc','parser.py',2337),
  ('subproc -> subproc pipe subproc_atoms','subproc',3,'p_subproc','parser.py',2338),
  ('subproc -> subproc pipe subproc_atoms WS','subproc',4,'p_subproc','parser.py',2339),
  ('subproc_atoms -> subproc_atom','subproc_atoms',1,'p_subproc_atoms','parser.py',2361),
  ('subproc_atoms -> subproc_atoms WS subproc_atom','subproc_atoms',3,'p_subproc_atoms','parser.py',2362),
  ('subproc_atom -> subproc_arg','subproc_atom',1,'p_subproc_atom','parser.py',2372),
  ('subproc_atom -> string_literal','subproc_atom',1,'p_subproc_atom','parser.py',2373),
  ('subproc_atom -> REGEXPATH','subproc_atom',1,'p_subproc_atom','parser.py',2374),
  ('subproc_atom -> DOLLAR_NAME','subproc_atom',1,'p_subproc_atom','parser.py',2375),
  ('subproc_atom -> GT','subproc_atom',1,'p_subproc_atom','parser.py',2376),
  ('subproc_atom -> LT','subproc_atom',1,'p_subproc_atom','parser.py',2377),
  ('subproc_atom -> RSHIFT','subproc_atom',1,'p_subproc_atom','parser.py',2378),
  ('subproc_atom -> IOREDIRECT','subproc_atom',1,'p_subproc_atom','parser.py',2379),
  ('subproc_atom -> AT_LPAREN test RPAREN','subproc_atom',3,'p_subproc_atom','parser.py',2380),
  ('subproc_atom -> DOLLAR_LBRACE test RBRACE','subproc_atom',3,'p_subproc_atom','parser.py',2381),
  ('subproc_atom -> DOLLAR_LPAREN subproc RPAREN','subproc_atom',3,'p_subproc_atom','parser.py',2382),
  ('subproc_atom -> DOLLAR_LBRACKET subproc RBRACKET','subproc_atom',3,'p_subproc_atom','parser.py',2383),
  ('subproc_arg -> subproc_arg_part','subproc_arg',1,'p_subproc_arg','parser.py',2448),
  ('subproc_arg -> subproc_arg subproc_arg_part','subproc_arg',2,'p_subproc_arg','parser.py',2449),
  ('subproc_arg_part -> NAME','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2460),
  ('subproc_arg_part -> TILDE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2461),
  ('subproc_arg_part -> PERIOD','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2462),
  ('subproc_arg_part -> DIVIDE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2463),
  ('subproc_arg_part -> MINUS','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2464),
  ('subproc_arg_part -> PLUS','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2465),
  ('subproc_arg_part -> COLON','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2466),
  ('subproc_arg_part -> AT','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2467),
  ('subproc_arg_part -> EQUALS','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2468),
  ('subproc_arg_part -> TIMES','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2469),
  ('subproc_arg_part -> POW','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2470),
  ('subproc_arg_part -> MOD','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2471),
  ('subproc_arg_part -> XOR','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2472),
  ('subproc_arg_part -> DOUBLEDIV','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2473),
  ('subproc_arg_part -> ELLIPSIS','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2474),
  ('subproc_arg_part -> NONE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2475),
  ('subproc_arg_part -> TRUE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2476),
  ('subproc_arg_part -> FALSE','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2477),
  ('subproc_arg_part -> NUMBER','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2478),
  ('subproc_arg_part -> STRING','subproc_arg_part',1,'p_subproc_arg_part','parser.py',2479),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',2490),
]
