Metadata-Version: 1.1
Name: pandapower
Version: 1.2.1
Summary: Convenient Power System Modelling and Analysis based on PYPOWER and pandas
Home-page: http://www.uni-kassel.de/go/pandapower
Author: Leon Thurner, Alexander Scheidler
Author-email: leon.thurner@uni-kassel.de, alexander.scheidler@iwes.fraunhofer.de
License: BSD
Description: =============
        pandapower
        =============
        
        .. image:: https://readthedocs.org/projects/pandapower/badge/?version=v1.2.0
           :target: http://pandapower.readthedocs.io/en/develop/?badge=develop
           :alt: Documentation Status
        
        .. image:: https://img.shields.io/pypi/v/pandapower.svg
           :target: https://pypi.python.org/pypi/pandapower
        
        .. image:: https://img.shields.io/pypi/pyversions/pandapower.svg
            :target: https://pypi.python.org/pypi/pandapower
        
        .. image:: https://travis-ci.org/lthurner/pandapower.svg?branch=develop
            :target: https://travis-ci.org/lthurner/pandapower
        
        .. image:: https://coveralls.io/repos/github/lthurner/pandapower/badge.svg?branch=develop
            :target: https://coveralls.io/github/lthurner/pandapower?branch=develop
            
        .. image:: https://api.codacy.com/project/badge/Grade/5d749ed6772e47f6b84fb9afb83903d3
            :target: https://www.codacy.com/app/lthurner/pandapower?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=lthurner/pandapower&amp;utm_campaign=Badge_Grade
        
        .. image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg
            :target: https://github.com/lthurner/pandapower/blob/master/LICENSE
        
        pandapower combines the data analysis library `pandas <http://pandas.pydata.org>`_ and the power flow solver `PYPOWER <https://pypi.python.org/pypi/PYPOWER>`_ to create an easy to use network calculation program
        aimed at automation of analysis and optimization in power systems.
        
        pandapower is a joint development of the research group Energy Management and Power System Operation, University of Kassel and the Department for Distribution System
        Operation at the Fraunhofer Institute for Wind Energy and Energy System Technology (IWES), Kassel.
        
        .. image:: https://www.uni-kassel.de/eecs/typo3temp/pics/f26880008d.png
            :target: https://www.uni-kassel.de/eecs/en/fachgebiete/e2n/home.html
        
        .. image:: http://www.energiesystemtechnik.iwes.fraunhofer.de/content/dam/iwes-neu/energiesystemtechnik/iwes_190x52.gif
           :target: http://www.energiesystemtechnik.iwes.fraunhofer.de/en.html
        
        Element Models
        ---------------
        
        pandapower is an element based network calculation tools that supports the following components:
        
        	- lines
        	- two-winding and three-winding transformers
        	- ideal bus-bus and bus-branch switches
        	- static generators, loads and shunts
        	- external grid connections
        	- synchronous generators
        	- DC lines
        	- network equivalents (unsymmetric impedances, ward equivalents)
        	
        Network Analysis
        ------------------
        
        pandapower supports the following network analysis functions:
        
        	- power flow
        	- optimal power flow
        	- state estimation
        	- short-circuit calculation according to IEC 60909
        	- topological graph searches
        
        For more information, please referr to the `documentation <https://pandapower.readthedocs.io>`_.
        
        Installation notes can be found `here <http://pandapower.readthedocs.io/en/develop/getting_started/installation.html>`_.
        
        For a comfortable introduction into pandapower see the `interactive tutorials <http://pandapower.readthedocs.io/en/develop/getting_started/tutorials.html>`_.
        
        
        
        Change Log
        =============
        
        [1.2.0] - 2017-03-21
        --------------------
        - [CHANGED] net.line.imax_ka to net.line.max_i_ka for consistency reasons
        - [ADDED] net.line.tp_st_degree for phase shift in trafo tap changers
        - [ADDED] sn_kva parameter in create_empty network for per unit system reference power
        - [ADDED] parameter parallel for trafo element
        - [ADDED] connectivity check for power flow to deal with disconnected network areas
        - [ADDED] backward/forward sweep power flow algorithm specially suited for radial and weakly-meshed networks
        - [ADDED] linear piece wise and polynomial OPF cost functions 
        - [ADDED] possibility to make loads controllable in OPF
        - [ADDED] to_json and from_json functions to save/load networks with a JSON format
        - [ADDED] generator lookup to allow multiple generators at one bus
        - [CHANGED] Initialization of calculate_voltage_angles and init for high voltage networks
        - [ADDED] bad data detection for state estimation
        - [CHANGED] from_ppc: no detect_trafo anymore, several gen at each node possible
        - [CHANGED] validate_from_ppc: improved validation behaviour by means of duplicated gen and branch rearangement
        - [ADDED] networks: case33bw, case118, case300, case1354pegase, case2869pegase, case9241pegase, GBreducednetwork, GBnetwork, iceland, cigre_network_mv with_der='all' der
        - [ADDED] possibility to add fault impedance for short-circuit current calculation
        - [ADDED] branch results for short circuits
        - [ADDED] static generator model for short circuits
        - [ADDED] three winding transformer model for short circuits
        - [FIXED] correctly neglecting shunts and tap changer position for short-circuits
        - [ADDED] two phase short-circuit current calculation
        - [ADDED] tests for short circuit currents with validation against DIgSILENT PowerFactory
        
        
        [1.1.1] - 2017-01-12
        ----------------------
        - [ADDED] installation description and pypi files from github
        - [ADDED] automatic inversion of active power limits in convert format to account for convention change in version 1.1.0
        - [CHANGED] install_requires in setup.py
        
        
        [1.1.0] - 2017-01-11
        ----------------------
        - [ADDED] impedance element can now be used with unsymetric impedances zij != zji
        - [ADDED] dcline element that allows modelling DC lines in PF and OPF
        - [ADDED] simple plotting function: call pp.simple_plot(net) to directly plot the network
        - [ADDED] measurement table for networks. Enables the definition of measurements for real-time simulations.
        - [ADDED] estimation module, which provides state estimation functionality with weighted least squares algorithm
        - [ADDED] shortcircuit module in beta version for short-circuit calculation according to IEC-60909
        - [ADDED] documentation of model validation and tests
        - [ADDED] case14, case24_ieee_rts, case39, case57 networks
        - [ADDED] mpc and ppc converter
        - [CHANGED] convention for active power limits of generators. Generator with max. feed in of 50kW before: p_min_kw=0, p_max_kw=-50. Now p_max_kw=0, p_min_kw=50
        - [ADDED] DC power flow function pp.rundcopp
        - [FIXED] bug in create_transformer function for tp_pos parameter
        - [FIXED] bug in voltage ratio for low voltage side tap changers
        - [FIXED] bug in rated voltage calculation for opf line constraints
        
        [1.0.2] - 2016-11-30
        ----------------------
        
        - [CHANGED] changed in_service dtype from f8 to bool for shunt, ward, xward
        - [CHANGED] included i_from_ka and i_to_ka in net.res_line
        - [ADDED] recycle parameter added. ppc, Ybus, is_elems and bus_lookup can be reused between multiple powerflows if recycle["ppc"] == True, ppc values (P,Q,V) only get updated.
        - [FIXED] OPF bugfixes: cost scaling, correct calculation of res_bus.p_kw for sgens
        - [ADDED] loadcase added as pypower_extension since unnecessary deepcopies were removed
        - [CHANGED] supress warnings parameter removed from loadflow, casting warnings are automatically supressed
        
        [1.0.1] - 2016-11-09
        ----------------------
        
        - [CHANGED] update short introduction example to include transformer
        - [CHANGED] included pypower in setup.py requirements (only pypower, not numpy, scipy etc.)
        - [CHANGED] mpc / ppc renamed to ppci / ppc
        - [FIXED] MANIFEST.ini includes all relevant doc files and exclude report
        - [FIXED] handling of tp_pos parameter in create_trafo and create_trafo3w
        - [FIXED] init="result" for open bus-line switches
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Scientific/Engineering
