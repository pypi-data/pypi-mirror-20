component_name "compoent"
{
	# please describe your interface signals
	in_out_signals{
		{%- set  ul = ul_list[0] -%}{%- set ports = ul.ports -%}
		{% for port in ports %}
		# {% if port.__class__.__name__ == "Input" %}input {{port.bit}} {{port.name}}
		{%- elif port.__class__.__name__ == "Output" %}output {{port.bit}} {{port.name}}
		{%- elif port.__class__.__name__ == "Inout" %}inout {{port.bit}} {{port.name}}
		{%- endif %}{% if loop.index < (ul.ports|length) %},{% endif %}
		{%- endfor %}
	}

	# please describe your opsion signals
	option_signals{
		{%- set  ul = ul_list[0] -%}{%- set ports = ul.ports -%}
		{% for port in ports %}
		# {% if port.__class__.__name__ == "Input" %}reg {{port.bit}} {{port.name}}
		{%- elif port.__class__.__name__ == "Output" %}wire {{port.bit}} {{port.name}}
		{%- endif %}{% if loop.index < (ul.ports|length) %},{% endif %}
		{%- endfor %}
	}

	communication xillybus{
	# 	rcv_cycle 1,
	# 	snd_cycle 1,
	# 	condition "1",
	# 	fifo_width 32,
	# 	rcv = dummy,
	# 	snd = dummy
	}

	{% for ul in ul_list %}
	userlogic_path "{{ul.filepath}}" instance_name "uut"
	{
	{%- for port in ul.ports %}
		{{port.__class__.__name__[0].lower() + port.__class__.__name__[1:]}} {{port.bit}} {{port.name}} = {{port.name}}
		{%- if loop.index < ul.ports | length %},{% endif %}{% endfor %}
	}
	{% endfor %}
	# generate_ros_package

}