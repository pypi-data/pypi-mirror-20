# -*- coding: utf-8 -*-
from bridge import Xillybus

{%- for com in comp.module['communication'] %}
class {{(comp.name[0]).upper() + comp.name[1:]}}_{{com.fifo_width}}(Xillybus):
	def __init__(self):
		Xillybus.__init__(self, {{com.fifo_width}})
		{%- for input_var in input_var_list %}
		{%- set (signame, bitwidth, sigwidth, depth) = input_var -%}{% if bitwidth == com.fifo_width%}
		self.{{signame}} = 0{% endif %}
		{%- endfor %}
		{%- for output_var in output_var_list %}
		{%- set (signame, bitwidth, sigwidth, depth) = output_var -%}{% if bitwidth == com.fifo_width%}
		# self.{{signame}} = 0{% endif %}
		{% endfor %}
	def pack_{{com.fifo_width}}((self):
		data = 0
		{%- set  total_bit = 0 -%}
		{%- set  once = False -%}
		{% for input_var in input_var_list %}
		{%- set (signame, bitwidth, sigwidth, depth) = input_var -%}{% if bitwidth == com.fifo_width %}
		data = data + (self.{{signame}} << {% if not once %}0){% else %}{{total_bit}}){% endif %}{%- set  total_bit = total_bit + sigwidth -%}{% endif %}
		{%- set  once = True -%}
		{% endfor %}
		data = self.adjust(data, mode = {% if com.fifo_width == 32 %}32{% else%}8{% endif %})
		return data
{%- endfor %}
def main():
	{% for com in comp.module['communication'] -%}
	{{comp.name}}_{{com.fifo_width}} = {{(comp.name[0]).upper() + comp.name[1:]}}_{{com.fifo_width}}()
	{% if com.rcv_cycle -%}
	{{comp.name}}_{{com.fifo_width}}.open_dev_write()
	{%- endif %}
	{% if com.snd_cycle -%}
	{{comp.name}}_{{com.fifo_width}}.open_dev_read()
	{%- endif %}
	{% endfor %}

	{%- for com in comp.module['communication'] -%}
	{%- for input_var in input_var_list %}
	{%- set (signame, bitwidth, sigwidth, depth) = input_var -%}{% if bitwidth == com.fifo_width%}
	# {{comp.name}}_{{com.fifo_width}}.{{signame}} = 0{% endif %}
	{%- endfor %}
	{% endfor %}
# ================================================
	{% for com in comp.module['communication'] -%}
	{% if com.rcv_cycle -%}
	# data = {{comp.name}}_{{com.fifo_width}}.pack()
	# {{comp.name}}_{{com.fifo_width}}.write(data)
	{%- endif %}
	{% if com.snd_cycle -%}
	# {{comp.name}}_{{com.fifo_width}}.read(data_size)
	{%- endif %}
	{% endfor %}
# ================================================

	{% for com in comp.module['communication'] -%}
	{% if com.rcv_cycle -%}
	{{comp.name}}_{{com.fifo_width}}.close_dev_write()
	{%- endif %}
	{% if com.snd_cycle -%}
	{{comp.name}}_{{com.fifo_width}}.close_dev_read()
	{%- endif %}
	{% endfor %}

if __name__ == '__main__':
	main()