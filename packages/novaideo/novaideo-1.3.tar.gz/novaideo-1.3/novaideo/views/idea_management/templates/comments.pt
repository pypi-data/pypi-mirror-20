<div class="comments-container">
  <div class="comment-loading hide-bloc"
    tal:condition="origin">
    <img src="${request.static_url('novaideo:static/images/progress_bar.gif')}" width="30" alt="loading"/></div>
  <ul class="${(origin and 'commentulorigin') or 'commentul'}"
      i18n:domain="novaideo"
      data-nex_url="${(origin and batch.next_url)}"
      data-origin_url="${(origin and batch.origin_url)}"
      >
    <tal:loop repeat="comment_data enumerate(comments)">
      <li class="view-item commentli ${repeat['comment_data'].end>0 and 'last' or ''} ${ (i>=level and not origin) and 'hide-bloc' or ''} component-obj-view component-listing-view" 
          id="comment_${oid}"
          data-component_type="object-view"
          data-association="${(contents and 'true') or 'false'}"
          data-comment_id="${oid}"
          tal:define="
              (i, item) comment_data;
              diff view._datetimedelta(item['context'].created_at);
              comment item['context'];
              author comment.author;
              contents comment.get_related_contents(current_user);
              picture getattr(author, 'picture', None);
              profil_picture getattr(picture, 'profil', None);
              oid getattr(comment, '__oid__', 'None');
              id 'comment-'+str(oid);
              attached_files comment.files;
              default_img request.static_url('novaideo:static/images/user.png');
              is_censored 'censored' in comment.state;
              to_hide is_censored and not (view.is_moderator or current_user is comment.author)">
         <div id="${id}" class="view-item-title thumbnail right-caption span4 comment-data"
             data-title="${getattr(author, 'title', author.__name__)}"
             data-icon="${getattr(comment, 'icon', '')}"
             data-img="${getattr(profil_picture, 'url', default_img)}"
             >
            <img tal:condition="picture is not None" class="img-circle" tal:attributes="src getattr(picture, 'profil', picture).url"  width="30"/>
            <img tal:condition="picture is None" class="img-circle" src="${request.static_url('novaideo:static/images/user.png')}" width="30"/>
            <div class="media-body comment-content">
              <div class="comment-menu">
                  <div tal:replace="structure item['menu_body']"/>
              </div>
              <div class="comment-author" tal:define="
                diff_len  len(diff.keys());
                is_unread_comment oid in unread_comments
                ">
                <a 
                  data-oid="${getattr(author, '__oid__', '')}"
                  class="toggle-popover"
                  tal:attributes="href request.resource_url(author, '@@index')">${getattr(author, 'title', author.name)}</a>
                <div title="${layout.to_localized_time(comment.created_at)}" class="${is_unread_comment and 'unread-comment' or ''} comment-detail-container">
                  <span tal:condition="is_unread_comment" class="unread-comment-tag" i18n:translate="">New comment</span>
                  <div  tal:omit-tag="" tal:condition="diff">
                    <span i18n:translate="">For</span>  
                    <span tal:condition="'days' in diff">${diff['days']} <span i18n:translate="">day(s)</span></span> 
                    <span tal:condition="'hours' in diff">${diff['hours']} <span i18n:translate="">hour(s)</span></span> 
                    <span tal:condition="'minutes' in diff">${diff['minutes']} <span i18n:translate="">minute(s)</span></span>
                    <span tal:condition="diff_len == 1 and 'seconds' in diff">${diff['seconds']} <span i18n:translate="">second(s)</span></span>
                  </div>
                  <span tal:condition="diff_len == 0" i18n:translate="">Now</span> - <span class="glyphicon glyphicon-question-sign"></span> <span i18n:translate="">His/her intention:</span> 
                  <span tal:condition="getattr(comment, 'intention', None)" i18n:translate="" tal:content="comment.intention"/>
                </div>
                </div>
                <div tal:condition="is_censored">
                 <div class="alert-terms-of-use" i18n:translate="">
                  This content does not respect the terms of use.
                 </div>
                </div>
              <div tal:condition="not to_hide" tal:omit-tag="" >
              <div class="content-text"  i18n:domain="novaideo"
                tal:define="files comment.get_attached_files_data();
                            len_files len(files)">
                <div class="row">
                    <div class="col-xs-12 col-md-12">
                      <div class="object-text">
                        <div>${structure:getattr(comment, 'formatted_comment', comment.comment)}</div>
                        <div tal:condition="getattr(comment, 'edited', False)" i18n:translate="" style="color: gray">(edited)</div>
                      </div>
                    </div>
                    <div class="col-xs-12 col-md-4" tal:condition="files">
                        <div class="file-slider">
                          <div id="filecarousel-${id}" data-ride="carousel" data-interval="3000" class="carousel slide"> 
                            <div role="listbox" class="carousel-inner">
                                  <div tal:repeat="(i, source) enumerate(files)" class="item ${i==0 and 'active'}">
                                     <a tal:condition="source['type'] == 'img'" href="${source['content']}" target="_blank">
                                       <div 
                                        class="img-content"
                                        data-holder-rendered="true"
                                        style="
                                          background: rgba(0, 0, 0, 0) url(${source['content']}) no-repeat scroll center center / cover">
                                       </div>
                                     </a>
                                     <object tal:condition="source['type'] == 'flash'" width="300" height="90" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=11,2,202,451" >
                                      <param name="movie" value="${source['content']}">
                                      <param name="quality" value="high">
                                      <embed src="${source['content']}" quality="high" class="img-content" 
                                        type="application/x-shockwave-flash" 
                                                  pluginspage="http://www.macromedia.com/go/getflashplayer">
                                      </embed>
                                     </object>
                                  </div>
                            </div>
                            <div tal:omit-tag="" tal:condition="len_files>1">
                              <a class="left carousel-control" href="#filecarousel-${id}" role="button" data-slide="prev">
                                <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                              </a>
                              <a class="right carousel-control" href="#filecarousel-${id}" role="button" data-slide="next">
                                <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                              </a>
                            </div>
                          </div>
                          <script>
                            deform.addCallback(
                                 'filecarousel-${id}',
                                 function(oid) {
                                   $('#' + oid).carousel();
                                 }
                               );
                          </script>
                     </div>
                    </div>
                    <div class="col-xs-12 col-md-12">
                      <div class="object-text">
                        <div>${structure:getattr(comment, 'formatted_urls', '')}</div>
                      </div>
                    </div>
                </div>

              </div>
              <div tal:condition="attached_files or contents" class="attached-files">
                <small>
                 <blockquote class="attached-contents">
                    <dl >
                      <div tal:omit-tag=""
                           tal:condition="attached_files"
                           tal:define="file_len len(attached_files)">
                          <dt tal:condition="file_len>1"><span class="glyphicon glyphicon-paperclip"></span>  <span i18n:translate="">Attachments:</span></dt>
                          <dt tal:condition="file_len==1" ><span class="glyphicon glyphicon-paperclip"></span>  <span i18n:translate="">Attachment:</span></dt>
                          <dd>
                              <tal:loop repeat="f layout.render_files(attached_files)">
                                <div tal:replace="structure f"/>
                              </tal:loop>
                          </dd>
                      </div>
                      <div tal:omit-tag=""
                           tal:condition="contents"
                           >
                        <div tal:omit-tag="" tal:define="
                           contents_len len(contents)">
                           <dt tal:condition="contents_len > 1"><span class="glyphicon glyphicon-link"></span> <span i18n:translate="">Associated contents:</span></dt>
                           <dt tal:condition="contents_len == 1" ><span class="glyphicon glyphicon-link"></span> <span i18n:translate="">Associated content:</span></dt>
                           <dd tal:condition="contents">
                             <tal:loop repeat="f contents">
                                 <a 
                                  data-oid="${getattr(f, '__oid__', '')}"
                                  class="toggle-popover"
                                  tal:attributes="href request.resource_url(f, '@@index')"><span class="${getattr(f, 'icon', '')}"></span> ${f.title}</a>
                                 <tal:separator condition="not: repeat['f'].end">, </tal:separator> 
                             </tal:loop>
                           </dd>
                        </div>
                      </div>

                 </dl>
                 </blockquote>
                </small>
              </div>
              <div class="footer-actions-bodies">
                <div tal:repeat="a item['footer_actions_body']" >
                  <div tal:replace="structure a"/>
                </div>
              </div>
              <div tal:condition="item['footer_body']" class="content-footer">
                <div class="actions-block">
                    <div tal:replace="structure item['footer_body']"/>
                </div>
              </div>
            </div>
              <div tal:condition="not filtered" class="comment-replay-nb-container pull-right" tal:define="commentlen len(comment.comments)">
                <span tal:condition="commentlen-level > 0" 
                      class="comment-replay-nb closed"
                      onclick="javascript:replays_show(this);">
                  <small>
                    <span class="glyphicon glyphicon-chevron-down"></span> 
                    <span class="comment-replay-message-opened" i18n:translate="">View all <span i18n:name="commentlen">${commentlen}</span> answers</span>
                    <span class="comment-replay-message-closed hide-bloc" i18n:translate="">Hide answers</span>
                  </small>
                </span>
                <span tal:condition="commentlen-level <= 0 and commentlen > 0" 
                    class="comment-replay-nb disabled">
                  <small>
                    <span tal:condition="commentlen==1" class="comment-replay-message-opened" i18n:translate=""><span i18n:name="commentlen">${commentlen}</span> answer</span>
                    <span tal:condition="commentlen>1" class="comment-replay-message-opened" i18n:translate=""><span i18n:name="commentlen">${commentlen}</span> answers</span>
                  </small>
                </span>
              </div>
            </div>
         </div>
         <ul  class="commentul replay-bloc hide-bloc">
          <li>
            <div id="action-comment-replay-container-${getattr(item['context'], '__oid__', '')}" class="replay-body">
              <div class="comment-data ">
                 <div class="media-body">
                 </div>
              </div>     
            </div>
          </li>
         </ul>
        <div tal:condition="not filtered"  tal:define="(body, r) view._rendre_comments(comment.comments, current_user, unread_comments=unread_comments)" tal:replace="structure body" />
      </li>
    </tal:loop>
      <li class="commentli comment-preview hide-bloc" tal:define="current_picture getattr(current_user, 'picture', None)">
        <div class="thumbnail right-caption span4 comment-data">
            <img tal:condition="current_picture is not None" class="img-circle" tal:attributes="src getattr(current_picture, 'profil', current_picture).url"  width="30"/>
            <img tal:condition="current_picture is None" class="img-circle" src="${request.static_url('novaideo:static/images/user.png')}" width="30"/>
            <div class="media-body comment-content">
              <small class="comment-author">
                <a tal:attributes="href request.resource_url(current_user, '@@index')">${getattr(current_user, 'title', current_user.name)}</a><span class="comment-loading-icon ion-refreshing"></span>
                <div class="comment-detail-container">
                  <span i18n:translate="">Now</span> - <span class="glyphicon glyphicon-question-sign"></span> <span i18n:translate="">His/her intention:</span>
                </div>
              </small>
              <div class="object-text">
                <p class="emoji-container">
                  <div class="comment-preview-text"></div>     
                </p>
              </div>
            </div>
         </div>
      </li>
  </ul>
</div>

