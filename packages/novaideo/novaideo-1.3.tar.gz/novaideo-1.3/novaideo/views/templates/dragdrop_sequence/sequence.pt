<div tal:define="item_tmpl item_template|field.widget.item_template;
                 oid oid|field.oid;
                 name name|field.name;
                 min_len min_len|field.widget.min_len;
                 min_len min_len or 0;
                 max_len max_len|field.widget.max_len;
                 max_len max_len or 100000;
                 now_len len(subfields);
                 orderable orderable|field.widget.orderable;
                 orderable orderable and 1 or 0;
                 prototype field.widget.prototype(field);
                 title title|field.title;
                 item_title item_title|field.widget.item_title_template;"
     class="deform-seq"
     id="${oid}">

  <style>
    body.dragging, body.dragging * {
      cursor: move !important;
    }

    .dragged {
      position: absolute;
      opacity: 0.5;
      z-index: 2000;
    }
  </style>   

  <!-- sequence -->
  <input type="hidden" name="__start__"
         value="${field.name}:sequence"
         class="deform-proto"
         tal:attributes="prototype prototype"/>

  <div class="panel-default drag-drop-panel">
    <h3>${title}</h3>
    <div class="panel-body" style="padding-bottom: 30px">

      <div class="deform-seq-container drag-drop-container"
           id="${oid}-orderable"
           tal:define="subfields [ x[1] for x in subfields ];">
          <div tal:condition="subfields"
               tal:define="titles [f.title for f in subfields[0].children]"
               class="form-group header sequence-item col-md-12 ">
            <div class="row">
                <div tal:repeat="head_title titles" class="col-md-4"  >
                  <h4 class="title">${head_title}</h4>
               </div>
            </div>
          </div>
          <div tal:repeat="subfield subfields"
               tal:replace="structure subfield.render_template(item_tmpl, 
                                                          parent=field)" />
        <span class="deform-insert-before"
              tal:attributes="
                 min_len min_len;
                 max_len max_len;
                 now_len now_len;
                 orderable orderable;
                 item_title item_title;"></span>
      </div>

    </div>

    <div >
      <a href="#"
         class="add-amendment-item deform-seq-add sequence-add-item pull-right"
         id="${field.oid}-seqAdd"
         onclick="javascript: deform.appendSequenceItem(this); $(this).trigger( jQuery.Event( 'itemadded' ) ); return false;">
         <small id="${field.oid}-addtext" class="glyphicon glyphicon-plus-sign"></small>
      </a>

      <script type="text/javascript">
       deform.addCallback(
         '${field.oid}',
         function(oid) {
           oid_node = $('#'+ oid);
           deform.processSequenceButtons(oid_node, ${min_len},
                                         ${max_len}, ${now_len},
                                         ${orderable});
           }
         )
      </script>

      <input type="hidden" name="__end__" value="${field.name}:sequence"/>
      <!-- /sequence -->
    </div>

  </div>
</div>
