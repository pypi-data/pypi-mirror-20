
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B63E3EB73EE76D843D0A6E78EC4567FF'
    
_lr_action_items = {'REGEX':([32,41,56,87,104,110,112,122,136,146,147,151,152,164,174,175,187,188,190,200,220,228,],[50,50,50,50,50,50,50,50,50,-47,177,50,50,50,-50,-48,50,50,50,-49,50,50,]),'REL':([78,112,146,174,175,200,],[113,141,-47,-50,-48,-49,]),'AND':([18,28,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,76,83,99,102,107,111,133,137,153,154,155,156,158,159,167,178,184,185,204,205,206,207,208,209,210,211,212,223,],[-110,-113,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-76,-103,-80,-78,-84,-75,-79,-83,-110,187,-62,-61,-66,-67,-85,187,-63,187,-55,-65,-59,187,-103,-56,-58,-104,-57,-64,]),'DEFINED':([186,218,],[205,223,]),'END':([6,11,16,18,27,28,46,48,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,76,82,83,90,93,95,99,102,107,111,125,126,127,130,132,133,137,149,150,167,179,180,183,192,193,194,201,202,203,217,219,226,227,],[-15,-14,-16,-110,-17,-113,-114,92,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-76,-20,-103,124,-29,128,-80,-78,-84,-75,-28,-34,162,-30,92,-79,-83,180,-21,-85,201,-41,-19,-35,-32,-31,-40,217,-18,-39,-33,-93,-94,]),'EXTENDS':([31,],[49,]),'IMPLEMENT':([0,1,6,8,10,11,13,14,16,17,18,19,20,21,22,25,27,28,44,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,72,76,82,83,88,89,91,92,99,102,107,111,117,120,124,128,133,137,139,146,148,150,153,154,155,156,158,159,160,162,166,167,171,172,174,175,177,178,180,184,199,200,201,204,205,206,207,208,209,210,211,212,217,221,222,223,],[2,-5,-15,-105,-7,-14,-10,2,-16,-9,-110,-4,-3,-11,-6,-8,-17,-113,-12,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,-20,-103,-36,-102,-22,-26,-80,-78,-84,-75,-53,-13,-25,-27,-79,-83,-54,-47,-38,-21,-110,-37,-62,-61,-66,-67,-101,-24,-23,-85,-44,-46,-50,-48,-51,-52,-41,-63,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-43,-45,-64,]),'TYPEDEF':([0,1,6,8,10,11,13,14,16,17,18,19,20,21,22,25,27,28,44,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,72,76,82,83,88,89,91,92,99,102,107,111,117,120,124,128,133,137,139,146,148,150,153,154,155,156,158,159,160,162,166,167,171,172,174,175,177,178,180,184,199,200,201,204,205,206,207,208,209,210,211,212,217,221,222,223,],[12,-5,-15,-105,-7,-14,-10,12,-16,-9,-110,-4,-3,-11,-6,-8,-17,-113,-12,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,-20,-103,-36,-102,-22,-26,-80,-78,-84,-75,-53,-13,-25,-27,-79,-83,-54,-47,-38,-21,-110,-37,-62,-61,-66,-67,-101,-24,-23,-85,-44,-46,-50,-48,-51,-52,-41,-63,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-43,-45,-64,]),'SEP':([5,18,30,44,58,71,89,96,118,153,181,211,],[33,-110,33,86,101,-109,86,86,86,-110,33,86,]),'WHEN':([18,71,88,89,160,],[-110,-109,122,-102,-101,]),'OR':([18,28,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,76,83,99,102,107,111,133,137,153,154,155,156,158,159,167,178,184,185,204,205,206,207,208,209,210,211,212,223,],[-110,-113,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-76,-103,-80,-78,-84,-75,-79,-83,-110,188,-62,-61,-66,-67,-85,188,-63,188,-55,-65,-59,-60,-103,-56,-58,-104,-57,-64,]),')':([18,28,32,35,46,50,51,52,53,54,55,57,58,59,60,61,62,64,65,66,67,68,70,71,75,76,83,99,102,107,108,109,111,133,135,137,140,153,155,156,158,159,167,169,184,185,196,204,205,206,207,208,209,210,211,212,223,],[-110,-113,65,76,-114,-89,-73,-69,-68,-72,-87,-88,-104,102,-70,-92,-86,-74,-77,-71,-100,-90,-91,-109,111,-76,-103,-80,-78,-84,-112,139,-75,-79,-99,-83,-98,-110,-62,-61,-66,-67,-85,-111,-63,204,-97,-55,-65,-59,-60,-103,-56,-58,-104,-57,-64,]),']':([18,28,46,50,51,52,53,54,55,56,57,58,60,61,62,64,65,66,67,68,70,71,76,83,99,100,102,107,111,115,129,133,134,135,137,140,144,145,167,176,196,220,224,225,229,],[-110,-113,-114,-89,-73,-69,-68,-72,-87,99,-88,-104,-70,-92,-86,-74,-77,-71,-100,-90,-91,-109,-76,-103,-80,133,-78,-84,-75,146,163,-79,167,-99,-83,-98,174,175,-85,200,-97,226,227,-95,-96,]),'(':([5,8,9,18,34,58,63,71,72,116,122,147,151,152,153,181,187,188,],[32,-105,35,-110,73,32,35,-109,-106,35,152,152,152,152,-110,32,152,152,]),'ID':([0,1,2,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,35,36,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,58,60,61,62,64,65,66,67,68,70,71,72,73,76,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,101,102,103,104,107,110,111,112,117,120,122,123,124,125,126,127,128,130,131,132,133,135,136,137,138,139,141,142,143,146,147,148,149,150,151,152,153,154,155,156,158,159,160,162,163,166,167,170,171,172,173,174,175,177,178,180,182,183,184,187,188,189,190,191,192,193,194,197,198,199,200,201,204,205,206,207,208,209,210,211,212,217,219,221,222,223,226,227,],[18,-5,18,-15,18,-105,37,-7,-14,39,-10,18,-16,-9,-110,-4,-3,-11,-6,43,18,-8,45,-17,-113,18,71,74,77,18,83,-12,-114,18,18,18,-89,-73,-69,-68,-72,-87,18,-88,-104,-70,-92,-86,-74,-77,-71,-100,-90,-91,-109,-106,108,-76,18,18,-20,-103,18,120,71,18,-36,-102,18,-22,-26,-29,126,18,130,-80,71,-78,74,18,-84,18,-75,18,-53,-13,153,18,-25,-28,-34,18,-27,-30,18,18,-79,-99,18,-83,108,-54,18,18,18,-47,153,-38,18,-21,153,153,-110,-37,-62,-61,-66,-67,-101,-24,193,-23,-85,74,-44,-46,199,-50,-48,-51,-52,-41,18,18,-63,153,153,208,18,18,-35,-32,-31,215,216,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-33,-43,-45,-64,-93,-94,]),'$end':([1,3,6,8,10,11,13,14,16,17,18,19,20,21,22,25,27,28,40,44,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,72,76,82,83,88,89,91,92,99,102,107,111,117,120,124,128,133,137,139,146,148,150,153,154,155,156,158,159,160,162,166,167,171,172,174,175,177,178,180,184,199,200,201,204,205,206,207,208,209,210,211,212,217,221,222,223,],[-5,0,-15,-105,-7,-14,-10,-2,-16,-9,-110,-4,-3,-11,-6,-8,-17,-113,-1,-12,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,-20,-103,-36,-102,-22,-26,-80,-78,-84,-75,-53,-13,-25,-27,-79,-83,-54,-47,-38,-21,-110,-37,-62,-61,-66,-67,-101,-24,-23,-85,-44,-46,-50,-48,-51,-52,-41,-63,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-43,-45,-64,]),'STRING':([32,41,56,69,87,104,110,112,122,136,146,147,151,152,164,174,175,187,188,190,195,200,220,228,],[61,61,61,105,61,61,61,61,61,61,-47,61,61,61,61,-50,-48,61,61,61,105,-49,61,61,]),'=':([5,15,18,71,74,83,126,130,181,193,],[-104,41,-110,-109,110,-103,161,164,-104,213,]),',':([8,18,28,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,67,68,70,71,72,76,83,89,97,99,102,107,108,111,133,137,140,167,168,225,],[-105,-110,-113,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,104,-90,-91,-109,-106,-76,-103,123,131,-80,-78,-84,138,-75,-79,-83,170,-85,195,228,]),'USING':([8,29,72,],[-105,47,-106,]),'FLOAT':([32,41,56,87,104,110,112,122,136,146,147,151,152,164,174,175,187,188,190,200,220,228,],[55,55,55,55,55,55,55,55,55,-47,55,55,55,55,-50,-48,55,55,55,-49,55,55,]),'MATCHING':([18,71,118,],[-110,-109,147,]),'IMPLEMENTATION':([0,1,6,8,10,11,13,14,16,17,18,19,20,21,22,25,27,28,44,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,72,76,82,83,88,89,91,92,99,102,107,111,117,120,124,128,133,137,139,146,148,150,153,154,155,156,158,159,160,162,166,167,171,172,174,175,177,178,180,184,199,200,201,204,205,206,207,208,209,210,211,212,217,221,222,223,],[23,-5,-15,-105,-7,-14,-10,23,-16,-9,-110,-4,-3,-11,-6,-8,-17,-113,-12,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,-20,-103,-36,-102,-22,-26,-80,-78,-84,-75,-53,-13,-25,-27,-79,-83,-54,-47,-38,-21,-110,-37,-62,-61,-66,-67,-101,-24,-23,-85,-44,-46,-50,-48,-51,-52,-41,-63,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-43,-45,-64,]),'INDEX':([0,1,6,8,10,11,13,14,16,17,18,19,20,21,22,25,27,28,44,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,72,76,82,83,88,89,91,92,99,102,107,111,117,120,124,128,133,137,139,146,148,150,153,154,155,156,158,159,160,162,166,167,171,172,174,175,177,178,180,184,199,200,201,204,205,206,207,208,209,210,211,212,217,221,222,223,],[7,-5,-15,-105,-7,-14,-10,7,-16,-9,-110,-4,-3,-11,-6,-8,-17,-113,-12,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,-20,-103,-36,-102,-22,-26,-80,-78,-84,-75,-53,-13,-25,-27,-79,-83,-54,-47,-38,-21,-110,-37,-62,-61,-66,-67,-101,-24,-23,-85,-44,-46,-50,-48,-51,-52,-41,-63,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-43,-45,-64,]),'[':([8,18,32,37,41,56,63,71,72,77,87,96,104,110,112,113,122,136,146,147,151,152,174,175,187,188,190,191,200,213,215,216,],[-105,-110,56,79,56,56,103,-109,-106,79,56,129,56,56,56,79,56,56,-47,56,56,56,-50,-48,56,56,56,56,-49,220,79,79,]),'.':([5,8,9,15,18,51,58,71,72,83,153,155,171,172,181,208,210,211,],[-104,-105,36,42,-110,42,-104,-109,-106,-103,-110,189,197,198,-104,-103,42,-104,]),'IMPORT':([0,1,6,8,10,11,13,14,16,17,18,19,20,21,22,25,27,28,44,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,72,76,82,83,88,89,91,92,99,102,107,111,117,120,124,128,133,137,139,146,148,150,153,154,155,156,158,159,160,162,166,167,171,172,174,175,177,178,180,184,199,200,201,204,205,206,207,208,209,210,211,212,217,221,222,223,],[24,-5,-15,-105,-7,-14,-10,24,-16,-9,-110,-4,-3,-11,-6,-8,-17,-113,-12,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,-20,-103,-36,-102,-22,-26,-80,-78,-84,-75,-53,-13,-25,-27,-79,-83,-54,-47,-38,-21,-110,-37,-62,-61,-66,-67,-101,-24,-23,-85,-44,-46,-50,-48,-51,-52,-41,-63,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-43,-45,-64,]),'CID':([0,1,2,4,6,7,8,10,11,12,13,14,16,17,18,19,20,21,22,25,27,28,32,33,41,44,46,49,50,51,52,53,54,55,56,57,58,60,61,62,64,65,66,67,68,70,71,72,76,80,82,83,84,87,88,89,91,92,99,101,102,104,107,110,111,112,117,120,122,124,128,131,133,135,136,137,139,141,142,143,146,147,148,149,150,151,152,153,154,155,156,158,159,160,162,166,167,171,172,174,175,177,178,180,182,183,184,187,188,190,199,200,201,204,205,206,207,208,209,210,211,212,217,221,222,223,],[8,-5,8,31,-15,8,-105,-7,-14,38,-10,8,-16,-9,-110,-4,-3,-11,-6,-8,-17,-113,8,72,8,-12,-114,8,-89,-73,-69,-68,-72,-87,8,-88,-104,-70,-92,-86,-74,-77,-71,-100,-90,-91,-109,-106,-76,8,-20,-103,8,8,-36,-102,-22,-26,-80,72,-78,8,-84,8,-75,8,-53,-13,8,-25,-27,8,-79,-99,8,-83,-54,8,8,8,-47,8,-38,8,-21,8,8,-110,-37,-62,-61,-66,-67,-101,-24,-23,-85,-44,-46,-50,-48,-51,-52,-41,8,8,-63,8,8,8,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-43,-45,-64,]),'AS':([18,38,39,44,71,],[-110,80,81,85,-109,]),'IN':([28,45,46,50,53,54,55,57,58,60,61,62,64,65,66,71,76,99,102,107,111,133,137,153,155,156,157,158,159,167,177,208,],[-113,87,-114,-89,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-109,-76,-80,-78,-84,-75,-79,-83,-110,-73,-69,191,-90,-91,-85,-89,-103,]),'NOT':([122,147,151,152,187,188,],[151,151,151,151,151,151,]),'FOR':([0,1,6,8,10,11,13,14,16,17,18,19,20,21,22,25,27,28,43,44,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,72,76,82,83,88,89,91,92,99,102,107,111,117,120,124,128,133,137,139,146,148,149,150,153,154,155,156,158,159,160,162,166,167,171,172,174,175,177,178,180,182,183,184,199,200,201,204,205,206,207,208,209,210,211,212,217,221,222,223,],[26,-5,-15,-105,-7,-14,-10,26,-16,-9,-110,-4,-3,-11,-6,-8,-17,-113,84,-12,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,-20,-103,-36,-102,-22,-26,-80,-78,-84,-75,-53,-13,-25,-27,-79,-83,-54,-47,-38,26,-21,-110,-37,-62,-61,-66,-67,-101,-24,-23,-85,-44,-46,-50,-48,-51,-52,-41,26,26,-63,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-43,-45,-64,]),'ENTITY':([0,1,6,8,10,11,13,14,16,17,18,19,20,21,22,25,27,28,44,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,72,76,82,83,88,89,91,92,99,102,107,111,117,120,124,128,133,137,139,146,148,150,153,154,155,156,158,159,160,162,166,167,171,172,174,175,177,178,180,184,199,200,201,204,205,206,207,208,209,210,211,212,217,221,222,223,],[4,-5,-15,-105,-7,-14,-10,4,-16,-9,-110,-4,-3,-11,-6,-8,-17,-113,-12,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,-20,-103,-36,-102,-22,-26,-80,-78,-84,-75,-53,-13,-25,-27,-79,-83,-54,-47,-38,-21,-110,-37,-62,-61,-66,-67,-101,-24,-23,-85,-44,-46,-50,-48,-51,-52,-41,-63,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,-43,-45,-64,]),'MLS':([0,1,6,8,10,11,13,14,16,17,18,19,20,21,22,25,27,28,32,41,44,46,48,50,51,52,53,54,55,56,57,58,60,61,62,64,65,66,68,70,71,72,76,82,83,87,88,89,91,92,99,102,104,107,110,111,112,117,120,122,124,128,132,133,136,137,139,146,147,148,149,150,151,152,153,154,155,156,158,159,160,162,164,166,167,171,172,174,175,177,178,180,184,187,188,190,199,200,201,204,205,206,207,208,209,210,211,212,217,220,221,222,223,228,],[28,-5,-15,-105,-7,-14,-10,28,-16,-9,-110,-4,-3,-11,-6,-8,-17,28,28,28,-12,-114,28,-89,-73,-69,-68,-72,-87,28,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,-20,-103,28,-36,-102,-22,-26,-80,-78,28,-84,28,-75,28,-53,-13,28,-25,-27,28,-79,28,-83,-54,-47,28,-38,28,-21,28,28,-110,-37,-62,-61,-66,-67,-101,-24,28,-23,-85,-44,-46,-50,-48,-51,-52,-41,-63,28,28,28,-42,-49,-40,-55,-65,-59,-60,-103,-56,-58,-104,-57,-39,28,-43,-45,-64,28,]),'}':([18,28,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,69,70,71,76,83,99,102,106,107,111,133,137,167,168,214,],[-110,-113,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,107,-91,-109,-76,-103,-80,-78,137,-84,-75,-79,-83,-85,-82,-81,]),'DICT':([28,46,48,50,55,57,61,62,68,70,90,93,95,107,125,126,127,130,132,137,192,193,194,219,226,227,],[-113,-114,94,-89,-87,-88,-92,-86,-90,-91,94,-29,94,-84,-28,-34,94,-30,94,-83,-35,-32,-31,-33,-93,-94,]),':':([8,18,28,31,46,50,51,52,53,54,55,57,58,60,61,62,64,65,66,68,70,71,72,76,79,83,97,98,99,102,105,107,111,115,119,121,133,137,165,167,],[-105,-110,-113,48,-114,-89,-73,-69,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-90,-91,-109,-106,-76,114,-103,-108,132,-80,-78,136,-84,-75,145,149,149,-79,-83,-107,-85,]),'CMP_OP':([28,46,50,53,54,55,57,58,60,61,62,64,65,66,71,76,99,102,107,111,133,137,153,155,156,157,158,159,167,177,208,],[-113,-114,-89,-68,-72,-87,-88,-104,-70,-92,-86,-74,-77,-71,-109,-76,-80,-78,-84,-75,-79,-83,-110,-73,-69,190,-90,-91,-85,-89,-103,]),'TRUE':([32,41,56,87,104,110,112,122,136,146,147,151,152,164,174,175,187,188,190,200,220,228,],[68,68,68,68,68,68,68,158,68,-47,158,158,158,68,-50,-48,158,158,68,-49,68,68,]),'INT':([32,41,56,79,87,104,110,112,114,122,136,145,146,147,151,152,164,174,175,187,188,190,200,220,228,],[62,62,62,115,62,62,62,62,144,62,62,176,-47,62,62,62,62,-50,-48,62,62,62,-49,62,62,]),'IS':([153,208,],[186,218,]),'{':([32,41,56,87,104,110,112,122,136,146,147,151,152,161,174,175,187,188,190,200,],[69,69,69,69,69,69,69,69,69,-47,69,69,69,69,-50,-48,69,69,69,-49,]),'FALSE':([32,41,56,87,104,110,112,122,136,146,147,151,152,164,174,175,187,188,190,200,220,228,],[70,70,70,70,70,70,70,159,70,-47,159,159,159,70,-50,-48,159,159,70,-49,70,70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'multi':([37,77,113,215,216,],[78,112,143,221,222,]),'entity_body':([48,95,132,],[90,127,90,]),'stmt_list':([149,182,183,],[179,202,203,]),'condition':([122,147,151,152,187,188,],[154,178,184,185,206,207,]),'implement_def':([0,14,],[1,1,]),'param_list':([35,103,170,],[75,134,196,]),'var_ref':([0,14,32,41,56,87,104,110,112,122,136,147,149,151,152,182,183,187,188,190,191,],[15,15,51,51,51,51,51,51,51,155,51,155,15,155,155,15,15,155,155,51,210,]),'function_call':([0,14,32,41,56,87,104,110,112,122,136,147,149,151,152,182,183,187,188,190,],[16,16,52,52,52,52,52,52,52,156,52,156,16,156,156,16,16,156,156,52,]),'pair_list':([69,195,],[106,214,]),'ns_ref':([0,2,7,14,24,32,41,47,48,49,56,80,81,84,87,90,95,104,110,112,122,123,127,131,132,136,141,142,143,147,149,151,152,182,183,187,188,190,191,],[5,30,30,5,44,58,58,89,96,30,58,30,118,30,58,96,96,58,58,58,58,89,96,30,96,58,30,30,30,58,181,58,58,181,181,58,58,58,211,]),'main':([0,14,],[3,40,]),'entity_body_outer':([48,132,],[91,166,]),'map_def':([32,41,56,87,104,110,112,122,136,147,151,152,161,187,188,190,],[54,54,54,54,54,54,54,54,54,54,54,54,192,54,54,54,]),'typedef':([0,14,],[17,17,]),'constant':([32,41,56,87,104,110,112,122,136,147,151,152,164,187,188,190,220,228,],[53,53,53,53,53,53,53,53,53,53,53,53,194,53,53,53,225,225,]),'constant_list':([213,],[219,]),'constants':([220,228,],[224,229,]),'id_list':([73,138,],[109,169,]),'entity_def':([0,14,],[19,19,]),'mls':([0,14,28,32,41,48,56,87,104,110,112,122,132,136,147,149,151,152,164,187,188,190,220,228,],[20,20,46,57,57,95,57,57,57,57,57,57,95,57,57,182,57,57,57,57,57,57,57,57,]),'relation':([0,14,],[10,10,]),'operand_list':([32,56,104,112,],[59,100,135,142,]),'implementation_def':([0,14,],[22,22,]),'assign':([0,14,149,182,183,],[11,11,11,11,11,]),'constructor':([0,14,32,41,56,80,87,104,110,112,122,136,147,149,151,152,182,183,187,188,190,],[6,6,60,60,60,117,60,60,60,60,60,60,60,6,60,60,6,6,60,60,60,]),'ns_list':([47,123,],[88,160,]),'import':([0,14,],[21,21,]),'class_ref':([0,2,7,14,32,41,49,56,80,84,87,104,110,112,122,131,136,141,142,143,147,149,151,152,182,183,187,188,190,],[9,29,34,9,63,63,97,63,116,119,63,63,63,63,63,97,63,171,172,173,63,116,63,63,116,116,63,63,63,]),'attr':([48,90,95,127,132,],[93,125,93,125,93,]),'statement':([0,14,149,182,183,],[25,25,183,183,183,]),'index_lookup':([32,41,56,87,104,110,112,122,136,147,151,152,187,188,190,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'list_def':([32,41,56,87,104,110,112,122,136,147,151,152,187,188,190,191,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,212,]),'for':([0,14,149,182,183,],[27,27,27,27,27,]),'implementation':([119,121,],[148,150,]),'index':([0,14,],[13,13,]),'operand':([32,41,56,87,104,110,112,122,136,147,151,152,187,188,190,],[67,82,67,121,67,140,67,157,168,157,157,157,157,157,209,]),'top_stmt':([0,14,],[14,14,]),'class_ref_list':([49,131,],[98,165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',66),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',73),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',78),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',79),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',80),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',81),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',82),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',83),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',84),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',85),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',86),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',95),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',101),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',110),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',111),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',112),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',113),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',118),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',125),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',130),
  ('for -> FOR ID IN operand implementation','for',5,'p_for','plyInmantaParser.py',136),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',145),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',151),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',157),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',162),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',167),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',172),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',177),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',183),
  ('attr -> ns_ref ID','attr',2,'p_attr','plyInmantaParser.py',188),
  ('attr -> ns_ref ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',194),
  ('attr -> ns_ref [ ] ID','attr',4,'p_attr_list','plyInmantaParser.py',200),
  ('attr -> ns_ref [ ] ID = constant_list','attr',6,'p_attr_list_cte','plyInmantaParser.py',206),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',212),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',218),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',226),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',232),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',240),
  ('implementation -> : mls stmt_list END','implementation',4,'p_implementation','plyInmantaParser.py',252),
  ('implementation -> : stmt_list END','implementation',3,'p_implementation_1','plyInmantaParser.py',257),
  ('implementation -> : END','implementation',2,'p_implementation_2','plyInmantaParser.py',262),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',269),
  ('relation -> class_ref . ID multi REL class_ref . ID multi','relation',9,'p_relation_new','plyInmantaParser.py',278),
  ('relation -> class_ref . ID multi REL class_ref','relation',6,'p_relation_new_unidir','plyInmantaParser.py',284),
  ('relation -> class_ref . ID multi operand_list class_ref . ID multi','relation',9,'p_relation_new_annotated','plyInmantaParser.py',290),
  ('relation -> class_ref . ID multi operand_list class_ref','relation',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',296),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',302),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',307),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',312),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',317),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef',6,'p_typedef_1','plyInmantaParser.py',324),
  ('typedef -> TYPEDEF ID AS ns_ref MATCHING condition','typedef',6,'p_typedef_1','plyInmantaParser.py',325),
  ('typedef -> TYPEDEF CID AS constructor','typedef',4,'p_typedef_cls','plyInmantaParser.py',331),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',338),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',347),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',352),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',353),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',354),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',355),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',356),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',363),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',364),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',369),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',375),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',381),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',387),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',388),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',398),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',399),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',400),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',401),
  ('operand -> map_def','operand',1,'p_operand','plyInmantaParser.py',402),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',403),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',404),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',409),
  ('constructor -> class_ref ( )','constructor',3,'p_constructor_empty','plyInmantaParser.py',414),
  ('function_call -> ns_ref ( )','function_call',3,'p_function_call_empty','plyInmantaParser.py',419),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',425),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',431),
  ('list_def -> [ ]','list_def',2,'p_list_def_empty','plyInmantaParser.py',437),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',443),
  ('pair_list -> STRING : operand','pair_list',3,'p_pair_list_term','plyInmantaParser.py',449),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',454),
  ('map_def -> { }','map_def',2,'p_map_def_empty','plyInmantaParser.py',460),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',466),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',474),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',475),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',476),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',483),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',490),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',497),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',507),
  ('constant_list -> [ ]','constant_list',2,'p_constant_list_empty','plyInmantaParser.py',542),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',548),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',554),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',559),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',565),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',571),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',576),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',582),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',587),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',593),
  ('var_ref -> var_ref . ID','var_ref',3,'p_var_ref','plyInmantaParser.py',598),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',604),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',610),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',615),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',620),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',626),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',631),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',637),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',643),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',649),
  ('mls -> MLS','mls',1,'p_mls_term','plyInmantaParser.py',654),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',660),
]
