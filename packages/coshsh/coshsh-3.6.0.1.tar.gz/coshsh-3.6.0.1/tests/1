import unittest
import os
import sys
import shutil
import string
from optparse import OptionParser
import ConfigParser
import logging


sys.dont_write_bytecode = True

import coshsh
from coshsh.generator import Generator
from coshsh.datasource import Datasource
from coshsh.application import Application

class CoshshTest(unittest.TestCase):
    def print_header(self):
        print "#" * 80 + "\n" + "#" + " " * 78 + "#"
        print "#" + string.center(self.id(), 78) + "#"
        print "#" + " " * 78 + "#\n" + "#" * 80 + "\n"

    def setUp(self):
        self.config = ConfigParser.ConfigParser()
        self.config.read('etc/coshsh2.cfg')
        print self.config._sections
        self.generator = coshsh.generator.Generator()
        self.generator.setup_logging()

    def tearDown(self):
        pass

    def test_recipe_max_deltas_default(self):
        self.print_header()
        recipe = {'classes_dir': '/tmp', 'objects_dir': '/tmp', 'templates_dir': '/tmp', 'datasources': 'datasource' }
        datasource = {'name': 'datasource', 'type': 'simplesample'}
        self.generator.add_recipe(name='recp', **recipe)
        self.generator.recipes['recipe_cust'].add_datasource(**datasource)
        print self.generator.recipes['recipe_cust']
        #self.assert_(self.generator.recipes['recipe_cust'].max_delta == ())


if __name__ == '__main__':
    unittest.main()


