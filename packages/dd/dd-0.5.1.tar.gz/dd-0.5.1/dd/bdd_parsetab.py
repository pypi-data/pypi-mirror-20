
# bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'exprleftCOLONleftEQUIVleftIMPLIESleftMINUSleftXORleftORleftANDleftEQUALSrightNOTrightUMINUSLPAREN RPAREN COMMA NOT AND OR XOR IMPLIES EQUIV EQUALS MINUS DIV COLON FORALL EXISTS RENAME NAME NUMBER TRUE ITE FALSEexpr : TRUE\n                | FALSE\n        expr : NUMBERexpr : MINUS NUMBER %prec UMINUSexpr : nameexpr : NOT exprexpr : expr AND expr\n                | expr OR expr\n                | expr XOR expr\n                | expr IMPLIES expr\n                | expr EQUIV expr\n                | expr EQUALS expr\n                | expr MINUS expr\n        expr : ITE LPAREN expr COMMA expr COMMA expr RPARENexpr : EXISTS names COLON expr\n                | FORALL names COLON expr\n        expr : RENAME subs COLON exprsubs : subs COMMA subsubs : subsub : name DIV namenames : names COMMA namenames : namename : NAMEexpr : LPAREN expr RPAREN'
    
_lr_action_items = {'AND':([3,4,7,9,11,13,14,15,16,31,35,36,37,38,39,40,41,42,47,48,52,53,55,56,],[-2,-1,-3,-23,21,-5,21,-4,-6,-24,21,-7,-12,21,21,21,21,21,21,21,21,21,21,-14,]),'LPAREN':([0,1,5,10,20,21,22,23,24,25,26,27,33,34,45,49,54,],[1,1,1,20,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'COLON':([9,17,18,19,29,30,46,50,51,],[-23,33,-22,34,45,-19,-21,-20,-18,]),'MINUS':([0,1,3,4,5,7,9,11,13,14,15,16,20,21,22,23,24,25,26,27,31,33,34,35,36,37,38,39,40,41,42,45,47,48,49,52,53,54,55,56,],[2,2,-2,-1,2,-3,-23,23,-5,23,-4,-6,2,2,2,2,2,2,2,2,-24,2,2,23,-7,-12,-13,23,-9,23,-8,2,23,23,2,23,23,2,23,-14,]),'FALSE':([0,1,5,20,21,22,23,24,25,26,27,33,34,45,49,54,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'$end':([3,4,7,9,11,13,15,16,31,36,37,38,39,40,41,42,47,48,52,56,],[-2,-1,-3,-23,0,-5,-4,-6,-24,-7,-12,-13,-11,-9,-10,-8,-15,-16,-17,-14,]),'TRUE':([0,1,5,20,21,22,23,24,25,26,27,33,34,45,49,54,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'XOR':([3,4,7,9,11,13,14,15,16,31,35,36,37,38,39,40,41,42,47,48,52,53,55,56,],[-2,-1,-3,-23,25,-5,25,-4,-6,-24,25,-7,-12,25,25,-9,25,-8,25,25,25,25,25,-14,]),'NOT':([0,1,5,20,21,22,23,24,25,26,27,33,34,45,49,54,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'EXISTS':([0,1,5,20,21,22,23,24,25,26,27,33,34,45,49,54,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'DIV':([9,28,],[-23,43,]),'NUMBER':([0,1,2,5,20,21,22,23,24,25,26,27,33,34,45,49,54,],[7,7,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'COMMA':([3,4,7,9,13,15,16,17,18,19,29,30,31,35,36,37,38,39,40,41,42,46,47,48,50,51,52,53,56,],[-2,-1,-3,-23,-5,-4,-6,32,-22,32,44,-19,-24,49,-7,-12,-13,-11,-9,-10,-8,-21,-15,-16,-20,-18,-17,54,-14,]),'FORALL':([0,1,5,20,21,22,23,24,25,26,27,33,34,45,49,54,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'IMPLIES':([3,4,7,9,11,13,14,15,16,31,35,36,37,38,39,40,41,42,47,48,52,53,55,56,],[-2,-1,-3,-23,26,-5,26,-4,-6,-24,26,-7,-12,-13,26,-9,-10,-8,26,26,26,26,26,-14,]),'NAME':([0,1,5,6,8,12,20,21,22,23,24,25,26,27,32,33,34,43,44,45,49,54,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'ITE':([0,1,5,20,21,22,23,24,25,26,27,33,34,45,49,54,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'RENAME':([0,1,5,20,21,22,23,24,25,26,27,33,34,45,49,54,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'RPAREN':([3,4,7,9,13,14,15,16,31,36,37,38,39,40,41,42,47,48,52,55,56,],[-2,-1,-3,-23,-5,31,-4,-6,-24,-7,-12,-13,-11,-9,-10,-8,-15,-16,-17,56,-14,]),'OR':([3,4,7,9,11,13,14,15,16,31,35,36,37,38,39,40,41,42,47,48,52,53,55,56,],[-2,-1,-3,-23,27,-5,27,-4,-6,-24,27,-7,-12,27,27,27,27,-8,27,27,27,27,27,-14,]),'EQUALS':([3,4,7,9,11,13,14,15,16,31,35,36,37,38,39,40,41,42,47,48,52,53,55,56,],[-2,-1,-3,-23,22,-5,22,-4,-6,-24,22,22,-12,22,22,22,22,22,22,22,22,22,22,-14,]),'EQUIV':([3,4,7,9,11,13,14,15,16,31,35,36,37,38,39,40,41,42,47,48,52,53,55,56,],[-2,-1,-3,-23,24,-5,24,-4,-6,-24,24,-7,-12,-13,-11,-9,-10,-8,24,24,24,24,24,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'name':([0,1,5,6,8,12,20,21,22,23,24,25,26,27,32,33,34,43,44,45,49,54,],[13,13,13,18,18,28,13,13,13,13,13,13,13,13,46,13,13,50,28,13,13,13,]),'names':([6,8,],[17,19,]),'expr':([0,1,5,20,21,22,23,24,25,26,27,33,34,45,49,54,],[11,14,16,35,36,37,38,39,40,41,42,47,48,52,53,55,]),'subs':([12,],[29,]),'sub':([12,44,],[30,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','_parser.py',98),
  ('expr -> FALSE','expr',1,'p_bool','_parser.py',99),
  ('expr -> NUMBER','expr',1,'p_number','_parser.py',104),
  ('expr -> MINUS NUMBER','expr',2,'p_negative_number','_parser.py',108),
  ('expr -> name','expr',1,'p_var','_parser.py',113),
  ('expr -> NOT expr','expr',2,'p_unary','_parser.py',117),
  ('expr -> expr AND expr','expr',3,'p_binary','_parser.py',121),
  ('expr -> expr OR expr','expr',3,'p_binary','_parser.py',122),
  ('expr -> expr XOR expr','expr',3,'p_binary','_parser.py',123),
  ('expr -> expr IMPLIES expr','expr',3,'p_binary','_parser.py',124),
  ('expr -> expr EQUIV expr','expr',3,'p_binary','_parser.py',125),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','_parser.py',126),
  ('expr -> expr MINUS expr','expr',3,'p_binary','_parser.py',127),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','_parser.py',132),
  ('expr -> EXISTS names COLON expr','expr',4,'p_quantifier','_parser.py',136),
  ('expr -> FORALL names COLON expr','expr',4,'p_quantifier','_parser.py',137),
  ('expr -> RENAME subs COLON expr','expr',4,'p_rename','_parser.py',142),
  ('subs -> subs COMMA sub','subs',3,'p_substitutions_iter','_parser.py',146),
  ('subs -> sub','subs',1,'p_substitutions_end','_parser.py',152),
  ('sub -> name DIV name','sub',3,'p_substitution','_parser.py',156),
  ('names -> names COMMA name','names',3,'p_names_iter','_parser.py',162),
  ('names -> name','names',1,'p_names_end','_parser.py',168),
  ('name -> NAME','name',1,'p_name','_parser.py',172),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','_parser.py',176),
]
