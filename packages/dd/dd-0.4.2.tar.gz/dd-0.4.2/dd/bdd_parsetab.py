
# bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'exprleftCOLONleftEQUIVleftIMPLIESleftMINUSleftXORleftORleftANDleftEQUALSrightNOTrightUMINUSLPAREN RPAREN COMMA NOT AND OR XOR IMPLIES EQUIV EQUALS MINUS DIV COLON FORALL EXISTS RENAME NAME NUMBER FALSE ITE TRUEexpr : TRUE\n                | FALSE\n        expr : NUMBERexpr : MINUS NUMBER %prec UMINUSexpr : nameexpr : NOT exprexpr : expr AND expr\n                | expr OR expr\n                | expr XOR expr\n                | expr IMPLIES expr\n                | expr EQUIV expr\n                | expr EQUALS expr\n                | expr MINUS expr\n        expr : ITE LPAREN expr COMMA expr COMMA expr RPARENexpr : EXISTS names COLON expr\n                | FORALL names COLON expr\n        expr : RENAME subs COLON exprsubs : subs COMMA subsubs : subsub : name DIV namenames : names COMMA namenames : namename : NAMEexpr : LPAREN expr RPAREN'
    
_lr_action_items = {'AND':([1,4,7,8,9,13,16,29,30,36,37,38,39,40,41,42,43,45,46,49,52,53,55,56,],[-5,-1,23,-2,-23,-3,-6,23,-4,23,23,23,-7,23,-12,23,23,-24,23,23,23,23,23,-14,]),'COMMA':([1,4,8,9,13,14,15,16,18,19,28,30,36,37,38,39,40,41,42,43,45,46,47,48,49,50,52,53,56,],[-5,-1,-2,-23,-3,32,-22,-6,35,-19,32,-4,51,-8,-13,-7,-11,-12,-9,-10,-24,-16,-21,-20,-17,-18,-15,54,-14,]),'EQUIV':([1,4,7,8,9,13,16,29,30,36,37,38,39,40,41,42,43,45,46,49,52,53,55,56,],[-5,-1,24,-2,-23,-3,-6,24,-4,24,-8,-13,-7,-11,-12,-9,-10,-24,24,24,24,24,24,-14,]),'FORALL':([0,3,11,20,21,22,23,24,25,26,27,31,34,44,51,54,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'NOT':([0,3,11,20,21,22,23,24,25,26,27,31,34,44,51,54,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'IMPLIES':([1,4,7,8,9,13,16,29,30,36,37,38,39,40,41,42,43,45,46,49,52,53,55,56,],[-5,-1,27,-2,-23,-3,-6,27,-4,27,-8,-13,-7,27,-12,-9,-10,-24,27,27,27,27,27,-14,]),'TRUE':([0,3,11,20,21,22,23,24,25,26,27,31,34,44,51,54,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'COLON':([9,14,15,18,19,28,47,48,50,],[-23,31,-22,34,-19,44,-21,-20,-18,]),'RENAME':([0,3,11,20,21,22,23,24,25,26,27,31,34,44,51,54,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ITE':([0,3,11,20,21,22,23,24,25,26,27,31,34,44,51,54,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'EQUALS':([1,4,7,8,9,13,16,29,30,36,37,38,39,40,41,42,43,45,46,49,52,53,55,56,],[-5,-1,25,-2,-23,-3,-6,25,-4,25,25,25,25,25,-12,25,25,-24,25,25,25,25,25,-14,]),'$end':([1,4,7,8,9,13,16,30,37,38,39,40,41,42,43,45,46,49,52,56,],[-5,-1,0,-2,-23,-3,-6,-4,-8,-13,-7,-11,-12,-9,-10,-24,-16,-17,-15,-14,]),'OR':([1,4,7,8,9,13,16,29,30,36,37,38,39,40,41,42,43,45,46,49,52,53,55,56,],[-5,-1,21,-2,-23,-3,-6,21,-4,21,-8,21,-7,21,-12,21,21,-24,21,21,21,21,21,-14,]),'DIV':([9,17,],[-23,33,]),'FALSE':([0,3,11,20,21,22,23,24,25,26,27,31,34,44,51,54,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'NAME':([0,2,3,5,10,11,20,21,22,23,24,25,26,27,31,32,33,34,35,44,51,54,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'EXISTS':([0,3,11,20,21,22,23,24,25,26,27,31,34,44,51,54,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'RPAREN':([1,4,8,9,13,16,29,30,37,38,39,40,41,42,43,45,46,49,52,55,56,],[-5,-1,-2,-23,-3,-6,45,-4,-8,-13,-7,-11,-12,-9,-10,-24,-16,-17,-15,56,-14,]),'LPAREN':([0,3,6,11,20,21,22,23,24,25,26,27,31,34,44,51,54,],[11,11,20,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'MINUS':([0,1,3,4,7,8,9,11,13,16,20,21,22,23,24,25,26,27,29,30,31,34,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,54,55,56,],[12,-5,12,-1,22,-2,-23,12,-3,-6,12,12,12,12,12,12,12,12,22,-4,12,12,22,-8,-13,-7,22,-12,-9,22,12,-24,22,22,12,22,22,12,22,-14,]),'XOR':([1,4,7,8,9,13,16,29,30,36,37,38,39,40,41,42,43,45,46,49,52,53,55,56,],[-5,-1,26,-2,-23,-3,-6,26,-4,26,-8,26,-7,26,-12,-9,26,-24,26,26,26,26,26,-14,]),'NUMBER':([0,3,11,12,20,21,22,23,24,25,26,27,31,34,44,51,54,],[13,13,13,30,13,13,13,13,13,13,13,13,13,13,13,13,13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sub':([5,35,],[19,50,]),'subs':([5,],[18,]),'name':([0,2,3,5,10,11,20,21,22,23,24,25,26,27,31,32,33,34,35,44,51,54,],[1,15,1,17,15,1,1,1,1,1,1,1,1,1,1,47,48,1,17,1,1,1,]),'names':([2,10,],[14,28,]),'expr':([0,3,11,20,21,22,23,24,25,26,27,31,34,44,51,54,],[7,16,29,36,37,38,39,40,41,42,43,46,49,52,53,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','_parser.py',98),
  ('expr -> FALSE','expr',1,'p_bool','_parser.py',99),
  ('expr -> NUMBER','expr',1,'p_number','_parser.py',104),
  ('expr -> MINUS NUMBER','expr',2,'p_negative_number','_parser.py',108),
  ('expr -> name','expr',1,'p_var','_parser.py',113),
  ('expr -> NOT expr','expr',2,'p_unary','_parser.py',117),
  ('expr -> expr AND expr','expr',3,'p_binary','_parser.py',121),
  ('expr -> expr OR expr','expr',3,'p_binary','_parser.py',122),
  ('expr -> expr XOR expr','expr',3,'p_binary','_parser.py',123),
  ('expr -> expr IMPLIES expr','expr',3,'p_binary','_parser.py',124),
  ('expr -> expr EQUIV expr','expr',3,'p_binary','_parser.py',125),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','_parser.py',126),
  ('expr -> expr MINUS expr','expr',3,'p_binary','_parser.py',127),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','_parser.py',132),
  ('expr -> EXISTS names COLON expr','expr',4,'p_quantifier','_parser.py',136),
  ('expr -> FORALL names COLON expr','expr',4,'p_quantifier','_parser.py',137),
  ('expr -> RENAME subs COLON expr','expr',4,'p_rename','_parser.py',142),
  ('subs -> subs COMMA sub','subs',3,'p_substitutions_iter','_parser.py',146),
  ('subs -> sub','subs',1,'p_substitutions_end','_parser.py',152),
  ('sub -> name DIV name','sub',3,'p_substitution','_parser.py',156),
  ('names -> names COMMA name','names',3,'p_names_iter','_parser.py',162),
  ('names -> name','names',1,'p_names_end','_parser.py',168),
  ('name -> NAME','name',1,'p_name','_parser.py',172),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','_parser.py',176),
]
