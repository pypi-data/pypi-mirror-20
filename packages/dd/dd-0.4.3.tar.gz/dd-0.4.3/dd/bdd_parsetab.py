
# bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'exprleftCOLONleftEQUIVleftIMPLIESleftMINUSleftXORleftORleftANDleftEQUALSrightNOTrightUMINUSLPAREN RPAREN COMMA NOT AND OR XOR IMPLIES EQUIV EQUALS MINUS DIV COLON FORALL EXISTS RENAME NAME NUMBER ITE TRUE FALSEexpr : TRUE\n                | FALSE\n        expr : NUMBERexpr : MINUS NUMBER %prec UMINUSexpr : nameexpr : NOT exprexpr : expr AND expr\n                | expr OR expr\n                | expr XOR expr\n                | expr IMPLIES expr\n                | expr EQUIV expr\n                | expr EQUALS expr\n                | expr MINUS expr\n        expr : ITE LPAREN expr COMMA expr COMMA expr RPARENexpr : EXISTS names COLON expr\n                | FORALL names COLON expr\n        expr : RENAME subs COLON exprsubs : subs COMMA subsubs : subsub : name DIV namenames : names COMMA namenames : namename : NAMEexpr : LPAREN expr RPAREN'
    
_lr_action_items = {'RENAME':([0,2,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'COLON':([8,14,15,18,19,21,47,48,50,],[-23,-19,31,34,-22,36,-18,-20,-21,]),'NOT':([0,2,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'AND':([3,5,8,9,11,12,17,20,30,37,38,39,40,41,42,43,44,45,46,49,51,53,55,56,],[-3,-5,-23,-1,-2,27,-6,-4,27,27,-12,27,27,27,-7,27,27,-24,27,27,27,27,27,-14,]),'NUMBER':([0,2,6,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[3,3,20,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'FORALL':([0,2,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'$end':([3,5,8,9,11,12,17,20,38,39,40,41,42,43,44,45,46,49,51,56,],[-3,-5,-23,-1,-2,0,-6,-4,-12,-11,-8,-13,-7,-10,-9,-24,-17,-16,-15,-14,]),'EQUIV':([3,5,8,9,11,12,17,20,30,37,38,39,40,41,42,43,44,45,46,49,51,53,55,56,],[-3,-5,-23,-1,-2,24,-6,-4,24,24,-12,-11,-8,-13,-7,-10,-9,-24,24,24,24,24,24,-14,]),'MINUS':([0,2,3,5,8,9,11,12,13,17,20,22,23,24,25,26,27,28,29,30,31,34,36,37,38,39,40,41,42,43,44,45,46,49,51,52,53,54,55,56,],[6,6,-3,-5,-23,-1,-2,26,6,-6,-4,6,6,6,6,6,6,6,6,26,6,6,6,26,-12,26,-8,-13,-7,26,-9,-24,26,26,26,6,26,6,26,-14,]),'IMPLIES':([3,5,8,9,11,12,17,20,30,37,38,39,40,41,42,43,44,45,46,49,51,53,55,56,],[-3,-5,-23,-1,-2,28,-6,-4,28,28,-12,28,-8,-13,-7,-10,-9,-24,28,28,28,28,28,-14,]),'LPAREN':([0,2,10,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[13,13,22,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'EQUALS':([3,5,8,9,11,12,17,20,30,37,38,39,40,41,42,43,44,45,46,49,51,53,55,56,],[-3,-5,-23,-1,-2,23,-6,-4,23,23,-12,23,23,23,23,23,23,-24,23,23,23,23,23,-14,]),'NAME':([0,1,2,4,7,13,22,23,24,25,26,27,28,29,31,32,33,34,35,36,52,54,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'TRUE':([0,2,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'ITE':([0,2,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'FALSE':([0,2,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'XOR':([3,5,8,9,11,12,17,20,30,37,38,39,40,41,42,43,44,45,46,49,51,53,55,56,],[-3,-5,-23,-1,-2,29,-6,-4,29,29,-12,29,-8,29,-7,29,-9,-24,29,29,29,29,29,-14,]),'RPAREN':([3,5,8,9,11,17,20,30,38,39,40,41,42,43,44,45,46,49,51,55,56,],[-3,-5,-23,-1,-2,-6,-4,45,-12,-11,-8,-13,-7,-10,-9,-24,-17,-16,-15,56,-14,]),'COMMA':([3,5,8,9,11,14,15,17,18,19,20,21,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,],[-3,-5,-23,-1,-2,-19,32,-6,35,-22,-4,35,52,-12,-11,-8,-13,-7,-10,-9,-24,-17,-18,-20,-16,-21,-15,54,-14,]),'EXISTS':([0,2,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'DIV':([8,16,],[-23,33,]),'OR':([3,5,8,9,11,12,17,20,30,37,38,39,40,41,42,43,44,45,46,49,51,53,55,56,],[-3,-5,-23,-1,-2,25,-6,-4,25,25,-12,25,-8,25,-7,25,25,-24,25,25,25,25,25,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'names':([4,7,],[18,21,]),'expr':([0,2,13,22,23,24,25,26,27,28,29,31,34,36,52,54,],[12,17,30,37,38,39,40,41,42,43,44,46,49,51,53,55,]),'sub':([1,32,],[14,47,]),'subs':([1,],[15,]),'name':([0,1,2,4,7,13,22,23,24,25,26,27,28,29,31,32,33,34,35,36,52,54,],[5,16,5,19,19,5,5,5,5,5,5,5,5,5,5,16,48,5,50,5,5,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','_parser.py',98),
  ('expr -> FALSE','expr',1,'p_bool','_parser.py',99),
  ('expr -> NUMBER','expr',1,'p_number','_parser.py',104),
  ('expr -> MINUS NUMBER','expr',2,'p_negative_number','_parser.py',108),
  ('expr -> name','expr',1,'p_var','_parser.py',113),
  ('expr -> NOT expr','expr',2,'p_unary','_parser.py',117),
  ('expr -> expr AND expr','expr',3,'p_binary','_parser.py',121),
  ('expr -> expr OR expr','expr',3,'p_binary','_parser.py',122),
  ('expr -> expr XOR expr','expr',3,'p_binary','_parser.py',123),
  ('expr -> expr IMPLIES expr','expr',3,'p_binary','_parser.py',124),
  ('expr -> expr EQUIV expr','expr',3,'p_binary','_parser.py',125),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','_parser.py',126),
  ('expr -> expr MINUS expr','expr',3,'p_binary','_parser.py',127),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','_parser.py',132),
  ('expr -> EXISTS names COLON expr','expr',4,'p_quantifier','_parser.py',136),
  ('expr -> FORALL names COLON expr','expr',4,'p_quantifier','_parser.py',137),
  ('expr -> RENAME subs COLON expr','expr',4,'p_rename','_parser.py',142),
  ('subs -> subs COMMA sub','subs',3,'p_substitutions_iter','_parser.py',146),
  ('subs -> sub','subs',1,'p_substitutions_end','_parser.py',152),
  ('sub -> name DIV name','sub',3,'p_substitution','_parser.py',156),
  ('names -> names COMMA name','names',3,'p_names_iter','_parser.py',162),
  ('names -> name','names',1,'p_names_end','_parser.py',168),
  ('name -> NAME','name',1,'p_name','_parser.py',172),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','_parser.py',176),
]
