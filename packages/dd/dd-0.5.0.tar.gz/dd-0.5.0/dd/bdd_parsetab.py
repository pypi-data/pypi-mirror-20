
# bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'exprleftCOLONleftEQUIVleftIMPLIESleftMINUSleftXORleftORleftANDleftEQUALSrightNOTrightUMINUSLPAREN RPAREN COMMA NOT AND OR XOR IMPLIES EQUIV EQUALS MINUS DIV COLON FORALL EXISTS RENAME NAME NUMBER ITE FALSE TRUEexpr : TRUE\n                | FALSE\n        expr : NUMBERexpr : MINUS NUMBER %prec UMINUSexpr : nameexpr : NOT exprexpr : expr AND expr\n                | expr OR expr\n                | expr XOR expr\n                | expr IMPLIES expr\n                | expr EQUIV expr\n                | expr EQUALS expr\n                | expr MINUS expr\n        expr : ITE LPAREN expr COMMA expr COMMA expr RPARENexpr : EXISTS names COLON expr\n                | FORALL names COLON expr\n        expr : RENAME subs COLON exprsubs : subs COMMA subsubs : subsub : name DIV namenames : names COMMA namenames : namename : NAMEexpr : LPAREN expr RPAREN'
    
_lr_action_items = {'DIV':([1,16,],[-23,34,]),'NAME':([0,3,4,7,8,13,18,22,23,24,25,26,27,28,32,33,34,36,37,45,49,54,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'NOT':([0,3,7,18,22,23,24,25,26,27,28,32,36,45,49,54,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'COLON':([1,15,17,20,21,30,47,48,51,],[-23,32,-19,-22,36,45,-18,-20,-21,]),'IMPLIES':([1,2,5,9,11,12,14,19,29,31,35,38,39,40,41,42,43,44,46,50,52,53,55,56,],[-23,-5,-3,27,-1,-2,27,-6,-4,-24,27,-9,-13,-7,-12,27,-10,-8,27,27,27,27,27,-14,]),'RENAME':([0,3,7,18,22,23,24,25,26,27,28,32,36,45,49,54,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'EQUIV':([1,2,5,9,11,12,14,19,29,31,35,38,39,40,41,42,43,44,46,50,52,53,55,56,],[-23,-5,-3,26,-1,-2,26,-6,-4,-24,26,-9,-13,-7,-12,-11,-10,-8,26,26,26,26,26,-14,]),'COMMA':([1,2,5,11,12,15,17,19,20,21,29,30,31,35,38,39,40,41,42,43,44,46,47,48,50,51,52,53,56,],[-23,-5,-3,-1,-2,33,-19,-6,-22,37,-4,37,-24,49,-9,-13,-7,-12,-11,-10,-8,-17,-18,-20,-15,-21,-16,54,-14,]),'LPAREN':([0,3,6,7,18,22,23,24,25,26,27,28,32,36,45,49,54,],[3,3,18,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'FORALL':([0,3,7,18,22,23,24,25,26,27,28,32,36,45,49,54,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'OR':([1,2,5,9,11,12,14,19,29,31,35,38,39,40,41,42,43,44,46,50,52,53,55,56,],[-23,-5,-3,28,-1,-2,28,-6,-4,-24,28,28,28,-7,-12,28,28,-8,28,28,28,28,28,-14,]),'NUMBER':([0,3,7,10,18,22,23,24,25,26,27,28,32,36,45,49,54,],[5,5,5,29,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'AND':([1,2,5,9,11,12,14,19,29,31,35,38,39,40,41,42,43,44,46,50,52,53,55,56,],[-23,-5,-3,24,-1,-2,24,-6,-4,-24,24,24,24,-7,-12,24,24,24,24,24,24,24,24,-14,]),'EQUALS':([1,2,5,9,11,12,14,19,29,31,35,38,39,40,41,42,43,44,46,50,52,53,55,56,],[-23,-5,-3,25,-1,-2,25,-6,-4,-24,25,25,25,25,-12,25,25,25,25,25,25,25,25,-14,]),'ITE':([0,3,7,18,22,23,24,25,26,27,28,32,36,45,49,54,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'EXISTS':([0,3,7,18,22,23,24,25,26,27,28,32,36,45,49,54,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'XOR':([1,2,5,9,11,12,14,19,29,31,35,38,39,40,41,42,43,44,46,50,52,53,55,56,],[-23,-5,-3,22,-1,-2,22,-6,-4,-24,22,-9,22,-7,-12,22,22,-8,22,22,22,22,22,-14,]),'RPAREN':([1,2,5,11,12,14,19,29,31,38,39,40,41,42,43,44,46,50,52,55,56,],[-23,-5,-3,-1,-2,31,-6,-4,-24,-9,-13,-7,-12,-11,-10,-8,-17,-15,-16,56,-14,]),'MINUS':([0,1,2,3,5,7,9,11,12,14,18,19,22,23,24,25,26,27,28,29,31,32,35,36,38,39,40,41,42,43,44,45,46,49,50,52,53,54,55,56,],[10,-23,-5,10,-3,10,23,-1,-2,23,10,-6,10,10,10,10,10,10,10,-4,-24,10,23,10,-9,-13,-7,-12,23,23,-8,10,23,10,23,23,23,10,23,-14,]),'FALSE':([0,3,7,18,22,23,24,25,26,27,28,32,36,45,49,54,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'$end':([1,2,5,9,11,12,19,29,31,38,39,40,41,42,43,44,46,50,52,56,],[-23,-5,-3,0,-1,-2,-6,-4,-24,-9,-13,-7,-12,-11,-10,-8,-17,-15,-16,-14,]),'TRUE':([0,3,7,18,22,23,24,25,26,27,28,32,36,45,49,54,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'names':([8,13,],[21,30,]),'name':([0,3,4,7,8,13,18,22,23,24,25,26,27,28,32,33,34,36,37,45,49,54,],[2,2,16,2,20,20,2,2,2,2,2,2,2,2,2,16,48,2,51,2,2,2,]),'sub':([4,33,],[17,47,]),'subs':([4,],[15,]),'expr':([0,3,7,18,22,23,24,25,26,27,28,32,36,45,49,54,],[9,14,19,35,38,39,40,41,42,43,44,46,50,52,53,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','_parser.py',98),
  ('expr -> FALSE','expr',1,'p_bool','_parser.py',99),
  ('expr -> NUMBER','expr',1,'p_number','_parser.py',104),
  ('expr -> MINUS NUMBER','expr',2,'p_negative_number','_parser.py',108),
  ('expr -> name','expr',1,'p_var','_parser.py',113),
  ('expr -> NOT expr','expr',2,'p_unary','_parser.py',117),
  ('expr -> expr AND expr','expr',3,'p_binary','_parser.py',121),
  ('expr -> expr OR expr','expr',3,'p_binary','_parser.py',122),
  ('expr -> expr XOR expr','expr',3,'p_binary','_parser.py',123),
  ('expr -> expr IMPLIES expr','expr',3,'p_binary','_parser.py',124),
  ('expr -> expr EQUIV expr','expr',3,'p_binary','_parser.py',125),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','_parser.py',126),
  ('expr -> expr MINUS expr','expr',3,'p_binary','_parser.py',127),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','_parser.py',132),
  ('expr -> EXISTS names COLON expr','expr',4,'p_quantifier','_parser.py',136),
  ('expr -> FORALL names COLON expr','expr',4,'p_quantifier','_parser.py',137),
  ('expr -> RENAME subs COLON expr','expr',4,'p_rename','_parser.py',142),
  ('subs -> subs COMMA sub','subs',3,'p_substitutions_iter','_parser.py',146),
  ('subs -> sub','subs',1,'p_substitutions_end','_parser.py',152),
  ('sub -> name DIV name','sub',3,'p_substitution','_parser.py',156),
  ('names -> names COMMA name','names',3,'p_names_iter','_parser.py',162),
  ('names -> name','names',1,'p_names_end','_parser.py',168),
  ('name -> NAME','name',1,'p_name','_parser.py',172),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','_parser.py',176),
]
