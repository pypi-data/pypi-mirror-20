# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-23 19:00
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pcart_catalog', '0005_auto_20170220_2047'),
        ('sites', '0002_alter_domain_unique'),
        ('pcart_customers', '0002_auto_20170223_2055'),
    ]

    operations = [
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('type', models.CharField(default='review', max_length=30, verbose_name='Type')),
                ('pros', models.CharField(blank=True, default='', max_length=255, verbose_name='Pros')),
                ('cons', models.CharField(blank=True, default='', max_length=255, verbose_name='Cons')),
                ('comment', models.TextField(blank=True, default='', verbose_name='Comment')),
                ('rating', models.FloatField(default=0, verbose_name='Rating')),
                ('extra_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, verbose_name='Extra data')),
                ('status', models.CharField(choices=[('unpublished', 'Unpublished'), ('published', 'Published'), ('flagged', 'Flagged'), ('spam', 'Spam')], default='unpublished', max_length=30, verbose_name='Status')),
                ('added', models.DateTimeField(auto_now_add=True, verbose_name='Added')),
                ('changed', models.DateTimeField(auto_now=True, verbose_name='Changed')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='pcart_customers.Customer', verbose_name='Customer')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='pcart_reviews.Review', verbose_name='Parent')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='pcart_catalog.Product', verbose_name='Product')),
                ('product_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='pcart_catalog.ProductVariant', verbose_name='Product variant')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviews', to='sites.Site', verbose_name='Site')),
            ],
            options={
                'verbose_name_plural': 'Collections',
                'verbose_name': 'Collection',
            },
        ),
    ]
