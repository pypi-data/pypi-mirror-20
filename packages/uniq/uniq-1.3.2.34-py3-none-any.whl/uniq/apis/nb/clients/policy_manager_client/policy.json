{
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "resourcePath": "/policy",
    "basePath": "/policy-manager-service",
    "apiVersion": "1.0",
    "apis": [
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyListResult",
                    "summary": "Retrieves policies based on a given filter",
                    "nickname": "getFilterPolicies",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given scope",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given wireless segment, within a policyScope (policyScope is mandatory for this)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given Resource Application Id",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "applicationId"
                        },
                        {
                            "type": "string",
                            "description": "Starting index of the resources (1 based)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "offset"
                        },
                        {
                            "type": "string",
                            "description": "Number of resources to return",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "limit"
                        }
                    ],
                    "notes": "Get policy(s) based on a filter provided"
                }
            ],
            "description": "getFilterPolicies",
            "path": "/policy"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "DELETE",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Delete policies based on a given filter",
                    "nickname": "deleteFilterPolicies",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Delete policies for a given scope",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Delete policies for a given wireless segment, within a policyScope (policyScope is mandatory for this)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        }
                    ],
                    "notes": "Delete policies based on a given filter"
                }
            ],
            "description": "deleteFilterPolicies",
            "path": "/policy"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Update policy(s)",
                    "nickname": "update",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Epoch Time (The number of milli-seconds since January 1 1970 UTC) at which the policy should be scheduled (Optional) ",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scheduleAt"
                        },
                        {
                            "type": "string",
                            "description": "Custom Description (Optional)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scheduleDesc"
                        },
                        {
                            "type": "string",
                            "description": "Originator of this call (Optional)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scheduleOrigin"
                        },
                        {
                            "paramType": "body",
                            "type": "array",
                            "description": "Policy Object",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "items": {
                                "$ref": "Policy"
                            },
                            "name": "policyList"
                        }
                    ],
                    "notes": "Update a policy"
                }
            ],
            "description": "update",
            "path": "/policy"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "POST",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 202,
                            "message": "This Request is Accepted"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Create policy(s)",
                    "nickname": "add",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Epoch Time (The number of milli-seconds since January 1 1970 UTC) at which the policy should be scheduled (Optional) ",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scheduleAt"
                        },
                        {
                            "type": "string",
                            "description": "Custom Description (Optional)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scheduleDesc"
                        },
                        {
                            "type": "string",
                            "description": "Originator of this call (Optional)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scheduleOrigin"
                        },
                        {
                            "paramType": "body",
                            "type": "array",
                            "description": "Policy Object",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "items": {
                                "$ref": "Policy"
                            },
                            "name": "policyList"
                        }
                    ],
                    "notes": "Create a policy"
                }
            ],
            "description": "add",
            "path": "/policy"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "CountResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Return total count of policies",
                    "nickname": "getCount",
                    "parameters": [],
                    "notes": "Get total count of policies"
                }
            ],
            "description": "getCount",
            "path": "/policy/count"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "VersionDiffResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "VersionDiffResult",
                    "summary": "Retrieves the policy diff",
                    "nickname": "getPolicyDiff",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve policy diffs for the given version",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "version"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policy diffs for the given scope",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policy diffs for the given scopeWirelessSegment",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        }
                    ],
                    "notes": "This will return the list of policies diffs for a given version and scope. Each element will be a wrapper on existing policy type and existing application type. The policy wrapper in addition to policy will have an operation enum (CREATE, UPDATE, DELETE). CREATE means the policy existed on the selected version but does not exist in the current version. DELETE means the policy did not exist in the selected version but exists in the current version. UPDATE means the policy exists in both versions. Application wrapper has the same semantics for CREATE, UPDATE, DELETE"
                }
            ],
            "description": "getPolicyDiff",
            "path": "/policy/diff"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "POST",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 202,
                            "message": "This Request is Accepted"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Adds the policy diff",
                    "nickname": "addPolicyDiff",
                    "parameters": [
                        {
                            "type": "VersionDiffDTO",
                            "description": "VersionDiff",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "body",
                            "name": "versionDiffDTO"
                        }
                    ],
                    "notes": "The body of the request will contain a list of policy wrappers as obtained by the GET /policy/diff api for a given version. This request will create and apply a new version of the policies. Id and policies in VersionDiffDTO are optional params. But one of them have to be specified. If policies is specified id is ignored."
                }
            ],
            "description": "addPolicyDiff",
            "path": "/policy/diff"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "DELETE",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Deletes flows based on clientReference prefix",
                    "nickname": "deleteFlowsByClientReference",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "clientReference",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "clientReference"
                        }
                    ],
                    "notes": "deleteFlowsByClientReference"
                }
            ],
            "description": "deleteFlowsByClientReference",
            "path": "/policy/flow"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "FlowListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "FlowListResult",
                    "summary": "Retrieves flows with search criteria",
                    "nickname": "getFlows",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Starting index of the resources (1 based)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "offset"
                        },
                        {
                            "type": "string",
                            "description": "Number of resources to return",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "limit"
                        }
                    ],
                    "notes": "getFlows"
                }
            ],
            "description": "getFlows",
            "path": "/policy/flow"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "POST",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "FlowIdResult"
                        },
                        {
                            "code": 202,
                            "message": "This Request is Accepted"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "FlowIdResult",
                    "summary": "Creates a new traffic flow for which qos policies will be applied",
                    "nickname": "addFlow",
                    "parameters": [
                        {
                            "type": "FlowDTO",
                            "description": "flowDTO",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "body",
                            "name": "flowDTO"
                        }
                    ],
                    "notes": "addFlow"
                }
            ],
            "description": "addFlow",
            "path": "/policy/flow"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "CountResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves the number of flows",
                    "nickname": "getFlowCount",
                    "parameters": [],
                    "notes": "getFlowCount"
                }
            ],
            "description": "getFlowCount",
            "path": "/policy/flow/count"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Update the dynamic policy flow setting. This setting will be used to allow/disallow dynamic flows /policy/flow requests.",
                    "nickname": "updateFlowPolicySetting",
                    "parameters": [
                        {
                            "type": "PolicyFlowSettingDTO",
                            "description": "policyFlowSettingDTO",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "body",
                            "name": "policyFlowSettingDTO"
                        }
                    ],
                    "notes": "updateFlowPolicySetting"
                }
            ],
            "description": "updateFlowPolicySetting",
            "path": "/policy/flow/setting"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyFlowSettingResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyFlowSettingResult",
                    "summary": "Retrieves dynamic policy flow setting",
                    "nickname": "getPolicyFlowSetting",
                    "parameters": [],
                    "notes": "getPolicyFlowSetting"
                }
            ],
            "description": "getPolicyFlowSetting",
            "path": "/policy/flow/setting"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "DELETE",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Delete a policy for the flow by its id",
                    "nickname": "deleteFlow",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "id",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "path",
                            "name": "id"
                        }
                    ],
                    "notes": "Delete a policy for the flow by its id"
                }
            ],
            "description": "deleteFlow",
            "path": "/policy/flow/{id}"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "FlowResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "FlowResult",
                    "summary": "Retrieves a flow by its id",
                    "nickname": "getFlow",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "id",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "path",
                            "name": "id"
                        }
                    ],
                    "notes": "getFlow"
                }
            ],
            "description": "getFlow",
            "path": "/policy/flow/{id}"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyIntentSummaryDTOResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyIntentSummaryDTOResult",
                    "summary": "Retrieves the policy intent summary based on a given filter",
                    "nickname": "getPolicyIntentSummary",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve the policy intent summary based on a given policyScope",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve the policy intent summary based on a given scopeWirelessSegment given the policyScope",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        },
                        {
                            "type": "string",
                            "description": "Starting index of the resources (1 based)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "offset"
                        },
                        {
                            "type": "string",
                            "description": "Number of resources to return",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "limit"
                        }
                    ],
                    "notes": "Get the policy intent summary based on a given filter"
                }
            ],
            "description": "getPolicyIntentSummary",
            "path": "/policy/intent/summary"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyApplicationListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyApplicationListResult",
                    "summary": "Retrieves Assigned applications that are (or aren't) stale in policies for a given policyScope & scopeWirelessSegment based on a given filter",
                    "nickname": "getAssignedPolicyApplications",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given policyScope",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given wireless segment, within a policyScope",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        },
                        {
                            "type": "string",
                            "description": "Indicates whether the retrieved applications have/have not been updated since the last time the policy was provisioned. If unspecified, both will be returned",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "stale"
                        }
                    ],
                    "notes": "Get applications(s) based on a filter provided"
                }
            ],
            "description": "getAssignedPolicyApplications",
            "path": "/policy/intent/summary/application/assigned"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyApplicationListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyApplicationListResult",
                    "summary": "Retrieves Unassigned applications for a given policyScope & scopeWirelessSegment",
                    "nickname": "getUnassignedPolicyApplications",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given policyScope",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given wireless segment, within a policyScope",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        }
                    ],
                    "notes": "Get applications(s) based on a filter provided"
                }
            ],
            "description": "getUnassignedPolicyApplications",
            "path": "/policy/intent/summary/application/unassigned"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyStatusListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyStatusListResult",
                    "summary": "Retrieves policy statuses based on a given filter",
                    "nickname": "getPolicyStatus",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given networkDeviceId",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "networkDeviceId"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given scope",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given wirelessSegment within a policyScope (policyScope is mandatory for this)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        },
                        {
                            "type": "string",
                            "description": "Starting index of the resources (1 based)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "offset"
                        },
                        {
                            "type": "string",
                            "description": "Number of resources to return (Use smaller limit value for better response times. Max 50)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "limit"
                        }
                    ],
                    "notes": "Get policy status(s) based on filter(s) provided. Either provide networkDeviceId or provide policyScope, offset, limit"
                }
            ],
            "description": "getPolicyStatus",
            "path": "/policy/status"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "CountResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves count of policy status(es) based on a given policyScope & scopeWirelessSegment",
                    "nickname": "getCountByPolicyScope",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve count of policy status(es) based on a given policyScope",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve count of policy status(es) based on a given scopeWirelessSegment",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        }
                    ],
                    "notes": "Get count of policy status(es) based on a given policyScope & scopeWirelessSegment"
                }
            ],
            "description": "getCountByPolicyScope",
            "path": "/policy/status/count"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyStatusListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyStatusListResult",
                    "summary": "Retrieves policy statuses summary based on a given filter",
                    "nickname": "getPolicyStatusSummary",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve policy status(es) for a given scope",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Starting index of the resources (1 based)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "offset"
                        },
                        {
                            "type": "string",
                            "description": "Number of resources to return (Max 500)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "limit"
                        }
                    ],
                    "notes": "Get policy status(s) summary based on a filter provided"
                }
            ],
            "description": "getPolicyStatusSummary",
            "path": "/policy/status/summary"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "POST",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 202,
                            "message": "This Request is Accepted"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Create a policy tag",
                    "nickname": "addPolicyTag",
                    "parameters": [
                        {
                            "type": "PolicyTagDTO",
                            "description": "policyTagDTO",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "body",
                            "name": "policyTagDTO"
                        }
                    ],
                    "notes": "addPolicyTag"
                }
            ],
            "description": "addPolicyTag",
            "path": "/policy/tag"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "DELETE",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Delete a policy tag.",
                    "nickname": "deletePolicyTag",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Policy Tag",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyTag"
                        }
                    ],
                    "notes": "deletePolicyTag"
                }
            ],
            "description": "deletePolicyTag",
            "path": "/policy/tag"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyTagListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyTagListResult",
                    "summary": "Retrieves policy tags",
                    "nickname": "getPolicyTags",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "policyTag search substring",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyTag"
                        },
                        {
                            "type": "string",
                            "description": "type of search (startsWith, endsWith, contains",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "filterOperation"
                        }
                    ],
                    "notes": "getPolicyTags"
                }
            ],
            "description": "getPolicyTags",
            "path": "/policy/tag"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyTagAssociationListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyTagAssociationListResult",
                    "summary": "Retrieves network device ids that have the policy tag",
                    "nickname": "getPolicyTagAssociation",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Policy Tag",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyTag"
                        },
                        {
                            "type": "string",
                            "description": "Network device Id",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "networkDeviceId"
                        },
                        {
                            "type": "string",
                            "description": "Restricted Flag",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "networkDevices+restricted"
                        },
                        {
                            "type": "string",
                            "description": "Starting index of the resources (1 based)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "offset"
                        },
                        {
                            "type": "string",
                            "description": "Number of resources to return",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "limit"
                        }
                    ],
                    "notes": "getPolicyTagAssociation"
                }
            ],
            "description": "getPolicyTagAssociation",
            "path": "/policy/tag/association"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "POST",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 202,
                            "message": "This Request is Accepted"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Add a policy tag to network devices.",
                    "nickname": "addPolicyTagAssociation",
                    "parameters": [
                        {
                            "type": "PolicyTagAssociationDTO",
                            "description": "policyTagAssociationDTO",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "body",
                            "name": "policyTagAssociationDTO"
                        }
                    ],
                    "notes": "addPolicyTagAssociation"
                }
            ],
            "description": "addPolicyTagAssociation",
            "path": "/policy/tag/association"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "DELETE",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Remove a policy tag from network device.",
                    "nickname": "deletePolicyTagAssociation",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Policy Tag",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyTag"
                        },
                        {
                            "type": "string",
                            "description": "NetworkDeviceId",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "networkDeviceId"
                        }
                    ],
                    "notes": "deletePolicyTagAssociation"
                }
            ],
            "description": "deletePolicyTagAssociation",
            "path": "/policy/tag/association"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyTagAssociationDeviceListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyTagAssociationDeviceListResult",
                    "summary": "Retrieves network devices in policy tags based on filters.",
                    "nickname": "getPolicyTagAssociationNetworkDevices",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Boolean to indicate if the device is currently not assigned to any policy tag. If empty, both assigned and unAssigned devices will be returned.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "unAssigned"
                        },
                        {
                            "type": "string",
                            "description": "Boolean to indicate if the user has restricted access to the device. If empty, devices with both restricted and unrestricted access will be returned.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "restricted"
                        },
                        {
                            "type": "string",
                            "description": "The name of the device.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "deviceName"
                        },
                        {
                            "type": "string",
                            "description": "The location name of the device.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "locationName"
                        },
                        {
                            "type": "string",
                            "description": "The ip address of the device.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "deviceIp"
                        },
                        {
                            "type": "string",
                            "description": "The filter operation for the query parameters (startsWith, contains, endsWith). If filterOperation is not provided, then it is an exact match.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "filterOperation"
                        },
                        {
                            "type": "string",
                            "description": "Starting index of the resources (1 based).",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "offset"
                        },
                        {
                            "type": "string",
                            "description": "Number of resources to return. Maximum limit is 500.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "limit"
                        }
                    ],
                    "notes": "Retrieves network devices in policy tags based on filters."
                }
            ],
            "description": "getPolicyTagAssociationNetworkDevices",
            "path": "/policy/tag/association/network-device"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "CountResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves the number of network devices in policy tags based on filters.",
                    "nickname": "getPolicyTagAssociationNetworkDevicesCount",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Boolean to indicate if the device is currently not assigned to any policy tag. If empty count of both assigned and unAssigned devices will be returned.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "unAssigned"
                        },
                        {
                            "type": "string",
                            "description": "Boolean to indicate if the user has restricted access to the device. If empty, count of devices with both restricted and unrestricted access will be returned.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "restricted"
                        },
                        {
                            "type": "string",
                            "description": "The name of the device.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "deviceName"
                        },
                        {
                            "type": "string",
                            "description": "The location name of the device.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "locationName"
                        },
                        {
                            "type": "string",
                            "description": "The ip address of the device.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "deviceIp"
                        },
                        {
                            "type": "string",
                            "description": "The filter operation for the query parameters (startsWith, contains, endsWith). If filterOperation is not provided, then it is an exact match.",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "filterOperation"
                        }
                    ],
                    "notes": "Retrieves the number of network devices in policy tags based on filters."
                }
            ],
            "description": "getPolicyTagAssociationNetworkDevicesCount",
            "path": "/policy/tag/association/network-device/count"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "CountResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves the number of policy tags",
                    "nickname": "getPolicyTagsCount",
                    "parameters": [],
                    "notes": "getPolicyTagsCount"
                }
            ],
            "description": "getPolicyTagsCount",
            "path": "/policy/tag/count"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyVersionNumberListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyVersionNumberListResult",
                    "summary": "Retrieves the policy version numbers.",
                    "nickname": "getPolicyVersionNumbers",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve policy version numbers for the given scope",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policy version numbers for the given scopeWirelessSegment",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        },
                        {
                            "type": "string",
                            "description": "Starting index of the resources (1 based)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "offset"
                        },
                        {
                            "type": "string",
                            "description": "Number of resources to return",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "limit"
                        }
                    ],
                    "notes": "Retrieves the policy version numbers. The first element in the list is the current version. The versions are in descending order."
                }
            ],
            "description": "getPolicyVersionNumbers",
            "path": "/policy/version"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "DELETE",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Delete policies history based on a given filter",
                    "nickname": "deleteFilterPoliciesHistory",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Delete policies history for a given scope",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Delete policies history for a given wireless segment, within a policyScope (policyScope is mandatory for this)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        }
                    ],
                    "notes": "Delete policies history based on a given filter"
                }
            ],
            "description": "deleteFilterPoliciesHistory",
            "path": "/policy/version"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "CountResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Retrieves the count of policy version numbers.",
                    "nickname": "getPolicyVersionNumbersCount",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve the count of policy version numbers for the given scope",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "policyScope"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve the count of policy version numbers for the given scopeWirelessSegment",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scopeWirelessSegment"
                        }
                    ],
                    "notes": "Retrieves the count of policy version numbers."
                }
            ],
            "description": "getPolicyVersionNumbersCount",
            "path": "/policy/version/count"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "DELETE",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Deletes a policy by its id",
                    "nickname": "delete",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "id",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "path",
                            "name": "id"
                        }
                    ],
                    "notes": "Delete a policy by id"
                }
            ],
            "description": "delete",
            "path": "/policy/{id}"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyResult",
                    "summary": "Retrieves a policy based on its id",
                    "nickname": "get",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "id",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "path",
                            "name": "id"
                        }
                    ],
                    "notes": "Get a policy by id"
                }
            ],
            "description": "get",
            "path": "/policy/{id}"
        }
    ],
    "models": {
        "PolicyTagAssociationDeviceDTO": {
            "properties": {
                "deviceName": {
                    "type": "string"
                },
                "deviceRole": {
                    "type": "string"
                },
                "deviceIp": {
                    "type": "string"
                },
                "deviceId": {
                    "type": "string"
                },
                "restrictedReason": {
                    "type": "string"
                },
                "restricted": {
                    "type": "boolean"
                },
                "deviceType": {
                    "type": "string"
                },
                "unAssigned": {
                    "type": "boolean"
                }
            },
            "extends": "",
            "id": "PolicyTagAssociationDeviceDTO",
            "description": ""
        },
        "VersionDiffResult": {
            "properties": {
                "response": {
                    "$ref": "VersionDiffDTO"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "VersionDiffResult",
            "description": ""
        },
        "VersionDiffDTO": {
            "properties": {
                "policies": {
                    "items": {
                        "$ref": "PolicyDiffDTO"
                    },
                    "type": "array",
                    "description": "Policies from the cached diff. This attribute enables the user to make changes to the diffs that he can post for rollback."
                },
                "id": {
                    "type": "string",
                    "description": "Id of the cached diff. Use id in the post api if you don't want to make any modifications to the diff corresponding to the diff id."
                }
            },
            "extends": "",
            "id": "VersionDiffDTO",
            "description": ""
        },
        "PolicyTagListResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyTagDTO"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyTagListResult",
            "description": ""
        },
        "PolicyStatusListResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyStatusDTO"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyStatusListResult",
            "description": ""
        },
        "PolicyTagAssociationDTO": {
            "properties": {
                "networkDevices": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyTagAssociationDeviceDTO"
                    }
                },
                "unModifiable": {
                    "type": "boolean"
                },
                "unModifiableReason": {
                    "type": "string"
                },
                "policyTag": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyTagAssociationDTO",
            "description": ""
        },
        "PolicyTagAssociationDeviceListResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyTagAssociationDeviceDTO"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyTagAssociationDeviceListResult",
            "description": ""
        },
        "PolicyIntentSummaryDTO": {
            "properties": {
                "numberOfDevices": {
                    "format": "int64",
                    "type": "integer",
                    "description": "The number of devices in the policy scope"
                },
                "applicationsStale": {
                    "type": "boolean",
                    "description": "Flag to indicate if applications are stale in the policy"
                },
                "allPoliciesDeleted": {
                    "type": "boolean",
                    "description": "Flag to indicate if all policies are deleted in the policy scope"
                },
                "operations": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "The operations in that version. (policy-add, policy-update, policy-delete)"
                },
                "lastUpdateTime": {
                    "format": "int64",
                    "type": "integer",
                    "description": "Last update time of the policy"
                },
                "policyScope": {
                    "type": "string",
                    "description": "Scope of the policy"
                },
                "scopeWirelessSegment": {
                    "type": "string",
                    "description": "Wireless segment of the policy"
                },
                "latestPolicyVersion": {
                    "format": "int64",
                    "type": "integer",
                    "description": "Latest version of the policy"
                },
                "serviceProviderProfileStale": {
                    "type": "boolean",
                    "description": "Flag to indicate if Service Provider Profiles are stale in the policy scope"
                },
                "numberOfAssignedApplications": {
                    "format": "int64",
                    "type": "integer",
                    "description": "The number of assigned applications in the policy"
                }
            },
            "extends": "",
            "required": [
                "operations",
                "numberOfDevices",
                "applicationsStale",
                "allPoliciesDeleted",
                "serviceProviderProfileStale",
                "policyScope",
                "lastUpdateTime",
                "numberOfAssignedApplications",
                "latestPolicyVersion"
            ],
            "id": "PolicyIntentSummaryDTO",
            "description": ""
        },
        "PolicyTagAssociationListResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyTagAssociationDTO"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyTagAssociationListResult",
            "description": ""
        },
        "PolicyConsumerProducerApplication": {
            "properties": {
                "producerApplication": {
                    "$ref": "PolicyApplication"
                },
                "consumerApplication": {
                    "$ref": "PolicyApplication"
                }
            },
            "extends": "",
            "id": "PolicyConsumerProducerApplication",
            "description": ""
        },
        "FlowListResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "FlowDTO"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "FlowListResult",
            "description": ""
        },
        "PolicyFlowSettingResult": {
            "properties": {
                "response": {
                    "$ref": "PolicyFlowSettingDTO"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyFlowSettingResult",
            "description": ""
        },
        "FlowIdResponse": {
            "properties": {
                "taskId": {
                    "type": "string"
                },
                "flowId": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "FlowIdResponse",
            "description": ""
        },
        "PolicyStatusDTO": {
            "properties": {
                "status": {
                    "type": "string"
                },
                "policyScope": {
                    "type": "string"
                },
                "networkDeviceIp": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "businessIrrelevantConsumerProducerApplications": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyConsumerProducerApplication"
                    }
                },
                "lastSuccessfulPolicyVersion": {
                    "type": "string"
                },
                "scopeWirelessSegment": {
                    "type": "string"
                },
                "outOfScope": {
                    "type": "boolean"
                },
                "policyVersion": {
                    "type": "string"
                },
                "networkDeviceId": {
                    "type": "string"
                },
                "businessRelevantApplications": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyApplication"
                    }
                },
                "networkDeviceName": {
                    "type": "string"
                },
                "instanceUuid": {
                    "type": "string"
                },
                "pending": {
                    "type": "boolean"
                },
                "businessIrrelevantApplications": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyApplication"
                    }
                },
                "businessRelevantConsumerProducerApplications": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyConsumerProducerApplication"
                    }
                },
                "applicationPolicyCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "failureReason": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyStatusDTO",
            "description": ""
        },
        "PolicyFlowSettingDTO": {
            "properties": {
                "flowPolicyEnabled": {
                    "type": "boolean",
                    "description": "Allowed values are true, false"
                }
            },
            "extends": "",
            "required": [
                "flowPolicyEnabled"
            ],
            "id": "PolicyFlowSettingDTO",
            "description": ""
        },
        "PolicyDiffDTO": {
            "properties": {
                "operation": {
                    "type": "string",
                    "description": "operation",
                    "enum": [
                        "CREATE",
                        "UPDATE",
                        "DELETE"
                    ]
                },
                "policy": {
                    "$ref": "Policy",
                    "description": "policy"
                }
            },
            "extends": "",
            "id": "PolicyDiffDTO",
            "description": ""
        },
        "PolicyIntentSummaryDTOResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyIntentSummaryDTO"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyIntentSummaryDTOResult",
            "description": ""
        },
        "PolicyListResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "Policy"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyListResult",
            "description": ""
        },
        "PolicyVersionNumberListResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "VersionNumberDTO"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyVersionNumberListResult",
            "description": ""
        },
        "PolicyApplicationDiffDTO": {
            "properties": {
                "operation": {
                    "type": "string",
                    "description": "operation",
                    "enum": [
                        "CREATE",
                        "UPDATE",
                        "DELETE"
                    ]
                },
                "policyApplication": {
                    "$ref": "PolicyApplication",
                    "description": "application"
                }
            },
            "extends": "",
            "id": "PolicyApplicationDiffDTO",
            "description": ""
        },
        "PolicyTagDTO": {
            "properties": {
                "policyTag": {
                    "type": "string",
                    "description": "Policy Tag value"
                }
            },
            "extends": "",
            "required": [
                "policyTag"
            ],
            "id": "PolicyTagDTO",
            "description": ""
        },
        "NetworkUser": {
            "properties": {
                "applicationDiffs": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "PolicyApplicationDiffDTO"
                    }
                },
                "deviceTypes": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locations": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applications": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "PolicyApplication"
                    }
                },
                "userIdentifiers": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "categories": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "CategoryDTO"
                    }
                }
            },
            "extends": "",
            "id": "NetworkUser",
            "description": ""
        },
        "Policy": {
            "properties": {
                "state": {
                    "type": "string"
                },
                "policyScope": {
                    "type": "string",
                    "description": "policyScope"
                },
                "actionProperty": {
                    "$ref": "ActionProperty",
                    "description": "ActionProperty"
                },
                "networkUser": {
                    "$ref": "NetworkUser",
                    "description": "Network User"
                },
                "scopeWirelessSegment": {
                    "type": "string"
                },
                "taskId": {
                    "type": "string",
                    "description": "Task ID"
                },
                "policyPriority": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Policy Priority"
                },
                "policyName": {
                    "type": "string",
                    "description": "name of the policy"
                },
                "actions": {
                    "uniqueItems": true,
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "description": "Action Set"
                },
                "instanceUuid": {
                    "type": "string",
                    "description": ""
                },
                "policyOwner": {
                    "type": "string",
                    "description": "Policy Owner"
                },
                "resource": {
                    "$ref": "PolicyResource",
                    "description": "Resource"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                }
            },
            "extends": "",
            "required": [
                "actions",
                "networkUser",
                "policyOwner",
                "actionProperty",
                "policyScope",
                "resource",
                "id",
                "taskId",
                "policyName",
                "policyPriority"
            ],
            "id": "Policy",
            "description": ""
        },
        "CategoryDTO": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "Category Name"
                }
            },
            "extends": "",
            "required": [
                "name",
                "id"
            ],
            "id": "CategoryDTO",
            "description": ""
        },
        "TaskId": {
            "properties": {},
            "extends": "",
            "id": "TaskId",
            "description": ""
        },
        "TaskIdResponse": {
            "properties": {
                "url": {
                    "type": "string"
                },
                "taskId": {
                    "$ref": "TaskId"
                }
            },
            "extends": "",
            "id": "TaskIdResponse",
            "description": ""
        },
        "FlowDTO": {
            "properties": {
                "clientReference": {
                    "type": "string",
                    "description": "clientReference (can be used by the client as a reference to this resource"
                },
                "destPort": {
                    "type": "string",
                    "description": "destPort"
                },
                "status": {
                    "type": "string"
                },
                "sourcePort": {
                    "type": "string",
                    "description": "sourcePort"
                },
                "destIP": {
                    "type": "string",
                    "description": "destIP"
                },
                "detailedFlowType": {
                    "type": "string",
                    "description": "detailedFlowType (more detailed classification than flowType)"
                },
                "averageBandwidth": {
                    "type": "string",
                    "description": "averageBandwidth in kbps (min: 0, max: 2147483647 kbps)"
                },
                "codec": {
                    "type": "string",
                    "description": "codec"
                },
                "protocol": {
                    "type": "string",
                    "description": "protocol"
                },
                "peakBandwidth": {
                    "type": "string",
                    "description": "peakBandwidth in kbps (min: 0, max: 2147483647 kbps)"
                },
                "interfaceId": {
                    "type": "string",
                    "description": "interfaceId"
                },
                "applicationName": {
                    "type": "string",
                    "description": "APIC-EM application name"
                },
                "interfaceName": {
                    "type": "string",
                    "description": "interfaceName"
                },
                "flowType": {
                    "type": "string",
                    "description": "flowType"
                },
                "networkDeviceName": {
                    "type": "string",
                    "description": "networkDeviceName"
                },
                "networkDeviceId": {
                    "type": "string",
                    "description": "networkDeviceId"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "matchDSCP": {
                    "type": "string",
                    "description": "DSCP of the flow"
                },
                "sourceIP": {
                    "type": "string",
                    "description": "sourceIP"
                },
                "failureReason": {
                    "type": "string"
                }
            },
            "extends": "",
            "required": [
                "flowType",
                "sourceIP"
            ],
            "id": "FlowDTO",
            "description": ""
        },
        "FlowIdResult": {
            "properties": {
                "response": {
                    "$ref": "FlowIdResponse"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "FlowIdResult",
            "description": ""
        },
        "PolicyApplication": {
            "properties": {
                "appName": {
                    "type": "string"
                },
                "stale": {
                    "type": "boolean",
                    "description": "Indicates whether the application has been updated since the last time this policy was provisioned"
                },
                "raw": {
                    "type": "string",
                    "description": "Either raw Application of the form port:protocol should be specified or appId should be specified"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "trafficClass": {
                    "type": "string",
                    "description": "Traffic class to which the app belongs"
                }
            },
            "extends": "",
            "required": [
                "trafficClass",
                "id"
            ],
            "id": "PolicyApplication",
            "description": ""
        },
        "VersionNumberDTO": {
            "properties": {
                "createTime": {
                    "format": "int64",
                    "type": "integer",
                    "description": "time at which the version was created"
                },
                "version": {
                    "format": "int64",
                    "type": "integer",
                    "description": "version number"
                },
                "policyChanged": {
                    "type": "boolean",
                    "description": "true if the version was created as a result of put/post/delete on the policy"
                }
            },
            "extends": "",
            "id": "VersionNumberDTO",
            "description": ""
        },
        "PolicyApplicationListResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyApplication"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyApplicationListResult",
            "description": ""
        },
        "PolicyResource": {
            "properties": {
                "applicationDiffs": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "PolicyApplicationDiffDTO"
                    }
                },
                "deviceTypes": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "locations": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applications": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "PolicyApplication"
                    }
                },
                "userIdentifiers": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "categories": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "$ref": "CategoryDTO"
                    }
                }
            },
            "extends": "",
            "id": "PolicyResource",
            "description": ""
        },
        "CountResult": {
            "properties": {
                "response": {
                    "format": "int32",
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "CountResult",
            "description": ""
        },
        "TaskIdResult": {
            "properties": {
                "response": {
                    "$ref": "TaskIdResponse"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "TaskIdResult",
            "description": ""
        },
        "PolicyResult": {
            "properties": {
                "response": {
                    "$ref": "Policy"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyResult",
            "description": ""
        },
        "ActionProperty": {
            "properties": {
                "priorityLevel": {
                    "type": "string",
                    "description": "priority level for a policy"
                },
                "relevanceLevel": {
                    "type": "string",
                    "description": "relevance level for a policy"
                },
                "pathPreferenceFlag": {
                    "type": "boolean",
                    "description": "path preference flag"
                },
                "PrimaryPathPref": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "trustLevel": {
                    "type": "string",
                    "description": "trust level for a policy"
                },
                "pathPreference": {
                    "type": "string",
                    "description": "path preference for a policy"
                },
                "pathControlFlag": {
                    "type": "boolean",
                    "description": "path control flag"
                },
                "maintainExperience": {
                    "type": "string"
                },
                "experienceLevel": {
                    "type": "string",
                    "description": "experience level for a policy"
                },
                "SecondaryPathPref": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "PathOfLastResort": {
                    "type": "string"
                },
                "destinations": {
                    "uniqueItems": true,
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "TertiaryPathPref": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "extends": "",
            "required": [
                "priorityLevel",
                "experienceLevel",
                "pathPreference",
                "trustLevel",
                "pathControlFlag",
                "pathPreferenceFlag",
                "relevanceLevel"
            ],
            "id": "ActionProperty",
            "description": ""
        },
        "FlowResult": {
            "properties": {
                "response": {
                    "$ref": "FlowDTO"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "FlowResult",
            "description": ""
        }
    },
    "swaggerVersion": "1.2"
}