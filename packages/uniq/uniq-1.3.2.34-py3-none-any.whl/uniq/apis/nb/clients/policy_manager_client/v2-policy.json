{
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "resourcePath": "/v2/policy",
    "basePath": "/policy-manager-service",
    "apiVersion": "1.0",
    "apis": [
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyDTOListResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyDTOListResult",
                    "summary": "Retrieves policies based on a given filter",
                    "nickname": "getPolicyByFilters",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given name",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "name"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given contract name",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "contract+name"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given producer scalable group name",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "producer+scalableGroupName"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given consumer scalable group name",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "consumer+scalableGroupName"
                        },
                        {
                            "type": "string",
                            "description": "Retrieve policies for a given scalable group name (used within producer or consumer)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "scalableGroupName"
                        },
                        {
                            "type": "string",
                            "description": "Starting index of the resources (1 based)",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "offset"
                        },
                        {
                            "type": "string",
                            "description": "Number of resources to return",
                            "allowMultiple": false,
                            "required": false,
                            "defaultValue": "",
                            "paramType": "query",
                            "name": "limit"
                        }
                    ],
                    "notes": "Retrieves policies based on a given filter"
                }
            ],
            "description": "getPolicyByFilters",
            "path": "/v2/policy"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "POST",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 202,
                            "message": "This Request is Accepted"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Create Policy(s)",
                    "nickname": "add",
                    "parameters": [
                        {
                            "paramType": "body",
                            "type": "array",
                            "description": "Policy Object(s)",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "items": {
                                "$ref": "PolicyDTO"
                            },
                            "name": "policyDTOs"
                        }
                    ],
                    "notes": "Create Policy(s)"
                }
            ],
            "description": "add",
            "path": "/v2/policy"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "PUT",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "consumes": [
                        "application/json"
                    ],
                    "type": "TaskIdResult",
                    "summary": "Update Policy(s)",
                    "nickname": "update",
                    "parameters": [
                        {
                            "paramType": "body",
                            "type": "array",
                            "description": "Policy Object(s)",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "items": {
                                "$ref": "PolicyDTO"
                            },
                            "name": "policyDTOs"
                        }
                    ],
                    "notes": "Update Policy(s)"
                }
            ],
            "description": "update",
            "path": "/v2/policy"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "CountResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "CountResult",
                    "summary": "Return total count of policies",
                    "nickname": "getCount",
                    "parameters": [],
                    "notes": "Get total count of policies"
                }
            ],
            "description": "getCount",
            "path": "/v2/policy/count"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "DELETE",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "TaskIdResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "TaskIdResult",
                    "summary": "Deletes a policy by its id",
                    "nickname": "delete",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "id",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "path",
                            "name": "id"
                        }
                    ],
                    "notes": "Delete a policy by id"
                }
            ],
            "description": "delete",
            "path": "/v2/policy/{id}"
        },
        {
            "operations": [
                {
                    "produces": [
                        "application/json"
                    ],
                    "method": "GET",
                    "deprecated": "false",
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "This Request is OK",
                            "responseModel": "PolicyDTOResult"
                        },
                        {
                            "code": 403,
                            "message": "This user is Forbidden Access to this Resource"
                        },
                        {
                            "code": 401,
                            "message": "Not Authorized Yet, Credentials to be supplied"
                        },
                        {
                            "code": 404,
                            "message": "No Resource Found"
                        }
                    ],
                    "type": "PolicyDTOResult",
                    "summary": "Retrieves a policy based on its id",
                    "nickname": "getById",
                    "parameters": [
                        {
                            "type": "string",
                            "description": "id",
                            "allowMultiple": false,
                            "required": true,
                            "defaultValue": "",
                            "paramType": "path",
                            "name": "id"
                        }
                    ],
                    "notes": "Get a policy by id"
                }
            ],
            "description": "getById",
            "path": "/v2/policy/{id}"
        }
    ],
    "models": {
        "ProducerDTO": {
            "properties": {
                "scalableGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "ScalableGroupDTO"
                    }
                }
            },
            "extends": "",
            "id": "ProducerDTO",
            "description": ""
        },
        "ConsumerDTO": {
            "properties": {
                "scalableGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "ScalableGroupDTO"
                    }
                }
            },
            "extends": "",
            "id": "ConsumerDTO",
            "description": ""
        },
        "TaskIdResult": {
            "properties": {
                "response": {
                    "$ref": "TaskIdResponse"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "TaskIdResult",
            "description": ""
        },
        "PolicyDTOResult": {
            "properties": {
                "response": {
                    "$ref": "PolicyDTO"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyDTOResult",
            "description": ""
        },
        "CountResult": {
            "properties": {
                "response": {
                    "format": "int32",
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "CountResult",
            "description": ""
        },
        "PolicyDTOListResult": {
            "properties": {
                "response": {
                    "type": "array",
                    "items": {
                        "$ref": "PolicyDTO"
                    }
                },
                "version": {
                    "type": "string"
                }
            },
            "extends": "",
            "id": "PolicyDTOListResult",
            "description": ""
        },
        "PolicyContractDTO": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                }
            },
            "extends": "",
            "required": [
                "name",
                "id"
            ],
            "id": "PolicyContractDTO",
            "description": ""
        },
        "TaskId": {
            "properties": {},
            "extends": "",
            "id": "TaskId",
            "description": ""
        },
        "PolicyDTO": {
            "properties": {
                "consumer": {
                    "$ref": "ConsumerDTO",
                    "description": "consumer"
                },
                "contract": {
                    "$ref": "PolicyContractDTO",
                    "description": "contract"
                },
                "producer": {
                    "$ref": "ProducerDTO",
                    "description": "producer"
                },
                "description": {
                    "type": "string",
                    "description": "description"
                },
                "lastUpdateTime": {
                    "format": "int64",
                    "type": "integer",
                    "description": "lastUpdateTime"
                },
                "createTime": {
                    "format": "int64",
                    "type": "integer",
                    "description": "createTime"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "priority": {
                    "format": "int32",
                    "type": "integer",
                    "description": "priority"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                }
            },
            "extends": "",
            "required": [
                "priority",
                "name",
                "contract",
                "consumer",
                "producer",
                "id"
            ],
            "id": "PolicyDTO",
            "description": ""
        },
        "ScalableGroupDTO": {
            "properties": {
                "state": {
                    "type": "string",
                    "description": "state"
                },
                "id": {
                    "type": "string",
                    "description": "id"
                },
                "name": {
                    "type": "string",
                    "description": "name"
                }
            },
            "extends": "",
            "required": [
                "id"
            ],
            "id": "ScalableGroupDTO",
            "description": ""
        },
        "TaskIdResponse": {
            "properties": {
                "url": {
                    "type": "string"
                },
                "taskId": {
                    "$ref": "TaskId"
                }
            },
            "extends": "",
            "id": "TaskIdResponse",
            "description": ""
        }
    },
    "swaggerVersion": "1.2"
}