[tox]
minversion = 1.8
envlist = py{26,27}-{mysqldb,mysql-oursql},py{34,35}-{mysqlclient,pypostgresql},py{26,27,34,35}-{mysql-connector,pymysql,postgres-psycopg,postgres-pygresql,sqlite,sqlite-memory},py{27,34,35}-{firebird-fdb,firebirdsql},py{27,34}-flake8,py{27,34,35}-{mssql,mysql-connector,postgres-psycopg,sqlite,sqlite-memory}-w32

# Base test environment settings
[testenv]
# Ensure we cd into sqlobject before running the tests
changedir = ./sqlobject/
deps =
    pytest
    pytest-cov
    py{26,27}: FormEncode >= 1.1.1, != 1.3.0
    py{34,35}: FormEncode >= 1.3.1
    PyDispatcher>=2.0.4
    py{26,27}: egenix-mx-base
    mysqldb: mysql-python
    mysqlclient: mysqlclient
    mysql-connector: mysql-connector
    mysql-oursql: oursql
    pymysql: pymysql
    postgres-psycopg: psycopg2
    postgres-pygresql: pygresql
    pypostgresql: py-postgresql
    firebird-fdb: fdb
    firebirdsql: firebirdsql
    mssql: pymssql
passenv = CI TRAVIS TRAVIS_* PGPASSWORD
# Don't fail or warn on uninstalled commands
whitelist_externals =
    mysql
    createdb
    dropdb
    rm
    sudo
    isql-fb
    sqlcmd

# MySQL test environments
[mysqldb]
commands =
    -mysql -e 'drop database sqlobject_test;'
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=mysqldb&debug=1
    mysql -e 'drop database sqlobject_test;'

[testenv:py26-mysqldb]
commands = {[mysqldb]commands}

[testenv:py27-mysqldb]
commands = {[mysqldb]commands}

[mysqlclient]
commands =
    -mysql -e 'drop database sqlobject_test;'
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=mysqldb&charset=utf8&debug=1
    mysql -e 'drop database sqlobject_test;'

[testenv:py34-mysqlclient]
commands = {[mysqlclient]commands}

[testenv:py35-mysqlclient]
commands = {[mysqlclient]commands}

[mysql-connector]
commands =
    -mysql -e 'drop database sqlobject_test;'
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=connector&charset=utf8&debug=1
    mysql -e 'drop database sqlobject_test;'

[testenv:py26-mysql-connector]
commands = {[mysql-connector]commands}

[testenv:py27-mysql-connector]
commands = {[mysql-connector]commands}

[testenv:py34-mysql-connector]
commands = {[mysql-connector]commands}

[testenv:py35-mysql-connector]
commands = {[mysql-connector]commands}

[oursql]
commands =
    -mysql -e 'drop database sqlobject_test;'
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=oursql&charset=utf8&debug=1
    mysql -e 'drop database sqlobject_test;'

[testenv:py26-mysql-oursql]
commands = {[oursql]commands}

[testenv:py27-mysql-oursql]
commands = {[oursql]commands}

[pymysql]
commands =
    -mysql -e 'drop database sqlobject_test;'
    mysql -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D mysql://root:@localhost/sqlobject_test?driver=pymysql&charset=utf8&debug=1
    mysql -e 'drop database sqlobject_test;'

[testenv:py26-pymysql]
commands = {[pymysql]commands}

[testenv:py27-pymysql]
commands = {[pymysql]commands}

[testenv:py34-pymysql]
commands = {[pymysql]commands}

[testenv:py35-pymysql]
commands = {[pymysql]commands}

# PostgreSQL test environments
[psycopg]
commands =
    -dropdb -U postgres -w sqlobject_test
    createdb -U postgres -w sqlobject_test
    pytest --cov=sqlobject -D postgres://postgres:@localhost/sqlobject_test?driver=psycopg&charset=utf-8&debug=1 tests include/tests inheritance/tests versioning/test
    dropdb -U postgres -w sqlobject_test

[testenv:py26-postgres-psycopg]
commands = {[psycopg]commands}

[testenv:py27-postgres-psycopg]
commands = {[psycopg]commands}

[testenv:py34-postgres-psycopg]
commands = {[psycopg]commands}

[testenv:py35-postgres-psycopg]
commands = {[psycopg]commands}

[pygresql]
commands =
    -dropdb -U postgres -w sqlobject_test
    createdb -U postgres -w sqlobject_test
    pytest --cov=sqlobject -D postgres://postgres:@localhost/sqlobject_test?driver=pygresql&charset=utf-8&debug=1 tests include/tests inheritance/tests versioning/test
    dropdb -U postgres -w sqlobject_test

[testenv:py26-postgres-pygresql]
commands = {[pygresql]commands}

[testenv:py27-postgres-pygresql]
commands = {[pygresql]commands}

[testenv:py34-postgres-pygresql]
commands = {[pygresql]commands}

[testenv:py35-postgres-pygresql]
commands = {[pygresql]commands}

[pypostgresql]
commands =
    -dropdb -U postgres -w sqlobject_test
    createdb -U postgres -w sqlobject_test
    pytest --cov=sqlobject -D postgres://postgres:@localhost/sqlobject_test?driver=pypostgresql&charset=utf-8&debug=1 tests include/tests inheritance/tests versioning/test
    dropdb -U postgres -w sqlobject_test

[testenv:py34-pypostgresql]
commands = {[pypostgresql]commands}

[testenv:py35-pypostgresql]
commands = {[pypostgresql]commands}

# SQLite test environments
[sqlite]
commands =
    -rm /tmp/sqlobject_test.sqdb
    pytest --cov=sqlobject -D sqlite:///tmp/sqlobject_test.sqdb?debug=1
    rm /tmp/sqlobject_test.sqdb

[testenv:py26-sqlite]
commands = {[sqlite]commands}

[testenv:py27-sqlite]
commands = {[sqlite]commands}

[testenv:py34-sqlite]
commands = {[sqlite]commands}

[testenv:py35-sqlite]
commands = {[sqlite]commands}

[sqlite-memory]
commands =
    pytest --cov=sqlobject -D sqlite:/:memory:?debug=1

[testenv:py26-sqlite-memory]
commands = {[sqlite-memory]commands}

[testenv:py27-sqlite-memory]
commands = {[sqlite-memory]commands}

[testenv:py34-sqlite-memory]
commands = {[sqlite-memory]commands}

[testenv:py35-sqlite-memory]
commands = {[sqlite-memory]commands}

# Firebird database test environments
[fdb]
commands =
    sudo rm -f /tmp/test.fdb
    isql-fb -u test -p test -i /var/lib/firebird/create_test_db
    pytest --cov=sqlobject -D 'firebird://test:test@localhost/tmp/test.fdb?debug=1'
    sudo rm /tmp/test.fdb

[testenv:py27-firebird-fdb]
commands = {[fdb]commands}

[testenv:py34-firebird-fdb]
commands = {[fdb]commands}

[testenv:py35-firebird-fdb]
commands = {[fdb]commands}

[firebirdsql]
commands =
    sudo rm -f /tmp/test.fdb
    isql-fb -u test -p test -i /var/lib/firebird/create_test_db
    pytest --cov=sqlobject -D 'firebird://test:test@localhost:3050/tmp/test.fdb?driver=firebirdsql&charset=utf8&debug=1'
    sudo rm /tmp/test.fdb

[testenv:py27-firebirdsql]
commands = {[firebirdsql]commands}

[testenv:py34-firebirdsql]
commands = {[firebirdsql]commands}

[testenv:py35-firebirdsql]
commands = {[firebirdsql]commands}

# Special test environments
[testenv:py27-flake8]
changedir = ./
deps =
    flake8
commands = flake8 .

[testenv:py34-flake8]
changedir = ./
deps =
    flake8
commands = flake8 .

# Windows testing
[mssql-w32]
commands =
    -sqlcmd -U sa -P "Password12!" -S .\SQL2014 -Q "DROP DATABASE sqlobject_test"
    sqlcmd -U sa -P "Password12!" -S .\SQL2014 -Q "CREATE DATABASE sqlobject_test"
    pytest --cov=sqlobject -D "mssql://sa:Password12!@localhost\SQL2014/sqlobject_test?driver=pymssql&timeout=30&debug=1"
    sqlcmd -U sa -P "Password12!" -S .\SQL2014 -Q "DROP DATABASE sqlobject_test"

[testenv:py27-mssql-w32]
commands = {[mssql-w32]commands}

[testenv:py34-mssql-w32]
commands = {[mssql-w32]commands}

[testenv:py35-mssql-w32]
commands = {[mssql-w32]commands}

[mysql-connector-w32]
commands =
    -mysql -u root "-pPassword12!" -e 'drop database sqlobject_test;'
    mysql -u root "-pPassword12!" -e 'create database sqlobject_test;'
    pytest --cov=sqlobject -D "mysql://root:Password12!@localhost/sqlobject_test?driver=connector&debug=1"
    mysql -u root "-pPassword12!" -e 'drop database sqlobject_test;'

[testenv:py27-mysql-connector-w32]
commands = {[mysql-connector-w32]commands}

[testenv:py34-mysql-connector-w32]
commands = {[mysql-connector-w32]commands}

[testenv:py35-mysql-connector-w32]
commands = {[mysql-connector-w32]commands}

[psycopg-w32]
commands =
    -dropdb -U postgres -w sqlobject_test
    createdb -U postgres -w sqlobject_test
    pytest --cov=sqlobject -D "postgres://postgres:Password12!@localhost/sqlobject_test?driver=psycopg2&charset=utf-8&debug=1" tests include/tests inheritance/tests versioning/test
    dropdb -U postgres -w sqlobject_test

[testenv:py27-postgres-psycopg-w32]
commands = {[psycopg-w32]commands}

[testenv:py34-postgres-psycopg-w32]
commands = {[psycopg-w32]commands}

[testenv:py35-postgres-psycopg-w32]
commands = {[psycopg-w32]commands}

[sqlite-w32]
commands =
    pytest --cov=sqlobject -D sqlite:/C:/projects/sqlobject/sqlobject_test.sqdb?debug=1

[testenv:py27-sqlite-w32]
commands = {[sqlite-w32]commands}

[testenv:py34-sqlite-w32]
commands = {[sqlite-w32]commands}

[testenv:py35-sqlite-w32]
commands = {[sqlite-w32]commands}

[sqlite-memory-w32]
commands =
    pytest --cov=sqlobject -D sqlite:/:memory:?debug=1

[testenv:py27-sqlite-memory-w32]
commands = {[sqlite-memory-w32]commands}

[testenv:py34-sqlite-memory-w32]
commands = {[sqlite-memory-w32]commands}

[testenv:py35-sqlite-memory-w32]
commands = {[sqlite-memory-w32]commands}
