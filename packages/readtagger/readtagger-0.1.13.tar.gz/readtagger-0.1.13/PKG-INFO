Metadata-Version: 1.1
Name: readtagger
Version: 0.1.13
Summary: Tags reads in a BAM file based on other BAM files.
Home-page: https://github.com/bardin-lab/readtagger
Author: Marius van den Beek
Author-email: m.vandenbeek@gmail.com
License: MIT
Description: Readtagger
        ----------
        .. image:: https://travis-ci.org/bardin-lab/readtagger.svg?branch=master
            :target: https://travis-ci.org/bardin-lab/readtagger
        
        .. image:: https://coveralls.io/repos/github/bardin-lab/readtagger/badge.svg?branch=master
            :target: https://coveralls.io/github/bardin-lab/readtagger?branch=master
        
        .. image:: https://badge.fury.io/py/readtagger.svg
            :target: https://badge.fury.io/py/readtagger
        
        .. image:: https://anaconda.org/mvdbeek/readtagger/badges/version.svg
            :target: https://anaconda.org/mvdbeek/readtagger
        
        Tags reads in a BAM file based on other BAM files.
        
        Installation
        ------------
        
        ::
        
            pip install readtagger
        
        Usage
        ------
        
        To tag reads in file ``a.bam`` with file ``b.bam`` and output to path
        output.bam, type
        
        ::
        
            readtagger --tag_file a.bam --annotate_with b.bam ----output_file output.bam
        
        This will by default tag reads with the RD, RR, MD and MR tags, where
        the RD tag has detail mapping information for the current read, while
        the MD tag has the information for the mate. RR and MR contain the
        aligned reference (i.e chromosome). The first letter can be changed on a
        per-file basis by appending ":first\_letter\_read:first\_letter\_mate"
        to the file path. To change the above example into X for the read and Y
        for the mate, run:
        
        ::
        
            readtagger --tag_file a.bam --annotate_with b.bam:X:Z ----output_file output.bam
        
        To tag one bam file using multiple alignment files, run:
        
        ::
        
            readtagger --tag_file a.bam --annotate_with b.bam:A:B c.bam:C:D ----output_file output.bam
        
        Now reads that align in file ``b.bam`` will be tagged with AR, AD and
        BR, BD, while reads aligned in file ``c.bam`` are marked with CR, CD and
        DR, DD.
        
        Advanced usage
        --------------
        
        To see the advanced options, type:
        
        ::
        
            readtagger -h
        
        Testing
        -------
        
        If you modify readtagger, you can run all tests by running tox:
        
        ::
        
            pip install tox
            tox
        
        
        
        
        History
        -------
        
        .. to_doc
        
        ---------------------
        0.1.13(2017-02-17)
        ---------------------
        * Add instructions for development
        * Install planemo in deployment step
        
        ---------------------
        0.1.12(2017-02-17)
        ---------------------
        * Test deployment again
        
          ---------------------
        0.1.11 (2017-02-17)
        ---------------------
        * Test deployment
        
          ---------------------
        0.1.10 (2017-02-17)
        ---------------------
        * Fix toolshed deployment
        
        ---------------------
        0.1.9 (2017-02-17)
        ---------------------
        * Add automated deployment to Galaxy Toolshed
        * Add instructions for development and release process
        
        ---------------------
        0.1.8 (2017-02-17)
        ---------------------
        * Minor release to test release process
        
        ---------------------
        0.1.7 (2017-02-17)
        ---------------------
        * Extend testing with coverage testing
        * Automate deployment to pypi and conda
        * Register project with pyup.io
        
        ---------------------
        0.1.6 (2017-02-16)
        ---------------------
        * Rename to readtagger
        * Fix bug with stdin closing file descriptor too early, leading to corrupt
          BAM files
        * Extend testing
        
        ---------------------
        0.1.5 (2017-02-12)
        ---------------------
        * Add option (-wd) to write suboptimal tag into separate BAM file
        * Add option (-wv) to write verified tags into separate BAM file
        * Performance improvments by letting sambamba handle BAM reading
          and writing. Also elimininate regualr expression to parse cigarstring
        
        ---------------------
        0.1.4 (2017-02-10)
        ---------------------
        * Add option (-k) to keep alternative tags if they do not
          explain the softclipped read any better.
          Default is to discard them.
        
        ---------------------
        0.1.3.2 (2017-02-08)
        ---------------------
        * Fix dovetailing script
        
        ---------------------
        0.1.3 (2017-02-07)
        ---------------------
        * Add option to allow dovetailing in alignment files when tagging reads
        * Add separate entrypoint for standalone script
        
        ---------------------
        0.1.2 (2017-02-05)
        ---------------------
        * Add conda recipe
        * Python3 string fix
        
        ---------------------
        0.1.0 (2017-02-05)
        ---------------------
        * Initial version
        
        
Keywords: Bioinformatics
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Environment :: Console
Classifier: Operating System :: POSIX
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
