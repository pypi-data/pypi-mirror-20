# General lib locations
LINK_DIRECTORIES(/opt/local/lib)

# CGAL
IF(CGAL_FOUND)
    #ADD_DEFINITIONS(-DCGAL_KERNEL_NO_ASSERTIONS)
    INCLUDE(${CGAL_USE_FILE})
ENDIF(CGAL_FOUND)

# Source files
FILE(GLOB SRC_FILES *.cpp)
FILE(GLOB INC_FILES *.h)

# Include this directory
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})

ADD_LIBRARY(cgal_wrapper SHARED ${SRC_FILES} ${INC_FILES})
TARGET_LINK_LIBRARIES(cgal_wrapper Mesh ${CGAL_LIBRARIES})

IF(NOT WITHOUT_SWIG)
    SET(SWG_FILES PyCGAL.i)

    # Generate wrapper for python
    SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CPLUSPLUS ON)
    SET_SOURCE_FILES_PROPERTIES(${SWG_FILES} PROPERTIES CMAKE_SWIG_FLAGS "-includeall")
    SWIG_ADD_MODULE(PyCGAL python ${SWG_FILES} ${INC_FILES})
    SWIG_LINK_LIBRARIES(PyCGAL ${PYTHON_LIBRARIES} cgal_wrapper)

    # Boudle exe, lib, swig wrapper into a single target.
    # To build all: "make cgal"
    ADD_CUSTOM_TARGET(cgal DEPENDS cgal_wrapper _PyCGAL)
ELSE(NOT WITHOUT_SWIG)
    ADD_CUSTOM_TARGET(cgal DEPENDS cgal_wrapper)
ENDIF(NOT WITHOUT_SWIG)
