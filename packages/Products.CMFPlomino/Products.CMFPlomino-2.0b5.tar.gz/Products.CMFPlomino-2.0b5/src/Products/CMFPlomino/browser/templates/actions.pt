<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      lang="en"
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="Products.CMFPlomino">
<body>

<div class="formControls" metal:define-macro="ReadDocumentActionBar">
<span class="actionButtons">
    <tal:defaultactions tal:condition="python:not(view.form.hide_default_actions)">
        <tal:block
            tal:condition="python:view.target.hasEditPermission(view.target)==True and view.target.hasEditPermission(view.target.getParentDatabase())==True and view.target.isAuthor()">
        <input type="button" class="context plominoEdit" value="Edit" name="plomino_edit"
            i18n:domain="Products.CMFPlomino" i18n:attributes="value"
            tal:attributes="onclick python:'location.href=\''+view.target.doc_url()+'/EditDocument\''" />
        </tal:block>

        <tal:block
            tal:condition="python:view.target.hasRemovePermission(view.target)==True and view.target.hasRemovePermission(view.target.getParentDatabase())==True and view.target.isAuthor()">
        <tal:block metal:use-macro="context/plomino_actions/macros/DeleteAction">display
        delete action</tal:block></tal:block>


        <tal:block metal:use-macro="context/plomino_actions/macros/CloseAction">display
        close action</tal:block>

    </tal:defaultactions>

    <tal:block
        tal:repeat="action_tuple python:[(a, parent_id) for a, parent_id in view.form.getActions(view.target, True) if a.in_action_bar==True]">
        <tal:block
            tal:define="plominoaction python:action_tuple[0];
                        plominotarget python:view.target;
                        plomino_parent_id python:action_tuple[1]">
            <tal:block metal:use-macro="context/plomino_actions/macros/ButtonAction">
            display action as a link </tal:block>
        </tal:block>
    </tal:block>
</span>
</div>

<div class="formControls" metal:define-macro="EditDocumentActionBar">
<span class="actionButtons">
    <tal:defaultactions tal:condition="python:not(view.form.hide_default_actions)">
        <tal:block metal:use-macro="context/plomino_actions/macros/CloseAction">display
        close action</tal:block>
        <input type="submit" class="context plominoSave" name="plomino_save"
            value="Save" i18n:domain="Products.CMFPlomino" i18n:attributes="value" />
        <tal:block
            tal:condition="python:not(view.target.getCurrentMember().getUserName()=='Anonymous User')"><tal:block
            metal:use-macro="context/plomino_actions/macros/DeleteAction">display
        delete action</tal:block></tal:block>
    </tal:defaultactions>
        <tal:block
            tal:repeat="action_tuple python:[(a, parent_id) for a, parent_id in view.form.getActions(view.target, True) if a.in_action_bar==True]">
            <tal:block
                tal:define="plominoaction python:action_tuple[0];
                            plominotarget python:view.target;
                            plomino_parent_id python:action_tuple[1]">
                <tal:block metal:use-macro="context/plomino_actions/macros/ButtonAction">
                display action as a link </tal:block>
            </tal:block>
        </tal:block>
</span>
</div>

<div class="formControls" metal:define-macro="OpenFormActionBar">
<span class="actionButtons">
    <tal:defaultactions tal:condition="python:not(view.form.hide_default_actions)">
        <tal:block metal:use-macro="context/plomino_actions/macros/CloseAction">display
        close action</tal:block>
        <input type="submit" class="context plominoSave" name="plomino_save"
            value="Save" i18n:domain="Products.CMFPlomino" i18n:attributes="value" />
    </tal:defaultactions>
        <tal:block
            tal:repeat="action_tuple python:[(a, parent_id) for a, parent_id in view.form.getActions(view.target, True) if a.in_action_bar==True]">
            <tal:block
                tal:define="plominoaction python:action_tuple[0];
                            plominotarget python:view.target;
                            plomino_parent_id python:action_tuple[1]">
                <tal:block metal:use-macro="context/plomino_actions/macros/ButtonAction">
                display action as a link </tal:block>
            </tal:block>
        </tal:block>
</span>
</div>

<div class="formControls" metal:define-macro="SearchFormActionBar">
<span class="actionButtons">
    <tal:defaultactions tal:condition="python:not(view.form.hide_default_actions)">
        <tal:block metal:use-macro="context/plomino_actions/macros/CloseAction">display
        close action</tal:block>
        <input type="submit" class="context plominoSearch" value="Search" name="plomino_search"
            i18n:domain="Products.CMFPlomino" i18n:attributes="value" />
    </tal:defaultactions>
        <tal:block
            tal:repeat="action_tuple python:[(a, parent_id) for a, parent_id in view.form.getActions(view.target, True) if a.in_action_bar==True]">
            <tal:block
                tal:define="plominoaction python:action_tuple[0];
                            plominotarget python:view.target;
                            plomino_parent_id python:action_tuple[1]">
                <tal:block metal:use-macro="context/plomino_actions/macros/ButtonAction">
                display action as a link </tal:block>
            </tal:block>
        </tal:block>
</span>
</div>

<div class="formControls" metal:define-macro="ViewActionBar">
<span class="actionButtons">
    <tal:defaultactions tal:condition="python:not(context.hide_default_actions)">
        <input type="button" class="context plominoDelete" value="Delete" name="plomino_deletedocuments"
            i18n:domain="Products.CMFPlomino" i18n:attributes="value"
            tal:condition="python:view.target.hasRemovePermission(view.target)==True"
            tal:define="
                plominotranslate nocall:modules/Products/CMFPlomino/utils/PlominoTranslate;
                msg python:plominotranslate('Do you really want to delete those documents', view.target, domain='CMFPlomino');"
            tal:attributes="onclick string:if (confirm('${msg} ?')) {location.href='./manage_deleteDocuments?deldocs='+selected_documents()}" />
    </tal:defaultactions>
    <tal:block
        tal:repeat="action_tuple python:[(a, parent_id) for a, parent_id in context.getActions(True) if a.in_action_bar==True]">
        <tal:block
            tal:define="plominoaction python:action_tuple[0];
                        plominotarget python:view.target;
                        plomino_parent_id python:action_tuple[1]">
            <tal:block metal:use-macro="context/plomino_actions/macros/ButtonAction">
            display action</tal:block>
        </tal:block>
    </tal:block>
</span>
</div>

<tal:block metal:define-macro="LinkAction"> <a
    tal:attributes="href python:plominoaction.executeAction(plominotarget, plomino_parent_id)"
    tal:content="python: plominoaction.Title()" /></tal:block>

<tal:block metal:define-macro="SubmitAction"> <input type="submit"
    class="context" tal:attributes="value python: plominoaction.Title(); name python:plominoaction.id; id python:plominoaction.id;" />
</tal:block>

<tal:block metal:define-macro="ButtonAction">
  <tal:submit tal:condition="python:plominoaction.action_type=='SAVE'">
  <input type="submit"
    class="context" tal:attributes="value python: plominoaction.Title(); name python:plominoaction.id" />
  </tal:submit>
  <tal:button tal:condition="python:not(plominoaction.action_type=='SAVE')">
  <input class="context"

    type="button"
    tal:attributes="onclick python:'location.href=\''+plominoaction.executeAction(plominotarget, plomino_parent_id)+'\'';
                    id python:plominoaction.id;
                    name python:plominoaction.id;
                    value python: plominoaction.Title();
                    "/>
  </tal:button>
</tal:block>

<tal:block metal:define-macro="CloseAction"> <tal:block
    tal:define="is_search_form_or_view python:(hasattr(view.target.aq_parent,'getIsSearchForm') or hasattr(view.target.aq_parent,'getSelectionFormula'));">
    <tal:backtoDB tal:condition="python:not(is_search_form_or_view)">
        <input type="button" class="standalone plominoClose" value="Close" name="plomino_close"
            i18n:domain="Products.CMFPlomino" i18n:attributes="value"
            tal:attributes="onclick python:'location.href=\''+view.target.getParentDatabase().absolute_url()+'\''" />
    </tal:backtoDB>
    <tal:backtoprevious tal:condition="python:is_search_form_or_view">
        <input type="button" class="standalone plominoClose" value="Close" name="plomino_close"
            i18n:domain="Products.CMFPlomino" i18n:attributes="value"
            onclick="history.go(-1)" />
    </tal:backtoprevious>

</tal:block> </tal:block>
<tal:block metal:define-macro="DeleteAction"><tal:block tal:condition="python:view.target.hasCurrentUserRight(view.target.getSpecificRights('specific_deletedocument'))"><input type="button"
    class="destructive plominoDelete" value="Delete" i18n:domain="Products.CMFPlomino" name="plomino_delete"
    i18n:attributes="value"
    tal:define="
        plominotranslate nocall:modules/Products/CMFPlomino/utils/PlominoTranslate;
        msg python:plominotranslate('Do you really want to delete this document', view.target, domain='CMFPlomino');
        token python:view.target.restrictedTraverse('@@authenticator').token()"
    tal:attributes="onclick python:'if(confirm(\''+msg+' ?\')){location.href=\''+view.target.absolute_url()+'/delete?_authenticator='+token+'&returnurl='+view.target.getParentDatabase().absolute_url()+'\'}'" />
    </tal:block>
</tal:block>

</body>
</html>