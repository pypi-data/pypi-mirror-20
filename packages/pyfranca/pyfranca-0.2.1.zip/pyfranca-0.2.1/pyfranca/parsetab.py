
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C96F3B4346AB32E9A4B41F30E1FDEA95'
    
_lr_action_items = {'{':([14,18,30,40,56,59,63,67,68,84,85,86,88,89,90,91,92,100,101,118,119,124,158,160,161,],[19,23,60,64,-100,93,98,-100,-100,-42,-44,117,-41,-40,-45,-43,-39,130,131,-38,151,154,173,176,177,]),'UINT64':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[73,73,73,73,73,-67,73,-68,73,73,73,-66,-69,73,73,73,73,-55,73,-54,-56,]),'TYPECOLLECTION':([3,4,5,7,8,11,13,17,20,39,58,66,129,],[-7,-6,9,-4,-3,9,-5,-2,-9,-8,-10,-22,-23,]),'MAJOR':([60,],[94,]),'FILE_NAME':([15,21,],[20,39,]),'ID':([2,6,9,10,12,22,24,27,31,33,38,48,49,54,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,93,95,96,97,98,117,125,126,127,128,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,154,156,161,165,167,168,171,172,173,176,177,184,185,186,187,188,189,191,],[4,4,14,4,18,40,56,59,61,62,63,67,68,78,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,114,-72,-83,119,78,78,78,124,127,78,-61,127,-62,-60,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-85,-96,-67,78,167,-68,78,78,127,-59,78,-66,-69,78,127,-63,78,78,127,78,-55,191,78,127,-54,-56,]),'[':([69,70,71,72,73,74,75,76,77,78,79,80,82,83,],[102,103,104,105,106,107,108,109,110,111,112,113,115,116,]),'BYTEBUFFER':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[71,71,71,71,71,-67,71,-68,71,71,71,-66,-69,71,71,71,71,-55,71,-54,-56,]),'INTEGER':([94,153,157,],[121,170,172,]),'MINOR':([121,],[153,]),'INT16':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[70,70,70,70,70,-67,70,-68,70,70,70,-66,-69,70,70,70,70,-55,70,-54,-56,]),']':([102,103,104,105,106,107,108,109,110,111,112,113,115,116,],[132,133,134,135,136,137,138,139,140,141,142,143,145,146,]),'STRING':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[83,83,83,83,83,-67,83,-68,83,83,83,-66,-69,83,83,83,83,-55,83,-54,-56,]),'NOSUBSCRIPTIONS':([56,67,68,84,85,86,88,89,90,91,92,100,101,114,118,144,],[85,85,85,-42,-44,85,-41,-40,-45,-43,-39,85,85,85,-38,85,]),'BROADCAST':([23,41,42,43,44,45,46,47,50,51,52,53,55,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,99,114,118,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,166,175,179,180,181,182,183,],[49,49,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,49,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,49,-100,-38,-70,-21,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-57,-64,-37,-53,-65,-71,-20,-58,]),'INT64':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[75,75,75,75,75,-67,75,-68,75,75,75,-66,-69,75,75,75,75,-55,75,-54,-56,]),'$end':([1,3,4,5,7,8,11,13,17,20,39,58,66,129,],[0,-7,-6,-100,-4,-3,-1,-5,-2,-9,-8,-10,-22,-23,]),'DOUBLE':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[80,80,80,80,80,-67,80,-68,80,80,80,-66,-69,80,80,80,80,-55,80,-54,-56,]),'EXTENDS':([18,56,63,],[22,87,97,]),'UINT8':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[77,77,77,77,77,-67,77,-68,77,77,77,-66,-69,77,77,77,77,-55,77,-54,-56,]),'FIREANDFORGET':([56,67,68,84,85,86,88,89,90,91,92,100,101,114,118,144,],[84,84,84,-42,-44,84,-41,-40,-45,-43,-39,84,84,84,-38,84,]),'OF':([61,],[95,]),'FLOAT':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[79,79,79,79,79,-67,79,-68,79,79,79,-66,-69,79,79,79,79,-55,79,-54,-56,]),'IMPORT':([3,4,5,7,8,11,13,17,20,39,58,66,129,],[-7,-6,10,-4,-3,10,-5,-2,-9,-8,-10,-22,-23,]),'ATTRIBUTE':([23,41,42,43,44,45,46,47,50,51,52,53,55,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,99,114,118,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,166,175,179,180,181,182,183,],[54,54,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,54,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,54,-100,-38,-70,-21,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-57,-64,-37,-53,-65,-71,-20,-58,]),'INTERFACE':([3,4,5,7,8,11,13,17,20,39,58,66,129,],[-7,-6,12,-4,-3,12,-5,-2,-9,-8,-10,-22,-23,]),'ENUMERATION':([19,23,25,26,28,29,32,34,35,36,37,41,42,43,44,45,46,47,50,51,52,53,55,57,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,99,114,118,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,166,175,179,180,181,182,183,],[38,38,-13,38,-14,-19,-17,-18,-12,-15,-16,38,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,-11,38,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,38,-100,-38,-70,-21,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-57,-64,-37,-53,-65,-71,-20,-58,]),'IN':([69,70,71,72,73,74,75,76,77,78,79,80,82,83,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,159,162,163,164,174,178,190,192,193,],[-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,158,158,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-85,-96,158,-48,-47,158,-46,-52,-49,-50,-51,]),'STRUCT':([19,23,25,26,28,29,32,34,35,36,37,41,42,43,44,45,46,47,50,51,52,53,55,57,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,99,114,118,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,166,175,179,180,181,182,183,],[24,24,-13,24,-14,-19,-17,-18,-12,-15,-16,24,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,-11,24,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,24,-100,-38,-70,-21,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-57,-64,-37,-53,-65,-71,-20,-58,]),'ARRAY':([19,23,25,26,28,29,32,34,35,36,37,41,42,43,44,45,46,47,50,51,52,53,55,57,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,99,114,118,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,166,175,179,180,181,182,183,],[31,31,-13,31,-14,-19,-17,-18,-12,-15,-16,31,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,-11,31,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,31,-100,-38,-70,-21,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-57,-64,-37,-53,-65,-71,-20,-58,]),'INT32':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[72,72,72,72,72,-67,72,-68,72,72,72,-66,-69,72,72,72,72,-55,72,-54,-56,]),'UINT16':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[74,74,74,74,74,-67,74,-68,74,74,74,-66,-69,74,74,74,74,-55,74,-54,-56,]),'ERROR':([69,70,71,72,73,74,75,76,77,78,79,80,82,83,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,159,162,163,164,174,178,190,192,193,],[-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,161,161,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-85,-96,161,-48,-47,161,-46,-52,-49,-50,-51,]),'SELECTIVE':([56,67,68,84,85,86,88,89,90,91,92,100,101,114,118,144,],[88,88,88,-42,-44,88,-41,-40,-45,-43,-39,88,88,88,-38,88,]),'MAP':([19,23,25,26,28,29,32,34,35,36,37,41,42,43,44,45,46,47,50,51,52,53,55,57,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,99,114,118,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,166,175,179,180,181,182,183,],[27,27,-13,27,-14,-19,-17,-18,-12,-15,-16,27,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,-11,27,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,27,-100,-38,-70,-21,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-57,-64,-37,-53,-65,-71,-20,-58,]),'FROM':([3,4,13,16,],[-7,-6,-5,21,]),'BOOLEAN':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[69,69,69,69,69,-67,69,-68,69,69,69,-66,-69,69,69,69,69,-55,69,-54,-56,]),'VERSION':([19,23,25,26,28,29,32,34,35,36,37,41,42,43,44,45,46,47,50,51,52,53,55,57,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,99,114,118,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,166,175,179,180,181,182,183,],[30,30,-13,30,-14,-19,-17,-18,-12,-15,-16,30,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,-11,30,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,30,-100,-38,-70,-21,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-57,-64,-37,-53,-65,-71,-20,-58,]),'IS':([62,],[96,]),'*':([2,6,10,],[3,3,3,]),'MODEL':([10,],[15,]),'OUT':([69,70,71,72,73,74,75,76,77,78,79,80,82,83,130,131,132,133,134,135,136,137,138,139,140,141,142,143,145,146,159,162,163,164,174,178,190,192,193,],[-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,160,160,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-85,-96,160,-48,-47,160,-46,-52,-49,-50,-51,]),'TYPEDEF':([19,23,25,26,28,29,32,34,35,36,37,41,42,43,44,45,46,47,50,51,52,53,55,57,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,99,114,118,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,166,175,179,180,181,182,183,],[33,33,-13,33,-14,-19,-17,-18,-12,-15,-16,33,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,-11,33,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,33,-100,-38,-70,-21,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-57,-64,-37,-53,-65,-71,-20,-58,]),'UINT32':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[76,76,76,76,76,-67,76,-68,76,76,76,-66,-69,76,76,76,76,-55,76,-54,-56,]),'METHOD':([23,41,42,43,44,45,46,47,50,51,52,53,55,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,99,114,118,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,155,166,175,179,180,181,182,183,],[48,48,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,48,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,48,-100,-38,-70,-21,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-57,-64,-37,-53,-65,-71,-20,-58,]),'.':([4,],[6,]),'INT8':([54,93,95,96,117,147,148,150,151,152,161,165,167,168,173,176,184,185,187,189,191,],[82,82,82,82,82,-67,82,-68,82,82,82,-66,-69,82,82,82,82,-55,82,-54,-56,]),'PACKAGE':([0,],[2,]),'READONLY':([56,67,68,84,85,86,88,89,90,91,92,100,101,114,118,144,],[90,90,90,-42,-44,90,-41,-40,-45,-43,-39,90,90,90,-38,90,]),'POLYMORPHIC':([56,67,68,84,85,86,88,89,90,91,92,100,101,114,118,144,],[91,91,91,-42,-44,91,-41,-40,-45,-43,-39,91,91,91,-38,91,]),'TO':([69,70,71,72,73,74,75,76,77,78,79,80,82,83,120,132,133,134,135,136,137,138,139,140,141,142,143,145,146,],[-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,152,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-85,-96,]),'=':([127,],[157,]),'}':([19,23,25,26,28,29,32,34,35,36,37,41,42,43,44,45,46,47,50,51,52,53,55,57,64,65,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,88,89,90,91,92,98,99,114,117,118,122,123,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,154,155,156,159,162,163,164,165,166,167,168,169,170,171,172,174,175,177,178,179,180,181,182,183,184,185,187,188,189,190,191,192,193,],[-100,-100,-13,58,-14,-19,-17,-18,-12,-15,-16,66,-28,-29,-25,-30,-35,-27,-34,-33,-26,-32,-31,-11,-100,-24,-80,-73,-84,-74,-79,-77,-75,-78,-76,-98,-81,-82,-72,-83,-42,-44,-41,-40,-45,-43,-39,-100,129,-100,-100,-38,-70,-21,-61,155,-62,-60,-100,-100,-93,-86,-97,-87,-92,-90,-88,-91,-89,-99,-94,-95,-36,-85,-96,-67,166,-68,-100,-100,-57,-59,175,-48,-47,179,-66,-64,-69,180,181,182,183,-63,-46,-37,-100,-52,-53,-65,-71,-20,-58,190,-55,192,193,-54,-49,-56,-50,-51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'arg_defs':([173,176,],[184,187,]),'arg_group_defs':([130,131,],[159,164,]),'flag_defs':([56,67,68,114,],[86,100,101,144,]),'flag_def':([56,67,68,86,100,101,114,144,],[92,92,92,118,118,118,92,118,]),'struct_field':([117,148,151,168,],[147,165,147,165,]),'enumerators':([98,154,177,],[126,171,188,]),'interface_members':([23,64,],[41,99,]),'typecollection_members':([19,],[26,]),'attribute_def':([23,41,64,99,],[42,42,42,42,]),'def':([5,11,],[8,17,]),'enumerator':([98,126,154,171,177,188,],[128,156,128,156,128,156,]),'method_def':([23,41,64,99,],[43,43,43,43,]),'package_def':([0,],[1,]),'interface_member':([23,41,64,99,],[44,65,44,65,]),'broadcast_def':([23,41,64,99,],[45,45,45,45,]),'map_def':([19,23,26,41,64,99,],[29,46,29,46,46,46,]),'version_def':([19,23,26,41,64,99,],[28,47,28,47,47,47,]),'namespace':([2,6,10,],[5,13,16,]),'arg_group_def':([130,131,159,164,],[163,163,174,174,]),'struct_def':([19,23,26,41,64,99,],[32,51,32,51,51,51,]),'arg_def':([173,176,184,187,],[185,185,189,189,]),'struct_fields':([117,151,],[148,168,]),'array_def':([19,23,26,41,64,99,],[34,50,34,50,50,50,]),'typecollection_member':([19,26,],[35,57,]),'enumeration_def':([19,23,26,41,64,99,],[37,53,37,53,53,53,]),'defs':([5,],[11,]),'type_def':([19,23,26,41,64,99,],[36,55,36,55,55,55,]),'type':([54,93,95,96,117,148,151,152,161,168,173,176,184,187,],[81,120,122,123,149,149,149,169,178,149,186,186,186,186,]),'empty':([5,19,23,56,64,67,68,98,114,117,130,131,151,154,177,],[7,25,52,89,52,89,89,125,89,150,162,162,150,125,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> package_def","S'",1,None,None,None),
  ('package_def -> PACKAGE namespace defs','package_def',3,'p_package_def','franca_parser.py',64),
  ('defs -> defs def','defs',2,'p_defs_1','franca_parser.py',75),
  ('defs -> def','defs',1,'p_defs_2','franca_parser.py',84),
  ('defs -> empty','defs',1,'p_defs_3','franca_parser.py',92),
  ('namespace -> ID . namespace','namespace',3,'p_namespace_1','franca_parser.py',99),
  ('namespace -> ID','namespace',1,'p_namespace_2','franca_parser.py',107),
  ('namespace -> *','namespace',1,'p_namespace_3','franca_parser.py',115),
  ('def -> IMPORT namespace FROM FILE_NAME','def',4,'p_import_def_1','franca_parser.py',123),
  ('def -> IMPORT MODEL FILE_NAME','def',3,'p_import_def_2','franca_parser.py',131),
  ('def -> TYPECOLLECTION ID { typecollection_members }','def',5,'p_typecollection','franca_parser.py',179),
  ('typecollection_members -> typecollection_members typecollection_member','typecollection_members',2,'p_typecollection_members_1','franca_parser.py',228),
  ('typecollection_members -> typecollection_member','typecollection_members',1,'p_typecollection_members_2','franca_parser.py',237),
  ('typecollection_members -> empty','typecollection_members',1,'p_typecollection_members_3','franca_parser.py',245),
  ('typecollection_member -> version_def','typecollection_member',1,'p_typecollection_member','franca_parser.py',253),
  ('typecollection_member -> type_def','typecollection_member',1,'p_typecollection_member','franca_parser.py',254),
  ('typecollection_member -> enumeration_def','typecollection_member',1,'p_typecollection_member','franca_parser.py',255),
  ('typecollection_member -> struct_def','typecollection_member',1,'p_typecollection_member','franca_parser.py',256),
  ('typecollection_member -> array_def','typecollection_member',1,'p_typecollection_member','franca_parser.py',257),
  ('typecollection_member -> map_def','typecollection_member',1,'p_typecollection_member','franca_parser.py',258),
  ('version_def -> VERSION { MAJOR INTEGER MINOR INTEGER }','version_def',7,'p_version_def','franca_parser.py',266),
  ('type_def -> TYPEDEF ID IS type','type_def',4,'p_type_def','franca_parser.py',274),
  ('def -> INTERFACE ID { interface_members }','def',5,'p_interface_1','franca_parser.py',282),
  ('def -> INTERFACE ID EXTENDS ID { interface_members }','def',7,'p_interface_2','franca_parser.py',302),
  ('interface_members -> interface_members interface_member','interface_members',2,'p_interface_members_1','franca_parser.py',322),
  ('interface_members -> interface_member','interface_members',1,'p_interface_members_2','franca_parser.py',331),
  ('interface_members -> empty','interface_members',1,'p_interface_members_3','franca_parser.py',339),
  ('interface_member -> version_def','interface_member',1,'p_interface_member','franca_parser.py',347),
  ('interface_member -> attribute_def','interface_member',1,'p_interface_member','franca_parser.py',348),
  ('interface_member -> method_def','interface_member',1,'p_interface_member','franca_parser.py',349),
  ('interface_member -> broadcast_def','interface_member',1,'p_interface_member','franca_parser.py',350),
  ('interface_member -> type_def','interface_member',1,'p_interface_member','franca_parser.py',351),
  ('interface_member -> enumeration_def','interface_member',1,'p_interface_member','franca_parser.py',352),
  ('interface_member -> struct_def','interface_member',1,'p_interface_member','franca_parser.py',353),
  ('interface_member -> array_def','interface_member',1,'p_interface_member','franca_parser.py',354),
  ('interface_member -> map_def','interface_member',1,'p_interface_member','franca_parser.py',355),
  ('attribute_def -> ATTRIBUTE type ID flag_defs','attribute_def',4,'p_attribute_def','franca_parser.py',363),
  ('method_def -> METHOD ID flag_defs { arg_group_defs }','method_def',6,'p_method_def','franca_parser.py',401),
  ('flag_defs -> flag_defs flag_def','flag_defs',2,'p_flag_defs_1','franca_parser.py',411),
  ('flag_defs -> flag_def','flag_defs',1,'p_flag_defs_2','franca_parser.py',420),
  ('flag_defs -> empty','flag_defs',1,'p_flag_defs_3','franca_parser.py',428),
  ('flag_def -> SELECTIVE','flag_def',1,'p_flag_def','franca_parser.py',436),
  ('flag_def -> FIREANDFORGET','flag_def',1,'p_flag_def','franca_parser.py',437),
  ('flag_def -> POLYMORPHIC','flag_def',1,'p_flag_def','franca_parser.py',438),
  ('flag_def -> NOSUBSCRIPTIONS','flag_def',1,'p_flag_def','franca_parser.py',439),
  ('flag_def -> READONLY','flag_def',1,'p_flag_def','franca_parser.py',440),
  ('arg_group_defs -> arg_group_defs arg_group_def','arg_group_defs',2,'p_arg_group_defs_1','franca_parser.py',448),
  ('arg_group_defs -> arg_group_def','arg_group_defs',1,'p_arg_group_defs_2','franca_parser.py',457),
  ('arg_group_defs -> empty','arg_group_defs',1,'p_arg_group_defs_3','franca_parser.py',465),
  ('arg_group_def -> IN { arg_defs }','arg_group_def',4,'p_arg_group_def_1','franca_parser.py',473),
  ('arg_group_def -> OUT { arg_defs }','arg_group_def',4,'p_arg_group_def_2','franca_parser.py',481),
  ('arg_group_def -> ERROR { enumerators }','arg_group_def',4,'p_arg_group_def_3','franca_parser.py',489),
  ('arg_group_def -> ERROR type','arg_group_def',2,'p_arg_group_def_4','franca_parser.py',498),
  ('broadcast_def -> BROADCAST ID flag_defs { arg_group_defs }','broadcast_def',6,'p_broadcast_def','franca_parser.py',506),
  ('arg_defs -> arg_defs arg_def','arg_defs',2,'p_arg_defs_1','franca_parser.py',518),
  ('arg_defs -> arg_def','arg_defs',1,'p_arg_defs_2','franca_parser.py',527),
  ('arg_def -> type ID','arg_def',2,'p_arg_def','franca_parser.py',535),
  ('enumeration_def -> ENUMERATION ID { enumerators }','enumeration_def',5,'p_enumeration_def_1','franca_parser.py',543),
  ('enumeration_def -> ENUMERATION ID EXTENDS ID { enumerators }','enumeration_def',7,'p_enumeration_def_2','franca_parser.py',551),
  ('enumerators -> enumerators enumerator','enumerators',2,'p_enumerators_1','franca_parser.py',559),
  ('enumerators -> enumerator','enumerators',1,'p_enumerators_2','franca_parser.py',568),
  ('enumerators -> empty','enumerators',1,'p_enumerators_3','franca_parser.py',577),
  ('enumerator -> ID','enumerator',1,'p_enumerator_1','franca_parser.py',585),
  ('enumerator -> ID = INTEGER','enumerator',3,'p_enumerator_2','franca_parser.py',593),
  ('struct_def -> STRUCT ID flag_defs { struct_fields }','struct_def',6,'p_struct_def_1','franca_parser.py',601),
  ('struct_def -> STRUCT ID EXTENDS ID { struct_fields }','struct_def',7,'p_struct_def_2','franca_parser.py',609),
  ('struct_fields -> struct_fields struct_field','struct_fields',2,'p_struct_fields_1','franca_parser.py',617),
  ('struct_fields -> struct_field','struct_fields',1,'p_struct_fields_2','franca_parser.py',626),
  ('struct_fields -> empty','struct_fields',1,'p_struct_fields_3','franca_parser.py',635),
  ('struct_field -> type ID','struct_field',2,'p_struct_field_1','franca_parser.py',643),
  ('array_def -> ARRAY ID OF type','array_def',4,'p_array_def','franca_parser.py',651),
  ('map_def -> MAP ID { type TO type }','map_def',7,'p_map_def','franca_parser.py',659),
  ('type -> INT8','type',1,'p_type_1','franca_parser.py',667),
  ('type -> INT16','type',1,'p_type_1','franca_parser.py',668),
  ('type -> INT32','type',1,'p_type_1','franca_parser.py',669),
  ('type -> INT64','type',1,'p_type_1','franca_parser.py',670),
  ('type -> UINT8','type',1,'p_type_1','franca_parser.py',671),
  ('type -> UINT16','type',1,'p_type_1','franca_parser.py',672),
  ('type -> UINT32','type',1,'p_type_1','franca_parser.py',673),
  ('type -> UINT64','type',1,'p_type_1','franca_parser.py',674),
  ('type -> BOOLEAN','type',1,'p_type_1','franca_parser.py',675),
  ('type -> FLOAT','type',1,'p_type_1','franca_parser.py',676),
  ('type -> DOUBLE','type',1,'p_type_1','franca_parser.py',677),
  ('type -> STRING','type',1,'p_type_1','franca_parser.py',678),
  ('type -> BYTEBUFFER','type',1,'p_type_1','franca_parser.py',679),
  ('type -> INT8 [ ]','type',3,'p_type_2','franca_parser.py',688),
  ('type -> INT16 [ ]','type',3,'p_type_2','franca_parser.py',689),
  ('type -> INT32 [ ]','type',3,'p_type_2','franca_parser.py',690),
  ('type -> INT64 [ ]','type',3,'p_type_2','franca_parser.py',691),
  ('type -> UINT8 [ ]','type',3,'p_type_2','franca_parser.py',692),
  ('type -> UINT16 [ ]','type',3,'p_type_2','franca_parser.py',693),
  ('type -> UINT32 [ ]','type',3,'p_type_2','franca_parser.py',694),
  ('type -> UINT64 [ ]','type',3,'p_type_2','franca_parser.py',695),
  ('type -> BOOLEAN [ ]','type',3,'p_type_2','franca_parser.py',696),
  ('type -> FLOAT [ ]','type',3,'p_type_2','franca_parser.py',697),
  ('type -> DOUBLE [ ]','type',3,'p_type_2','franca_parser.py',698),
  ('type -> STRING [ ]','type',3,'p_type_2','franca_parser.py',699),
  ('type -> BYTEBUFFER [ ]','type',3,'p_type_2','franca_parser.py',700),
  ('type -> ID','type',1,'p_type_3','franca_parser.py',709),
  ('type -> ID [ ]','type',3,'p_type_4','franca_parser.py',717),
  ('empty -> <empty>','empty',0,'p_empty','franca_parser.py',726),
]
