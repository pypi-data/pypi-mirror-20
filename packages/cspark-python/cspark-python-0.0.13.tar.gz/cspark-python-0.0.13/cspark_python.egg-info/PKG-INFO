Metadata-Version: 1.1
Name: cspark-python
Version: 0.0.13
Summary: Python library for Cisco Spark
Home-page: https://github.com/Matvey-Kuk/cspark-python
Author: Matvei Kukui
Author-email: motakuk@gmail.com
License: UNKNOWN
Description: Cspark-python `|Build| <https://travis-ci.org/Matvey-Kuk/cspark-python>`_ `|Version| <https://pypi.python.org/pypi/cspark-python>`_ `|Updates| <https://pyup.io/repos/github/matvey-kuk/cspark-python/>`_ `|Python 3| <https://pyup.io/repos/github/matvey-kuk/cspark-python/>`_ `|codecov| <https://codecov.io/gh/Matvey-Kuk/cspark-python>`_
        ==============================================================================================================================================================================================================================================================================================================================================
        
        Cspark-python is a library for `Cisco
        Spark <https://www.ciscospark.com/>`_ bots.
        
        Why Cspark-python?
        ~~~~~~~~~~~~~~~~~~
        
        1. Spark API provides only one mechanism to notify bot about updates:
           Webhooks. "Webhooks require that the Cisco Spark Cloud be able to
           reach your backend over HTTP"
           `(link) <https://developer.ciscospark.com/webhooks-explained.html#auth>`_
           It's not comfortable to develop and test bots on public server so
           Cspark-python emulates update mechanism using REST API.
        2. Class-based routers and request handlers allow you to use
           Django-style project structure for complex projects.
        3. Event-based callbacks allows you to build prototype fast.
        
        Howto:
        ~~~~~~
        
        1. Install with PIP: ``pip install cspark-python``
        
        2. Then go to developer website, `create new
           bot <https://developer.ciscospark.com/apps.html>`_ and achieve
           **Access Token**. Be careful and don't copy your own **Access Token**
           it will cause funny situation.
        
            If you stacked with icon uploading mechanism (as I always do), you
            can use random photo of a cat:
            https://pbs.twimg.com/profile\_images/562466745340817408/\_nIu8KHX.jpeg
        
        3. Use examples to start your first bot. Don't forget to change **Access
           Token**.
        
        Hello, google: **Cisco Spark Python SDK**, **Cisco Spark Python
        Framework**, **Cisco Spark Bot**, **Bot For Cisco Spark Example**
        
        Status:
        ~~~~~~~
        
        -  [x] Build prototype
        -  [ ] Stabilize interfaces
        -  [ ] UT
        -  [ ] Document
        -  [ ] Web Hooks
        -  [ ] Deploy instructions & Dockerfile
        -  [ ] Starter Project Repo
        
        .. |Build| image:: https://travis-ci.org/Matvey-Kuk/cspark-python.svg?branch=master
        .. |Version| image:: https://img.shields.io/pypi/v/cspark-python.svg
        .. |Updates| image:: https://pyup.io/repos/github/matvey-kuk/cspark-python/shield.svg
        .. |Python
        3| image:: https://pyup.io/repos/github/matvey-kuk/cspark-python/python-3-shield.svg
        .. |codecov| image:: https://codecov.io/gh/Matvey-Kuk/cspark-python/branch/master/graph/badge.svg
        
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Python Modules
