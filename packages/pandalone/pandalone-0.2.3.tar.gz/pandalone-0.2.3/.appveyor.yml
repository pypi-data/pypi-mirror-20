# CI on Windows via appveyor
# This file was based on Olivier Grisel's python-appveyor-demo

environment:

    matrix:
#       - PYTHON: "C:\\Python27-conda32"
#         PYTHON_VERSION: "2.7"
#         PYTHON_ARCH: "32"
#         IS_CONDA: "true"

      - PYTHON: "C:\\Python34-conda64"
        PYTHON_VERSION: "3.4"
        PYTHON_ARCH: "64"
        IS_CONDA: "true"

      - PYTHON: "C:\\Python35-x64"
        PYTHON_VERSION: "3.5"
        PYTHON_ARCH: "64"
        IS_CONDA: "false"

install:
    - ps: ./bin/install_python.ps1

    # Prepend newly installed Python to the PATH of this build (this cannot be
    #   done from inside the powershell script as it would require to restart
    #   the parent CMD process).
    - SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%

    ## Print python-version and architecture for debugging .
    #
    - |
        python --version
        python -c "import struct; print(struct.calcsize('P') * 8)"

    - ps: |
        if ($IS_CONDA -eq "true") {
            conda info -a
            $condadeps = type "requirements/miniconda.conda" | select-string -Not -Pattern '#'
            conda install --yes --quiet $condadeps
            ## `win32` dep not includeed in requirements.txt for they will fail in linux.
            conda install --yes --quiet pywin32
            ## TODO: Check if FIXED ``python setup.py nosetests`` failing with conda:
            #   https://github.com/ContinuumIO/anaconda-issues/issues/280
            pip uninstall -y nose; pip uninstall -y nose; pip install -UI nose
        } else {
            ## `win32` dep not includeed in requirements.txt for they will fail in linux.
            pip install pywin32
        }

    - pip install -r requirements\\development.pip


    # - "python setup.py develop" ## NO, pip installed in "develop' mode, above.
    - python setup.py build

build: false

test_script:
    - ps: |
        echo "+++ Checking README for PyPy...."
        ./bin/check_readme.ps1

    - |
        echo "+++ Checking site...."
        python setup.py build_sphinx

    - |
        echo "+++  Checking archives for PyPI repo..."
        python setup.py sdist bdist_wheel

    -   IF "%PYTHON_VERSION%"=="3.4" (
            echo "+++ Checking all TCs, DTs & Coverage...." &
            python setup.py test_all
        ) ELSE (
            echo "+++ Checking only TCs...." &
            python setup.py test_code
        )


    - |
        echo "+++ Checking install...."
        python setup.py install

## Needs repo-token and this would be different per user.
#on_success:
#    - IF "%PYTHON_VERSION%"=="3.4" (coveralls)
