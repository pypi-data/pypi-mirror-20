- name: "Provision/Teardown resource by looping on count"
  gce:
    name: "{{ res_def['res_name'] }}"
    num_instances: "{{ res_def['count'] | default(omit)}}"
    zone: "{{ res_def['region'] }}"
    machine_type: "{{ res_def['flavor']  }}"
    image: "{{ res_def['image']  }}"
    state: "{{ state }}"
    service_account_email: "{{ client_email }}"
    credentials_file: "{{ credentials_file | default('roles/gcloud/vars/'+res_grp['assoc_creds']+'.json') }}"
    project_id: "{{ project_id }}"
  register: res_def_output
  when: async == false

- name: "Appending outputitem to topology_outputs"
  set_fact:
    topology_outputs_gce: "{{ topology_outputs_gce + [res_def_output] }}"
  when: async == false

- name: "Async:: Provision/Teardown resource by looping on count"
  gce:
    name: "{{ res_def['res_name'] }}"
    num_instances: "{{ res_def['count'] | default(omit)}}"
    zone: "{{ res_def['region'] }}"
    machine_type: "{{ res_def['flavor']  }}"
    image: "{{ res_def['image']  }}"
    state: "{{ state }}"
    service_account_email: "{{ client_email }}"
    credentials_file: "{{ credentials_file | default('roles/gcloud/vars/'+res_grp['assoc_creds']+'.json') }}"
    project_id: "{{ project_id }}"
  register: res_def_output
  when: async == true
  async: "{{ async_timeout }}"
  poll: 0

- name: "Appending outputitem to topology_outputs"
  set_fact:
    topology_outputs_gce: "{{ topology_outputs_gce + [ res_def_output ] }}"
  when: async == true
